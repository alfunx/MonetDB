RELEASE NOTES
MonetDB JDBC driver version 2.23 (Liberica/MCL-1.13)
Release date: 2016-07-13

This JDBC driver is designed for use with MonetDB, a main-memory
database.  For more information see https://www.monetdb.org/.

Within the current implementation not all functionalities of the JDBC
interface are available.  It is believed, however, that this
implementation is rich enough to be suitable for a majority of
application settings.
Note that this driver is JDBC4 compatible, and hence cannot be compiled
with Java 1.5 and earlier.
As of Jul2015 release we compile the java sources to target: Java 1.7.

Below a list of supported features can be found.  Please read this list
if you intend to use this driver.

If you feel some features are missing or have encountered an issue/bug,
please let us know at our bugtracker:
  https://bugs.monetdb.org/Developers/ReportingABug

Currently implemented JDBC interfaces:
  * java.sql.Driver

  * javax.sql.DataSource (not tested)

  * java.sql.Connection
    The next features/methods are NOT implemented:
    - createStatement with result set holdability
    - nativeSQL (there is no query parsing for JDBC escapes yet)
    - prepareCall (CallableStatement not supported)
    - prepareStatement with column indices or names
    - setCatalog (there is no catalog)
    - setHoldability (close/hold cursors over commit is not
      configurable)
    - isReadOnly/setReadOnly (updateable result sets are not supported at
      all)
    - createArrayOf
    - createBlob, createClob, createNClob
    - createStruct
    - createSQLXML
  NOTE: be sure to check for warnings after setting concurrencies or
        isolation levels; MonetDB currently does not support anything
        else but "fully serializable" transactions.

  * java.sql.DatabaseMetaData

  * java.sql.Statement
    The next features/methods are NOT implemented:
    - cancel/getQueryTimeout/setQueryTimeout (query execution cannot be
      terminated, once started)
    - execute with column indices or names
    - executeUpdate with column indices or names
    - getMaxFieldSize/setMaxFieldSize
    - setCursorName
    - setEscapeProcessing

  * java.sql.PreparedStatement
    The next features/methods are NOT implemented:
    - setArray
    - setAsciiStream, setBinaryStream, setUnicodeStream
    - setBlob, setNClob, setNString
    - setRef, setRowId, setSQLXML, setURL

  * java.sql.ParameterMetaData

  * java.sql.ResultSet
    The next features/methods are NOT implemented:
    - getArray
    - getAsciiStream, getBinaryStream, getUnicodeStream
    - getRef, getURL
    - all methods related to updateable result sets

  * java.sql.ResultSetMetaData

  * java.sql.SavePoint

  * java.sql.Blob
    A simple implementation using a byte[] to store the whole BLOB
    The next features/methods are NOT implemented:
    - setBinaryStream

  * java.sql.Clob
    A simple implementation using a StringBuilder to store the whole CLOB
    The next features/methods are NOT implemented:
    - getAsciiStream
    - getCharacterStream
    - setAsciiStream
    - setCharacterStream


- Auto-commit behaviour is defined by the server which handles the
  auto-commit.  This is in general in line with the JDBC standard.

