
## This file is generated by autogen.py, do not edit
## Process this file with automake to produce Makefile.in
## autogen includes dependencies so automake doesn't need to generated them

AUTOMAKE_OPTIONS = no-dependencies 1.4 foreign

libmal_la_CFLAGS=-DLIBMAL $(AM_CFLAGS)
maldir = $(libdir)
libmal_la-mal.lo: mal.c mal.h ../../gdk/gdk.h mal_stack.h mal_linker.h mal_authorize.h mal_instruction.h mal_type.h mal_namespace.h mal_client.h mal_resolve.h mal_exception.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_scenario.h mal_import.h mal_utils.h mal_parser.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_sabaoth.h ../../common/utils/msabaoth.h mal_dataflow.h mal_private.h mal_resource.h ../../gdk/gdk_atomic.h ../optimizer/opt_statistics.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_CFLAGS) -c -o libmal_la-mal.lo `test -f 'mal.c' || echo '$(srcdir)/'`mal.c
libmal_la-mal_atom.lo: mal_atom.c mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_atom.h mal_exception.h mal_errors.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_atom_CFLAGS) -c -o libmal_la-mal_atom.lo `test -f 'mal_atom.c' || echo '$(srcdir)/'`mal_atom.c
libmal_la-mal_authorize.lo: mal_authorize.c mal_authorize.h mal.h ../../gdk/gdk.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_client.h mal_resolve.h mal_exception.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_private.h ../../common/utils/mcrypt.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_authorize_CFLAGS) -c -o libmal_la-mal_authorize.lo `test -f 'mal_authorize.c' || echo '$(srcdir)/'`mal_authorize.c
libmal_la-mal_builder.lo: mal_builder.c mal_builder.h mal.h ../../gdk/gdk.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_function.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_builder_CFLAGS) -c -o libmal_la-mal_builder.lo `test -f 'mal_builder.c' || echo '$(srcdir)/'`mal_builder.c
libmal_la-mal_client.lo: mal_client.c mal_client.h mal.h ../../gdk/gdk.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_readline.h mal_import.h mal_session.h mal_scenario.h mal_utils.h mal_parser.h mal_private.h mal_runtime.h mal_authorize.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_client_CFLAGS) -c -o libmal_la-mal_client.lo `test -f 'mal_client.c' || echo '$(srcdir)/'`mal_client.c
libmal_la-mal_debugger.lo: mal_debugger.c mal.h ../../gdk/gdk.h mal_readline.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_debugger.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_linker.h mal_parser.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_debugger_CFLAGS) -c -o libmal_la-mal_debugger.lo `test -f 'mal_debugger.c' || echo '$(srcdir)/'`mal_debugger.c
libmal_la-mal_exception.lo: mal_exception.c mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_exception_CFLAGS) -c -o libmal_la-mal_exception.lo `test -f 'mal_exception.c' || echo '$(srcdir)/'`mal_exception.c
libmal_la-mal_factory.lo: mal_factory.c mal_factory.h mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_recycle.h mal_runtime.h mal_session.h mal_scenario.h mal_import.h mal_utils.h mal_debugger.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_factory_CFLAGS) -c -o libmal_la-mal_factory.lo `test -f 'mal_factory.c' || echo '$(srcdir)/'`mal_factory.c
libmal_la-mal_function.lo: mal_function.c mal_function.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_interpreter.h mal_client.h mal_profiler.h mal_factory.h mal_recycle.h mal_runtime.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_function_CFLAGS) -c -o libmal_la-mal_function.lo `test -f 'mal_function.c' || echo '$(srcdir)/'`mal_function.c
libmal_la-mal_import.lo: mal_import.c mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_scenario.h mal_utils.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_linker.h mal_parser.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_import_CFLAGS) -c -o libmal_la-mal_import.lo `test -f 'mal_import.c' || echo '$(srcdir)/'`mal_import.c
libmal_la-mal_runtime.lo: mal_runtime.c mal_utils.h mal.h ../../gdk/gdk.h mal_runtime.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_factory.h mal_recycle.h mal_authorize.h mal_resource.h ../../gdk/gdk_atomic.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_runtime_CFLAGS) -c -o libmal_la-mal_runtime.lo `test -f 'mal_runtime.c' || echo '$(srcdir)/'`mal_runtime.c
libmal_la-mal_instruction.lo: mal_instruction.c mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_function.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_utils.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_instruction_CFLAGS) -c -o libmal_la-mal_instruction.lo `test -f 'mal_instruction.c' || echo '$(srcdir)/'`mal_instruction.c
libmal_la-mal_resource.lo: mal_resource.c mal_resource.h mal_interpreter.h mal_client.h mal.h ../../gdk/gdk.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_factory.h mal_recycle.h mal_runtime.h ../../gdk/gdk_atomic.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_resource_CFLAGS) -c -o libmal_la-mal_resource.lo `test -f 'mal_resource.c' || echo '$(srcdir)/'`mal_resource.c
libmal_la-mal_interpreter.lo: mal_interpreter.c mal_runtime.h mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_factory.h mal_recycle.h mal_resource.h ../../gdk/gdk_atomic.h mal_debugger.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_interpreter_CFLAGS) -c -o libmal_la-mal_interpreter.lo `test -f 'mal_interpreter.c' || echo '$(srcdir)/'`mal_interpreter.c
libmal_la-mal_dataflow.lo: mal_dataflow.c mal_dataflow.h mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_private.h mal_runtime.h mal_resource.h mal_interpreter.h mal_factory.h mal_recycle.h ../../gdk/gdk_atomic.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_dataflow_CFLAGS) -c -o libmal_la-mal_dataflow.lo `test -f 'mal_dataflow.c' || echo '$(srcdir)/'`mal_dataflow.c
libmal_la-mal_linker.lo: mal_linker.c mal_module.h mal.h ../../gdk/gdk.h mal_linker.h mal_function.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_import.h mal_client.h mal_profiler.h mal_session.h mal_scenario.h mal_utils.h mal_private.h ../../common/utils/mutils.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_linker_CFLAGS) -c -o libmal_la-mal_linker.lo `test -f 'mal_linker.c' || echo '$(srcdir)/'`mal_linker.c
libmal_la-mal_listing.lo: mal_listing.c mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_function.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_utils.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_listing_CFLAGS) -c -o libmal_la-mal_listing.lo `test -f 'mal_listing.c' || echo '$(srcdir)/'`mal_listing.c
libmal_la-mal_module.lo: mal_module.c mal_module.h mal.h ../../gdk/gdk.h mal_function.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_client.h mal_profiler.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_module_CFLAGS) -c -o libmal_la-mal_module.lo `test -f 'mal_module.c' || echo '$(srcdir)/'`mal_module.c
libmal_la-mal_namespace.lo: mal_namespace.c mal_type.h mal.h ../../gdk/gdk.h mal_namespace.h mal_exception.h mal_instruction.h mal_stack.h mal_errors.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_namespace_CFLAGS) -c -o libmal_la-mal_namespace.lo `test -f 'mal_namespace.c' || echo '$(srcdir)/'`mal_namespace.c
libmal_la-mal_parser.lo: mal_parser.c mal_parser.h mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_scenario.h mal_utils.h mal_linker.h mal_atom.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_builder.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_parser_CFLAGS) -c -o libmal_la-mal_parser.lo `test -f 'mal_parser.c' || echo '$(srcdir)/'`mal_parser.c
libmal_la-mal_profiler.lo: mal_profiler.c mal_function.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_profiler.h mal_client.h mal_runtime.h mal_debugger.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_resource.h mal_interpreter.h mal_factory.h mal_recycle.h ../../gdk/gdk_atomic.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_profiler_CFLAGS) -c -o libmal_la-mal_profiler.lo `test -f 'mal_profiler.c' || echo '$(srcdir)/'`mal_profiler.c
libmal_la-mal_readline.lo: mal_readline.c mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_readline.h mal_debugger.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_readline_CFLAGS) -c -o libmal_la-mal_readline.lo `test -f 'mal_readline.c' || echo '$(srcdir)/'`mal_readline.c
libmal_la-mal_recycle.lo: mal_recycle.c mal_recycle.h mal.h ../../gdk/gdk.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_runtime.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_factory.h mal_resource.h ../../gdk/gdk_atomic.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_recycle_CFLAGS) -c -o libmal_la-mal_recycle.lo `test -f 'mal_recycle.c' || echo '$(srcdir)/'`mal_recycle.c
libmal_la-mal_resolve.lo: mal_resolve.c mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_resolve_CFLAGS) -c -o libmal_la-mal_resolve.lo `test -f 'mal_resolve.c' || echo '$(srcdir)/'`mal_resolve.c
libmal_la-mal_sabaoth.lo: mal_sabaoth.c mal_sabaoth.h mal.h ../../gdk/gdk.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h ../../common/utils/msabaoth.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_sabaoth_CFLAGS) -c -o libmal_la-mal_sabaoth.lo `test -f 'mal_sabaoth.c' || echo '$(srcdir)/'`mal_sabaoth.c
libmal_la-mal_scenario.lo: mal_scenario.c mal_scenario.h mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_utils.h mal_linker.h mal_authorize.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_scenario_CFLAGS) -c -o libmal_la-mal_scenario.lo `test -f 'mal_scenario.c' || echo '$(srcdir)/'`mal_scenario.c
libmal_la-mal_session.lo: mal_session.c mal_session.h mal_scenario.h mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_utils.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_linker.h mal_parser.h mal_readline.h mal_authorize.h mal_sabaoth.h ../../common/utils/msabaoth.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_session_CFLAGS) -c -o libmal_la-mal_session.lo `test -f 'mal_session.c' || echo '$(srcdir)/'`mal_session.c
libmal_la-mal_stack.lo: mal_stack.c mal_stack.h mal.h ../../gdk/gdk.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_stack_CFLAGS) -c -o libmal_la-mal_stack.lo `test -f 'mal_stack.c' || echo '$(srcdir)/'`mal_stack.c
libmal_la-mal_type.lo: mal_type.c mal_type.h mal.h ../../gdk/gdk.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_type_CFLAGS) -c -o libmal_la-mal_type.lo `test -f 'mal_type.c' || echo '$(srcdir)/'`mal_type.c
libmal_la-mal_utils.lo: mal_utils.c mal_utils.h mal.h ../../gdk/gdk.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_utils_CFLAGS) -c -o libmal_la-mal_utils.lo `test -f 'mal_utils.c' || echo '$(srcdir)/'`mal_utils.c
nodist_libmal_la_SOURCES =
dist_libmal_la_SOURCES = mal.c mal.h mal_atom.c mal_atom.h mal_authorize.c mal_authorize.h mal_builder.c mal_builder.h mal_client.c mal_client.h mal_debugger.c mal_debugger.h mal_errors.h mal_exception.c mal_exception.h mal_factory.c mal_factory.h mal_function.c mal_function.h mal_import.c mal_import.h mal_runtime.c mal_runtime.h mal_instruction.c mal_instruction.h mal_resource.c mal_resource.h mal_interpreter.c mal_interpreter.h mal_dataflow.c mal_dataflow.h mal_linker.c mal_linker.h mal_listing.c mal_listing.h mal_module.c mal_module.h mal_namespace.c mal_namespace.h mal_parser.c mal_parser.h mal_profiler.c mal_profiler.h mal_readline.c mal_readline.h mal_recycle.c mal_recycle.h mal_resolve.c mal_resolve.h mal_sabaoth.c mal_sabaoth.h mal_scenario.c mal_scenario.h mal_session.c mal_session.h mal_stack.c mal_stack.h mal_type.c mal_type.h mal_utils.c mal_utils.h mal_private.h
mal_exception.o mal_exception.lo: mal_exception.c mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_private.h
mal_debugger.o mal_debugger.lo: mal_debugger.c mal.h ../../gdk/gdk.h mal_readline.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_debugger.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_linker.h mal_parser.h mal_private.h
mal_authorize.o mal_authorize.lo: mal_authorize.c mal_authorize.h mal.h ../../gdk/gdk.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_client.h mal_resolve.h mal_exception.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_private.h ../../common/utils/mcrypt.h
mal_linker.o mal_linker.lo: mal_linker.c mal_module.h mal.h ../../gdk/gdk.h mal_linker.h mal_function.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_import.h mal_client.h mal_profiler.h mal_session.h mal_scenario.h mal_utils.h mal_private.h ../../common/utils/mutils.h
mal_type.o mal_type.lo: mal_type.c mal_type.h mal.h ../../gdk/gdk.h
mal_recycle.o mal_recycle.lo: mal_recycle.c mal_recycle.h mal.h ../../gdk/gdk.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_runtime.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_factory.h mal_resource.h ../../gdk/gdk_atomic.h
mal_client.o mal_client.lo: mal_client.c mal_client.h mal.h ../../gdk/gdk.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_readline.h mal_import.h mal_session.h mal_scenario.h mal_utils.h mal_parser.h mal_private.h mal_runtime.h mal_authorize.h
mal_interpreter.o mal_interpreter.lo: mal_interpreter.c mal_runtime.h mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_factory.h mal_recycle.h mal_resource.h ../../gdk/gdk_atomic.h mal_debugger.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_private.h
mal_namespace.o mal_namespace.lo: mal_namespace.c mal_type.h mal.h ../../gdk/gdk.h mal_namespace.h mal_exception.h mal_instruction.h mal_stack.h mal_errors.h mal_private.h
mal_resolve.o mal_resolve.lo: mal_resolve.c mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_private.h
mal_parser.o mal_parser.lo: mal_parser.c mal_parser.h mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_scenario.h mal_utils.h mal_linker.h mal_atom.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_builder.h mal_private.h
mal_module.o mal_module.lo: mal_module.c mal_module.h mal.h ../../gdk/gdk.h mal_function.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_client.h mal_profiler.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_private.h
mal_sabaoth.o mal_sabaoth.lo: mal_sabaoth.c mal_sabaoth.h mal.h ../../gdk/gdk.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h ../../common/utils/msabaoth.h
mal_profiler.o mal_profiler.lo: mal_profiler.c mal_function.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_profiler.h mal_client.h mal_runtime.h mal_debugger.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_resource.h mal_interpreter.h mal_factory.h mal_recycle.h ../../gdk/gdk_atomic.h
mal_runtime.o mal_runtime.lo: mal_runtime.c mal_utils.h mal.h ../../gdk/gdk.h mal_runtime.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_factory.h mal_recycle.h mal_authorize.h mal_resource.h ../../gdk/gdk_atomic.h mal_private.h
mal_utils.o mal_utils.lo: mal_utils.c mal_utils.h mal.h ../../gdk/gdk.h
mal_instruction.o mal_instruction.lo: mal_instruction.c mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_function.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_utils.h
mal_listing.o mal_listing.lo: mal_listing.c mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_function.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_utils.h
mal_function.o mal_function.lo: mal_function.c mal_function.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_interpreter.h mal_client.h mal_profiler.h mal_factory.h mal_recycle.h mal_runtime.h mal_private.h
mal_import.o mal_import.lo: mal_import.c mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_scenario.h mal_utils.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_linker.h mal_parser.h mal_private.h
mal_readline.o mal_readline.lo: mal_readline.c mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_readline.h mal_debugger.h
mal_resource.o mal_resource.lo: mal_resource.c mal_resource.h mal_interpreter.h mal_client.h mal.h ../../gdk/gdk.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_factory.h mal_recycle.h mal_runtime.h ../../gdk/gdk_atomic.h mal_private.h
mal_dataflow.o mal_dataflow.lo: mal_dataflow.c mal_dataflow.h mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_private.h mal_runtime.h mal_resource.h mal_interpreter.h mal_factory.h mal_recycle.h ../../gdk/gdk_atomic.h
mal_builder.o mal_builder.lo: mal_builder.c mal_builder.h mal.h ../../gdk/gdk.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_function.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h
mal_session.o mal_session.lo: mal_session.c mal_session.h mal_scenario.h mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_utils.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_linker.h mal_parser.h mal_readline.h mal_authorize.h mal_sabaoth.h ../../common/utils/msabaoth.h mal_private.h
mal_atom.o mal_atom.lo: mal_atom.c mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_atom.h mal_exception.h mal_errors.h mal_private.h
mal.o mal.lo: mal.c mal.h ../../gdk/gdk.h mal_stack.h mal_linker.h mal_authorize.h mal_instruction.h mal_type.h mal_namespace.h mal_client.h mal_resolve.h mal_exception.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_scenario.h mal_import.h mal_utils.h mal_parser.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_sabaoth.h ../../common/utils/msabaoth.h mal_dataflow.h mal_private.h mal_resource.h ../../gdk/gdk_atomic.h ../optimizer/opt_statistics.h
mal_stack.o mal_stack.lo: mal_stack.c mal_stack.h mal.h ../../gdk/gdk.h
mal_scenario.o mal_scenario.lo: mal_scenario.c mal_scenario.h mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_utils.h mal_linker.h mal_authorize.h mal_private.h
mal_factory.o mal_factory.lo: mal_factory.c mal_factory.h mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_recycle.h mal_runtime.h mal_session.h mal_scenario.h mal_import.h mal_utils.h mal_debugger.h mal_private.h
dist-hook:
	mkdir -p $(distdir)/Tests
	cp -pR $(srcdir)/Tests/* $(distdir)/Tests
CFLAGS += $(THREAD_SAVE_FLAGS)
install-exec-local-mal_exception.h: mal_exception.h
	-mkdir -p $(DESTDIR)$(includedir)/monetdb
	-$(RM) $(DESTDIR)$(includedir)/monetdb/mal_exception.h
	$(INSTALL_DATA) $< $(DESTDIR)$(includedir)/monetdb/mal_exception.h

uninstall-local-mal_exception.h: 
	$(RM) $(DESTDIR)$(includedir)/monetdb/mal_exception.h

install-exec-local-mal_type.h: mal_type.h
	-mkdir -p $(DESTDIR)$(includedir)/monetdb
	-$(RM) $(DESTDIR)$(includedir)/monetdb/mal_type.h
	$(INSTALL_DATA) $< $(DESTDIR)$(includedir)/monetdb/mal_type.h

uninstall-local-mal_type.h: 
	$(RM) $(DESTDIR)$(includedir)/monetdb/mal_type.h

install-exec-local-mal_errors.h: mal_errors.h
	-mkdir -p $(DESTDIR)$(includedir)/monetdb
	-$(RM) $(DESTDIR)$(includedir)/monetdb/mal_errors.h
	$(INSTALL_DATA) $< $(DESTDIR)$(includedir)/monetdb/mal_errors.h

uninstall-local-mal_errors.h: 
	$(RM) $(DESTDIR)$(includedir)/monetdb/mal_errors.h

install-exec-local-mal_namespace.h: mal_namespace.h
	-mkdir -p $(DESTDIR)$(includedir)/monetdb
	-$(RM) $(DESTDIR)$(includedir)/monetdb/mal_namespace.h
	$(INSTALL_DATA) $< $(DESTDIR)$(includedir)/monetdb/mal_namespace.h

uninstall-local-mal_namespace.h: 
	$(RM) $(DESTDIR)$(includedir)/monetdb/mal_namespace.h

install-exec-local-mal_stack.h: mal_stack.h
	-mkdir -p $(DESTDIR)$(includedir)/monetdb
	-$(RM) $(DESTDIR)$(includedir)/monetdb/mal_stack.h
	$(INSTALL_DATA) $< $(DESTDIR)$(includedir)/monetdb/mal_stack.h

uninstall-local-mal_stack.h: 
	$(RM) $(DESTDIR)$(includedir)/monetdb/mal_stack.h

install-exec-local-mal_instruction.h: mal_instruction.h
	-mkdir -p $(DESTDIR)$(includedir)/monetdb
	-$(RM) $(DESTDIR)$(includedir)/monetdb/mal_instruction.h
	$(INSTALL_DATA) $< $(DESTDIR)$(includedir)/monetdb/mal_instruction.h

uninstall-local-mal_instruction.h: 
	$(RM) $(DESTDIR)$(includedir)/monetdb/mal_instruction.h

install-exec-local-mal.h: mal.h
	-mkdir -p $(DESTDIR)$(includedir)/monetdb
	-$(RM) $(DESTDIR)$(includedir)/monetdb/mal.h
	$(INSTALL_DATA) $< $(DESTDIR)$(includedir)/monetdb/mal.h

uninstall-local-mal.h: 
	$(RM) $(DESTDIR)$(includedir)/monetdb/mal.h

AM_CPPFLAGS = -I$(srcdir) -I../../common/options -I$(srcdir)/../../common/options -I../../common/stream -I$(srcdir)/../../common/stream -I../../common/utils -I$(srcdir)/../../common/utils -I../../clients/mapilib -I$(srcdir)/../../clients/mapilib -I../../gdk -I$(srcdir)/../../gdk -I../optimizer -I$(srcdir)/../optimizer $(openssl_CFLAGS) $(READLINE_INCS)
BUILT_SOURCES =
MOSTLYCLEANFILES =
EXTRA_DIST = Makefile.ag Makefile.msc mal.c mal.h mal_atom.c mal_atom.h mal_authorize.c mal_authorize.h mal_builder.c mal_builder.h mal_client.c mal_client.h mal_dataflow.c mal_dataflow.h mal_debugger.c mal_debugger.h mal_errors.h mal_exception.c mal_exception.h mal_factory.c mal_factory.h mal_function.c mal_function.h mal_import.c mal_import.h mal_instruction.c mal_instruction.h mal_interpreter.c mal_interpreter.h mal_linker.c mal_linker.h mal_listing.c mal_listing.h mal_module.c mal_module.h mal_namespace.c mal_namespace.h mal_parser.c mal_parser.h mal_private.h mal_profiler.c mal_profiler.h mal_readline.c mal_readline.h mal_recycle.c mal_recycle.h mal_resolve.c mal_resolve.h mal_resource.c mal_resource.h mal_runtime.c mal_runtime.h mal_sabaoth.c mal_sabaoth.h mal_scenario.c mal_scenario.h mal_session.c mal_session.h mal_stack.c mal_stack.h mal_type.c mal_type.h mal_utils.c mal_utils.h
noinst_LTLIBRARIES = libmal.la
install-malLTLIBRARIES:
uninstall-local: uninstall-local-mal.h uninstall-local-mal_errors.h uninstall-local-mal_exception.h uninstall-local-mal_instruction.h uninstall-local-mal_namespace.h uninstall-local-mal_stack.h uninstall-local-mal_type.h
install-exec-local: install-exec-local-mal.h install-exec-local-mal_errors.h install-exec-local-mal_exception.h install-exec-local-mal_instruction.h install-exec-local-mal_namespace.h install-exec-local-mal_stack.h install-exec-local-mal_type.h

  include $(top_srcdir)/buildtools/conf/rules.mk
