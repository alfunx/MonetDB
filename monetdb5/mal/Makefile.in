# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = monetdb5/mal
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/buildtools/conf/libtool.m4 \
	$(top_srcdir)/buildtools/conf/ltoptions.m4 \
	$(top_srcdir)/buildtools/conf/ltsugar.m4 \
	$(top_srcdir)/buildtools/conf/ltversion.m4 \
	$(top_srcdir)/buildtools/conf/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/monetdb_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libmal_la_LIBADD =
dist_libmal_la_OBJECTS = libmal_la-mal.lo libmal_la-mal_atom.lo \
	libmal_la-mal_authorize.lo libmal_la-mal_builder.lo \
	libmal_la-mal_client.lo libmal_la-mal_debugger.lo \
	libmal_la-mal_exception.lo libmal_la-mal_factory.lo \
	libmal_la-mal_function.lo libmal_la-mal_import.lo \
	libmal_la-mal_runtime.lo libmal_la-mal_instruction.lo \
	libmal_la-mal_resource.lo libmal_la-mal_interpreter.lo \
	libmal_la-mal_dataflow.lo libmal_la-mal_linker.lo \
	libmal_la-mal_listing.lo libmal_la-mal_module.lo \
	libmal_la-mal_namespace.lo libmal_la-mal_parser.lo \
	libmal_la-mal_profiler.lo libmal_la-mal_readline.lo \
	libmal_la-mal_recycle.lo libmal_la-mal_resolve.lo \
	libmal_la-mal_sabaoth.lo libmal_la-mal_scenario.lo \
	libmal_la-mal_session.lo libmal_la-mal_stack.lo \
	libmal_la-mal_type.lo libmal_la-mal_utils.lo
nodist_libmal_la_OBJECTS =
libmal_la_OBJECTS = $(dist_libmal_la_OBJECTS) \
	$(nodist_libmal_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libmal_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libmal_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(dist_libmal_la_SOURCES) $(nodist_libmal_la_SOURCES)
DIST_SOURCES = $(dist_libmal_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
ANT = @ANT@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BASH = @BASH@
BUILD = @BUILD@
BZ_CFLAGS = @BZ_CFLAGS@
BZ_LIBS = @BZ_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@ $(THREAD_SAVE_FLAGS)
CLASSPATH = @CLASSPATH@
CONFIG_H = @CONFIG_H@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
CYGPATH_WP = @CYGPATH_WP@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DIFF = @DIFF@
DIRSEP = @DIRSEP@
DLLTOOL = @DLLTOOL@
DL_LIBS = @DL_LIBS@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
Ebindir = @Ebindir@
Elocalstatedir = @Elocalstatedir@
Elogdir = @Elogdir@
Erundir = @Erundir@
FGREP = @FGREP@
GDAL_CFLAGS = @GDAL_CFLAGS@
GDAL_LIBS = @GDAL_LIBS@
GDK_VERSION = @GDK_VERSION@
GEOS_CONFIG = @GEOS_CONFIG@
GEOS_INCS = @GEOS_INCS@
GEOS_LIBS = @GEOS_LIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_BACKUP = @INSTALL_BACKUP@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAR = @JAR@
JAVA = @JAVA@
JAVAC = @JAVAC@
JAVACFLAGS = @JAVACFLAGS@
JAVADOC = @JAVADOC@
JAVA_HOME = @JAVA_HOME@
JAVA_VERSION = @JAVA_VERSION@
KVM_LIBS = @KVM_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBLAS_CONFIG = @LIBLAS_CONFIG@
LIBLAS_INCS = @LIBLAS_INCS@
LIBLAS_LIBS = @LIBLAS_LIBS@
LIBLAS_RPM = @LIBLAS_RPM@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LINUX_DIST = @LINUX_DIST@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBICONV = @LTLIBICONV@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MALLOC_LIBS = @MALLOC_LIBS@
MANIFEST_TOOL = @MANIFEST_TOOL@
MAPI_VERSION = @MAPI_VERSION@
MATH_LIBS = @MATH_LIBS@
MKDIR_P = @MKDIR_P@
MONETDB5_PASSWDHASH = @MONETDB5_PASSWDHASH@
MONETDB5_VERSION = @MONETDB5_VERSION@
MSGCONTROL_FLAGS = @MSGCONTROL_FLAGS@
MV = @MV@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ODBCINST_LIBS = @ODBCINST_LIBS@
ODBC_INCS = @ODBC_INCS@
ODBC_LIBS = @ODBC_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATHSEP = @PATHSEP@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PERL_LIBDIR = @PERL_LIBDIR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PKG_CURL = @PKG_CURL@
PKG_LIBLZMA = @PKG_LIBLZMA@
PKG_ZLIB = @PKG_ZLIB@
PROJ_INCS = @PROJ_INCS@
PROJ_LIBS = @PROJ_LIBS@
PTHREAD_INCS = @PTHREAD_INCS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PYTHON = @PYTHON@
PYTHON2 = @PYTHON2@
PYTHON2_LIBDIR = @PYTHON2_LIBDIR@
PYTHON3 = @PYTHON3@
PYTHON3_LIBDIR = @PYTHON3_LIBDIR@
QBUILD = @QBUILD@
QDIRSEP = @QDIRSEP@
QSOURCE = @QSOURCE@
QXBUILD = @QXBUILD@
QXPERL_LIBDIR = @QXPERL_LIBDIR@
QXPYTHON2 = @QXPYTHON2@
QXPYTHON2_LIBDIR = @QXPYTHON2_LIBDIR@
QXPYTHON3 = @QXPYTHON3@
QXPYTHON3_LIBDIR = @QXPYTHON3_LIBDIR@
QXSOURCE = @QXSOURCE@
QXbindir = @QXbindir@
QXdatadir = @QXdatadir@
QXdatarootdir = @QXdatarootdir@
QXexec_prefix = @QXexec_prefix@
QXincludedir = @QXincludedir@
QXinfodir = @QXinfodir@
QXlibdir = @QXlibdir@
QXlibexecdir = @QXlibexecdir@
QXlocalstatedir = @QXlocalstatedir@
QXmandir = @QXmandir@
QXprefix = @QXprefix@
QXsrcdir = @QXsrcdir@
QXsysconfdir = @QXsysconfdir@
Qbindir = @Qbindir@
Qdatadir = @Qdatadir@
Qdatarootdir = @Qdatarootdir@
Qexec_prefix = @Qexec_prefix@
Qincludedir = @Qincludedir@
Qinfodir = @Qinfodir@
Qlibdir = @Qlibdir@
Qlibexecdir = @Qlibexecdir@
Qlocalstatedir = @Qlocalstatedir@
Qmandir = @Qmandir@
Qprefix = @Qprefix@
Qsrcdir = @Qsrcdir@
Qsysconfdir = @Qsysconfdir@
RANLIB = @RANLIB@
RCMD = @RCMD@
READLINE_INCS = @READLINE_INCS@
READLINE_LIBS = @READLINE_LIBS@
READLINK = @READLINK@
RHOME = @RHOME@
RM = @RM@
RPMBUILD = @RPMBUILD@
SAMTOOLS_CFLAGS = @SAMTOOLS_CFLAGS@
SAMTOOLS_LIBS = @SAMTOOLS_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SOCKET_LIBS = @SOCKET_LIBS@
SOEXT = @SOEXT@
SOURCE = @SOURCE@
SPHINXCLIENT_CFLAGS = @SPHINXCLIENT_CFLAGS@
SPHINXCLIENT_LIBS = @SPHINXCLIENT_LIBS@
STREAM_VERSION = @STREAM_VERSION@
STRIP = @STRIP@
THREAD_SAVE_FLAGS = @THREAD_SAVE_FLAGS@
UUID_LIBS = @UUID_LIBS@
VERSION = @VERSION@
XBUILD = @XBUILD@
XSOURCE = @XSOURCE@
X_CFLAGS = @X_CFLAGS@
Xbindir = @Xbindir@
Xdatadir = @Xdatadir@
Xdatarootdir = @Xdatarootdir@
Xexec_prefix = @Xexec_prefix@
Xincludedir = @Xincludedir@
Xinfodir = @Xinfodir@
Xlibdir = @Xlibdir@
Xlibexecdir = @Xlibexecdir@
Xlocalstatedir = @Xlocalstatedir@
Xmandir = @Xmandir@
Xprefix = @Xprefix@
Xsrcdir = @Xsrcdir@
Xsysconfdir = @Xsysconfdir@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
anttranslatepath = @anttranslatepath@
atomic_ops_CFLAGS = @atomic_ops_CFLAGS@
atomic_ops_LIBS = @atomic_ops_LIBS@
bindir = @bindir@
bits = @bits@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
builtby = @builtby@
cfitsio_CFLAGS = @cfitsio_CFLAGS@
cfitsio_LIBS = @cfitsio_LIBS@
compilercall = @compilercall@
curl_CFLAGS = @curl_CFLAGS@
curl_LIBS = @curl_LIBS@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
gdal_CFLAGS = @gdal_CFLAGS@
gdal_LIBS = @gdal_LIBS@
gsl_CFLAGS = @gsl_CFLAGS@
gsl_LIBS = @gsl_LIBS@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
liblzma_CFLAGS = @liblzma_CFLAGS@
liblzma_LIBS = @liblzma_LIBS@
libmicrohttpd_CFLAGS = @libmicrohttpd_CFLAGS@
libmicrohttpd_LIBS = @libmicrohttpd_LIBS@
libr_CFLAGS = @libr_CFLAGS@
libr_LIBS = @libr_LIBS@
libxml2_CFLAGS = @libxml2_CFLAGS@
libxml2_LIBS = @libxml2_LIBS@
libxml2version = @libxml2version@
linkercall = @linkercall@
localedir = @localedir@
localstatedir = @localstatedir@
logdir = @logdir@
mandir = @mandir@
mkdir_p = @mkdir_p@
netcdf_CFLAGS = @netcdf_CFLAGS@
netcdf_LIBS = @netcdf_LIBS@
oids = @oids@
oldincludedir = @oldincludedir@
openssl_CFLAGS = @openssl_CFLAGS@
openssl_LIBS = @openssl_LIBS@
opensslversion = @opensslversion@
pcre_CFLAGS = @pcre_CFLAGS@
pcre_LIBS = @pcre_LIBS@
pcreversion = @pcreversion@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
rundir = @rundir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
thread_safe_flag_spec = @thread_safe_flag_spec@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
translatepath = @translatepath@
valgrind_CFLAGS = @valgrind_CFLAGS@
valgrind_LIBS = @valgrind_LIBS@
zlib_CFLAGS = @zlib_CFLAGS@
zlib_LIBS = @zlib_LIBS@
AUTOMAKE_OPTIONS = no-dependencies 1.4 foreign
libmal_la_CFLAGS = -DLIBMAL $(AM_CFLAGS)
maldir = $(libdir)
nodist_libmal_la_SOURCES = 
dist_libmal_la_SOURCES = mal.c mal.h mal_atom.c mal_atom.h mal_authorize.c mal_authorize.h mal_builder.c mal_builder.h mal_client.c mal_client.h mal_debugger.c mal_debugger.h mal_errors.h mal_exception.c mal_exception.h mal_factory.c mal_factory.h mal_function.c mal_function.h mal_import.c mal_import.h mal_runtime.c mal_runtime.h mal_instruction.c mal_instruction.h mal_resource.c mal_resource.h mal_interpreter.c mal_interpreter.h mal_dataflow.c mal_dataflow.h mal_linker.c mal_linker.h mal_listing.c mal_listing.h mal_module.c mal_module.h mal_namespace.c mal_namespace.h mal_parser.c mal_parser.h mal_profiler.c mal_profiler.h mal_readline.c mal_readline.h mal_recycle.c mal_recycle.h mal_resolve.c mal_resolve.h mal_sabaoth.c mal_sabaoth.h mal_scenario.c mal_scenario.h mal_session.c mal_session.h mal_stack.c mal_stack.h mal_type.c mal_type.h mal_utils.c mal_utils.h mal_private.h
AM_CPPFLAGS = -I$(srcdir) -I../../common/options -I$(srcdir)/../../common/options -I../../common/stream -I$(srcdir)/../../common/stream -I../../common/utils -I$(srcdir)/../../common/utils -I../../clients/mapilib -I$(srcdir)/../../clients/mapilib -I../../gdk -I$(srcdir)/../../gdk -I../optimizer -I$(srcdir)/../optimizer $(openssl_CFLAGS) $(READLINE_INCS)
BUILT_SOURCES = 
MOSTLYCLEANFILES = 
EXTRA_DIST = Makefile.ag Makefile.msc mal.c mal.h mal_atom.c mal_atom.h mal_authorize.c mal_authorize.h mal_builder.c mal_builder.h mal_client.c mal_client.h mal_dataflow.c mal_dataflow.h mal_debugger.c mal_debugger.h mal_errors.h mal_exception.c mal_exception.h mal_factory.c mal_factory.h mal_function.c mal_function.h mal_import.c mal_import.h mal_instruction.c mal_instruction.h mal_interpreter.c mal_interpreter.h mal_linker.c mal_linker.h mal_listing.c mal_listing.h mal_module.c mal_module.h mal_namespace.c mal_namespace.h mal_parser.c mal_parser.h mal_private.h mal_profiler.c mal_profiler.h mal_readline.c mal_readline.h mal_recycle.c mal_recycle.h mal_resolve.c mal_resolve.h mal_resource.c mal_resource.h mal_runtime.c mal_runtime.h mal_sabaoth.c mal_sabaoth.h mal_scenario.c mal_scenario.h mal_session.c mal_session.h mal_stack.c mal_stack.h mal_type.c mal_type.h mal_utils.c mal_utils.h
noinst_LTLIBRARIES = libmal.la
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign monetdb5/mal/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign monetdb5/mal/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libmal.la: $(libmal_la_OBJECTS) $(libmal_la_DEPENDENCIES) $(EXTRA_libmal_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libmal_la_LINK)  $(libmal_la_OBJECTS) $(libmal_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-exec-local

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-local

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES cscopelist-am ctags \
	ctags-am dist-hook distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-local install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-local

.PRECIOUS: Makefile

libmal_la-mal.lo: mal.c mal.h ../../gdk/gdk.h mal_stack.h mal_linker.h mal_authorize.h mal_instruction.h mal_type.h mal_namespace.h mal_client.h mal_resolve.h mal_exception.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_scenario.h mal_import.h mal_utils.h mal_parser.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_sabaoth.h ../../common/utils/msabaoth.h mal_dataflow.h mal_private.h mal_resource.h ../../gdk/gdk_atomic.h ../optimizer/opt_statistics.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_CFLAGS) -c -o libmal_la-mal.lo `test -f 'mal.c' || echo '$(srcdir)/'`mal.c
libmal_la-mal_atom.lo: mal_atom.c mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_atom.h mal_exception.h mal_errors.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_atom_CFLAGS) -c -o libmal_la-mal_atom.lo `test -f 'mal_atom.c' || echo '$(srcdir)/'`mal_atom.c
libmal_la-mal_authorize.lo: mal_authorize.c mal_authorize.h mal.h ../../gdk/gdk.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_client.h mal_resolve.h mal_exception.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_private.h ../../common/utils/mcrypt.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_authorize_CFLAGS) -c -o libmal_la-mal_authorize.lo `test -f 'mal_authorize.c' || echo '$(srcdir)/'`mal_authorize.c
libmal_la-mal_builder.lo: mal_builder.c mal_builder.h mal.h ../../gdk/gdk.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_function.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_builder_CFLAGS) -c -o libmal_la-mal_builder.lo `test -f 'mal_builder.c' || echo '$(srcdir)/'`mal_builder.c
libmal_la-mal_client.lo: mal_client.c mal_client.h mal.h ../../gdk/gdk.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_readline.h mal_import.h mal_session.h mal_scenario.h mal_utils.h mal_parser.h mal_private.h mal_runtime.h mal_authorize.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_client_CFLAGS) -c -o libmal_la-mal_client.lo `test -f 'mal_client.c' || echo '$(srcdir)/'`mal_client.c
libmal_la-mal_debugger.lo: mal_debugger.c mal.h ../../gdk/gdk.h mal_readline.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_debugger.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_linker.h mal_parser.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_debugger_CFLAGS) -c -o libmal_la-mal_debugger.lo `test -f 'mal_debugger.c' || echo '$(srcdir)/'`mal_debugger.c
libmal_la-mal_exception.lo: mal_exception.c mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_exception_CFLAGS) -c -o libmal_la-mal_exception.lo `test -f 'mal_exception.c' || echo '$(srcdir)/'`mal_exception.c
libmal_la-mal_factory.lo: mal_factory.c mal_factory.h mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_recycle.h mal_runtime.h mal_session.h mal_scenario.h mal_import.h mal_utils.h mal_debugger.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_factory_CFLAGS) -c -o libmal_la-mal_factory.lo `test -f 'mal_factory.c' || echo '$(srcdir)/'`mal_factory.c
libmal_la-mal_function.lo: mal_function.c mal_function.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_interpreter.h mal_client.h mal_profiler.h mal_factory.h mal_recycle.h mal_runtime.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_function_CFLAGS) -c -o libmal_la-mal_function.lo `test -f 'mal_function.c' || echo '$(srcdir)/'`mal_function.c
libmal_la-mal_import.lo: mal_import.c mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_scenario.h mal_utils.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_linker.h mal_parser.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_import_CFLAGS) -c -o libmal_la-mal_import.lo `test -f 'mal_import.c' || echo '$(srcdir)/'`mal_import.c
libmal_la-mal_runtime.lo: mal_runtime.c mal_utils.h mal.h ../../gdk/gdk.h mal_runtime.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_factory.h mal_recycle.h mal_authorize.h mal_resource.h ../../gdk/gdk_atomic.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_runtime_CFLAGS) -c -o libmal_la-mal_runtime.lo `test -f 'mal_runtime.c' || echo '$(srcdir)/'`mal_runtime.c
libmal_la-mal_instruction.lo: mal_instruction.c mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_function.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_utils.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_instruction_CFLAGS) -c -o libmal_la-mal_instruction.lo `test -f 'mal_instruction.c' || echo '$(srcdir)/'`mal_instruction.c
libmal_la-mal_resource.lo: mal_resource.c mal_resource.h mal_interpreter.h mal_client.h mal.h ../../gdk/gdk.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_factory.h mal_recycle.h mal_runtime.h ../../gdk/gdk_atomic.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_resource_CFLAGS) -c -o libmal_la-mal_resource.lo `test -f 'mal_resource.c' || echo '$(srcdir)/'`mal_resource.c
libmal_la-mal_interpreter.lo: mal_interpreter.c mal_runtime.h mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_factory.h mal_recycle.h mal_resource.h ../../gdk/gdk_atomic.h mal_debugger.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_interpreter_CFLAGS) -c -o libmal_la-mal_interpreter.lo `test -f 'mal_interpreter.c' || echo '$(srcdir)/'`mal_interpreter.c
libmal_la-mal_dataflow.lo: mal_dataflow.c mal_dataflow.h mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_private.h mal_runtime.h mal_resource.h mal_interpreter.h mal_factory.h mal_recycle.h ../../gdk/gdk_atomic.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_dataflow_CFLAGS) -c -o libmal_la-mal_dataflow.lo `test -f 'mal_dataflow.c' || echo '$(srcdir)/'`mal_dataflow.c
libmal_la-mal_linker.lo: mal_linker.c mal_module.h mal.h ../../gdk/gdk.h mal_linker.h mal_function.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_import.h mal_client.h mal_profiler.h mal_session.h mal_scenario.h mal_utils.h mal_private.h ../../common/utils/mutils.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_linker_CFLAGS) -c -o libmal_la-mal_linker.lo `test -f 'mal_linker.c' || echo '$(srcdir)/'`mal_linker.c
libmal_la-mal_listing.lo: mal_listing.c mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_function.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_utils.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_listing_CFLAGS) -c -o libmal_la-mal_listing.lo `test -f 'mal_listing.c' || echo '$(srcdir)/'`mal_listing.c
libmal_la-mal_module.lo: mal_module.c mal_module.h mal.h ../../gdk/gdk.h mal_function.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_client.h mal_profiler.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_module_CFLAGS) -c -o libmal_la-mal_module.lo `test -f 'mal_module.c' || echo '$(srcdir)/'`mal_module.c
libmal_la-mal_namespace.lo: mal_namespace.c mal_type.h mal.h ../../gdk/gdk.h mal_namespace.h mal_exception.h mal_instruction.h mal_stack.h mal_errors.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_namespace_CFLAGS) -c -o libmal_la-mal_namespace.lo `test -f 'mal_namespace.c' || echo '$(srcdir)/'`mal_namespace.c
libmal_la-mal_parser.lo: mal_parser.c mal_parser.h mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_scenario.h mal_utils.h mal_linker.h mal_atom.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_builder.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_parser_CFLAGS) -c -o libmal_la-mal_parser.lo `test -f 'mal_parser.c' || echo '$(srcdir)/'`mal_parser.c
libmal_la-mal_profiler.lo: mal_profiler.c mal_function.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_profiler.h mal_client.h mal_runtime.h mal_debugger.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_resource.h mal_interpreter.h mal_factory.h mal_recycle.h ../../gdk/gdk_atomic.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_profiler_CFLAGS) -c -o libmal_la-mal_profiler.lo `test -f 'mal_profiler.c' || echo '$(srcdir)/'`mal_profiler.c
libmal_la-mal_readline.lo: mal_readline.c mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_readline.h mal_debugger.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_readline_CFLAGS) -c -o libmal_la-mal_readline.lo `test -f 'mal_readline.c' || echo '$(srcdir)/'`mal_readline.c
libmal_la-mal_recycle.lo: mal_recycle.c mal_recycle.h mal.h ../../gdk/gdk.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_runtime.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_factory.h mal_resource.h ../../gdk/gdk_atomic.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_recycle_CFLAGS) -c -o libmal_la-mal_recycle.lo `test -f 'mal_recycle.c' || echo '$(srcdir)/'`mal_recycle.c
libmal_la-mal_resolve.lo: mal_resolve.c mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_resolve_CFLAGS) -c -o libmal_la-mal_resolve.lo `test -f 'mal_resolve.c' || echo '$(srcdir)/'`mal_resolve.c
libmal_la-mal_sabaoth.lo: mal_sabaoth.c mal_sabaoth.h mal.h ../../gdk/gdk.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h ../../common/utils/msabaoth.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_sabaoth_CFLAGS) -c -o libmal_la-mal_sabaoth.lo `test -f 'mal_sabaoth.c' || echo '$(srcdir)/'`mal_sabaoth.c
libmal_la-mal_scenario.lo: mal_scenario.c mal_scenario.h mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_utils.h mal_linker.h mal_authorize.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_scenario_CFLAGS) -c -o libmal_la-mal_scenario.lo `test -f 'mal_scenario.c' || echo '$(srcdir)/'`mal_scenario.c
libmal_la-mal_session.lo: mal_session.c mal_session.h mal_scenario.h mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_utils.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_linker.h mal_parser.h mal_readline.h mal_authorize.h mal_sabaoth.h ../../common/utils/msabaoth.h mal_private.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_session_CFLAGS) -c -o libmal_la-mal_session.lo `test -f 'mal_session.c' || echo '$(srcdir)/'`mal_session.c
libmal_la-mal_stack.lo: mal_stack.c mal_stack.h mal.h ../../gdk/gdk.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_stack_CFLAGS) -c -o libmal_la-mal_stack.lo `test -f 'mal_stack.c' || echo '$(srcdir)/'`mal_stack.c
libmal_la-mal_type.lo: mal_type.c mal_type.h mal.h ../../gdk/gdk.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_type_CFLAGS) -c -o libmal_la-mal_type.lo `test -f 'mal_type.c' || echo '$(srcdir)/'`mal_type.c
libmal_la-mal_utils.lo: mal_utils.c mal_utils.h mal.h ../../gdk/gdk.h
	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmal_la_CFLAGS) $(CFLAGS) $(mal_utils_CFLAGS) -c -o libmal_la-mal_utils.lo `test -f 'mal_utils.c' || echo '$(srcdir)/'`mal_utils.c
mal_exception.o mal_exception.lo: mal_exception.c mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_private.h
mal_debugger.o mal_debugger.lo: mal_debugger.c mal.h ../../gdk/gdk.h mal_readline.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_debugger.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_linker.h mal_parser.h mal_private.h
mal_authorize.o mal_authorize.lo: mal_authorize.c mal_authorize.h mal.h ../../gdk/gdk.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_client.h mal_resolve.h mal_exception.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_private.h ../../common/utils/mcrypt.h
mal_linker.o mal_linker.lo: mal_linker.c mal_module.h mal.h ../../gdk/gdk.h mal_linker.h mal_function.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_import.h mal_client.h mal_profiler.h mal_session.h mal_scenario.h mal_utils.h mal_private.h ../../common/utils/mutils.h
mal_type.o mal_type.lo: mal_type.c mal_type.h mal.h ../../gdk/gdk.h
mal_recycle.o mal_recycle.lo: mal_recycle.c mal_recycle.h mal.h ../../gdk/gdk.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_runtime.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_factory.h mal_resource.h ../../gdk/gdk_atomic.h
mal_client.o mal_client.lo: mal_client.c mal_client.h mal.h ../../gdk/gdk.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_readline.h mal_import.h mal_session.h mal_scenario.h mal_utils.h mal_parser.h mal_private.h mal_runtime.h mal_authorize.h
mal_interpreter.o mal_interpreter.lo: mal_interpreter.c mal_runtime.h mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_factory.h mal_recycle.h mal_resource.h ../../gdk/gdk_atomic.h mal_debugger.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_private.h
mal_namespace.o mal_namespace.lo: mal_namespace.c mal_type.h mal.h ../../gdk/gdk.h mal_namespace.h mal_exception.h mal_instruction.h mal_stack.h mal_errors.h mal_private.h
mal_resolve.o mal_resolve.lo: mal_resolve.c mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_private.h
mal_parser.o mal_parser.lo: mal_parser.c mal_parser.h mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_scenario.h mal_utils.h mal_linker.h mal_atom.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_builder.h mal_private.h
mal_module.o mal_module.lo: mal_module.c mal_module.h mal.h ../../gdk/gdk.h mal_function.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_client.h mal_profiler.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_private.h
mal_sabaoth.o mal_sabaoth.lo: mal_sabaoth.c mal_sabaoth.h mal.h ../../gdk/gdk.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h ../../common/utils/msabaoth.h
mal_profiler.o mal_profiler.lo: mal_profiler.c mal_function.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_profiler.h mal_client.h mal_runtime.h mal_debugger.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_resource.h mal_interpreter.h mal_factory.h mal_recycle.h ../../gdk/gdk_atomic.h
mal_runtime.o mal_runtime.lo: mal_runtime.c mal_utils.h mal.h ../../gdk/gdk.h mal_runtime.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_factory.h mal_recycle.h mal_authorize.h mal_resource.h ../../gdk/gdk_atomic.h mal_private.h
mal_utils.o mal_utils.lo: mal_utils.c mal_utils.h mal.h ../../gdk/gdk.h
mal_instruction.o mal_instruction.lo: mal_instruction.c mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_function.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_utils.h
mal_listing.o mal_listing.lo: mal_listing.c mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_function.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_utils.h
mal_function.o mal_function.lo: mal_function.c mal_function.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h mal_interpreter.h mal_client.h mal_profiler.h mal_factory.h mal_recycle.h mal_runtime.h mal_private.h
mal_import.o mal_import.lo: mal_import.c mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_scenario.h mal_utils.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_linker.h mal_parser.h mal_private.h
mal_readline.o mal_readline.lo: mal_readline.c mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_scenario.h mal_import.h mal_session.h mal_utils.h mal_readline.h mal_debugger.h
mal_resource.o mal_resource.lo: mal_resource.c mal_resource.h mal_interpreter.h mal_client.h mal.h ../../gdk/gdk.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_factory.h mal_recycle.h mal_runtime.h ../../gdk/gdk_atomic.h mal_private.h
mal_dataflow.o mal_dataflow.lo: mal_dataflow.c mal_dataflow.h mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_private.h mal_runtime.h mal_resource.h mal_interpreter.h mal_factory.h mal_recycle.h ../../gdk/gdk_atomic.h
mal_builder.o mal_builder.lo: mal_builder.c mal_builder.h mal.h ../../gdk/gdk.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_function.h mal_module.h mal_resolve.h mal_exception.h mal_errors.h mal_listing.h
mal_session.o mal_session.lo: mal_session.c mal_session.h mal_scenario.h mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_utils.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_linker.h mal_parser.h mal_readline.h mal_authorize.h mal_sabaoth.h ../../common/utils/msabaoth.h mal_private.h
mal_atom.o mal_atom.lo: mal_atom.c mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_atom.h mal_exception.h mal_errors.h mal_private.h
mal.o mal.lo: mal.c mal.h ../../gdk/gdk.h mal_stack.h mal_linker.h mal_authorize.h mal_instruction.h mal_type.h mal_namespace.h mal_client.h mal_resolve.h mal_exception.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_scenario.h mal_import.h mal_utils.h mal_parser.h mal_interpreter.h mal_factory.h mal_recycle.h mal_runtime.h mal_sabaoth.h ../../common/utils/msabaoth.h mal_dataflow.h mal_private.h mal_resource.h ../../gdk/gdk_atomic.h ../optimizer/opt_statistics.h
mal_stack.o mal_stack.lo: mal_stack.c mal_stack.h mal.h ../../gdk/gdk.h
mal_scenario.o mal_scenario.lo: mal_scenario.c mal_scenario.h mal_import.h mal_exception.h mal_instruction.h mal_type.h mal.h ../../gdk/gdk.h mal_stack.h mal_namespace.h mal_errors.h mal_client.h mal_resolve.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_session.h mal_utils.h mal_linker.h mal_authorize.h mal_private.h
mal_factory.o mal_factory.lo: mal_factory.c mal_factory.h mal.h ../../gdk/gdk.h mal_client.h mal_resolve.h mal_exception.h mal_instruction.h mal_type.h mal_stack.h mal_namespace.h mal_errors.h mal_function.h mal_module.h mal_listing.h mal_profiler.h mal_interpreter.h mal_recycle.h mal_runtime.h mal_session.h mal_scenario.h mal_import.h mal_utils.h mal_debugger.h mal_private.h
dist-hook:
	mkdir -p $(distdir)/Tests
	cp -pR $(srcdir)/Tests/* $(distdir)/Tests
install-exec-local-mal_exception.h: mal_exception.h
	-mkdir -p $(DESTDIR)$(includedir)/monetdb
	-$(RM) $(DESTDIR)$(includedir)/monetdb/mal_exception.h
	$(INSTALL_DATA) $< $(DESTDIR)$(includedir)/monetdb/mal_exception.h

uninstall-local-mal_exception.h: 
	$(RM) $(DESTDIR)$(includedir)/monetdb/mal_exception.h

install-exec-local-mal_type.h: mal_type.h
	-mkdir -p $(DESTDIR)$(includedir)/monetdb
	-$(RM) $(DESTDIR)$(includedir)/monetdb/mal_type.h
	$(INSTALL_DATA) $< $(DESTDIR)$(includedir)/monetdb/mal_type.h

uninstall-local-mal_type.h: 
	$(RM) $(DESTDIR)$(includedir)/monetdb/mal_type.h

install-exec-local-mal_errors.h: mal_errors.h
	-mkdir -p $(DESTDIR)$(includedir)/monetdb
	-$(RM) $(DESTDIR)$(includedir)/monetdb/mal_errors.h
	$(INSTALL_DATA) $< $(DESTDIR)$(includedir)/monetdb/mal_errors.h

uninstall-local-mal_errors.h: 
	$(RM) $(DESTDIR)$(includedir)/monetdb/mal_errors.h

install-exec-local-mal_namespace.h: mal_namespace.h
	-mkdir -p $(DESTDIR)$(includedir)/monetdb
	-$(RM) $(DESTDIR)$(includedir)/monetdb/mal_namespace.h
	$(INSTALL_DATA) $< $(DESTDIR)$(includedir)/monetdb/mal_namespace.h

uninstall-local-mal_namespace.h: 
	$(RM) $(DESTDIR)$(includedir)/monetdb/mal_namespace.h

install-exec-local-mal_stack.h: mal_stack.h
	-mkdir -p $(DESTDIR)$(includedir)/monetdb
	-$(RM) $(DESTDIR)$(includedir)/monetdb/mal_stack.h
	$(INSTALL_DATA) $< $(DESTDIR)$(includedir)/monetdb/mal_stack.h

uninstall-local-mal_stack.h: 
	$(RM) $(DESTDIR)$(includedir)/monetdb/mal_stack.h

install-exec-local-mal_instruction.h: mal_instruction.h
	-mkdir -p $(DESTDIR)$(includedir)/monetdb
	-$(RM) $(DESTDIR)$(includedir)/monetdb/mal_instruction.h
	$(INSTALL_DATA) $< $(DESTDIR)$(includedir)/monetdb/mal_instruction.h

uninstall-local-mal_instruction.h: 
	$(RM) $(DESTDIR)$(includedir)/monetdb/mal_instruction.h

install-exec-local-mal.h: mal.h
	-mkdir -p $(DESTDIR)$(includedir)/monetdb
	-$(RM) $(DESTDIR)$(includedir)/monetdb/mal.h
	$(INSTALL_DATA) $< $(DESTDIR)$(includedir)/monetdb/mal.h

uninstall-local-mal.h: 
	$(RM) $(DESTDIR)$(includedir)/monetdb/mal.h
install-malLTLIBRARIES:
uninstall-local: uninstall-local-mal.h uninstall-local-mal_errors.h uninstall-local-mal_exception.h uninstall-local-mal_instruction.h uninstall-local-mal_namespace.h uninstall-local-mal_stack.h uninstall-local-mal_type.h
install-exec-local: install-exec-local-mal.h install-exec-local-mal_errors.h install-exec-local-mal_exception.h install-exec-local-mal_instruction.h install-exec-local-mal_namespace.h install-exec-local-mal_stack.h install-exec-local-mal_type.h

  include $(top_srcdir)/buildtools/conf/rules.mk

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
