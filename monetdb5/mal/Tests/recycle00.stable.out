stdout of test 'recycle00` in directory 'monetdb5/mal` itself:


# 12:49:06 >  
# 12:49:06 >   mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=33469 --set xrpc_port=48324 --set monet_prompt= --trace  --dbname=mTests_src_mal  recycle00.mal
# 12:49:06 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.da.cwi.nl:31235/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-23223/.s.monetdb.31235
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 20:53:43 >  
# 20:53:43 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-23223" "--port=31235"
# 20:53:43 >  

#mdb.list("user","qry");
function user.qry():void;
    i := 23;
    j := calc.*(i,i);
    io.print(j);
end user.qry;
function user.qry():void;               	#[0] (0)  0 
    i:int := 23:int;                    	#[1] (0)  1 <- 2 
    j:int := calc.*(i:int,i:int);       	#[2] (0) CMDvarMULsignal 3 <- 1 1 
    io.print(j:int);                    	#[3] (0) IOprint_val 4 <- 3 
end user.qry;                           	#[4] (0)  
[ "start" ]
[ 529 ]
[ "next" ]
[ 529 ]
[ "last" ]
[ 529 ]
#Recycler  catalog
#retain= 1 time =0 sze= 0 alpha= 0.500
#reuse= 2
#rcache= 0
#   0 lru= 0 cnt=   1 ticks=  17  vol=    0     _0 := 23;
#   1 lru= 0 cnt=   1 ticks=  11  vol=    0     _1 := calc.*(23,23);

# 12:49:06 >  
# 12:49:06 >  Done.
# 12:49:06 >  

