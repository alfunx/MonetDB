stdout of test 'recycle10` in directory 'monetdb5/mal` itself:


# 12:55:07 >  
# 12:55:07 >   mserver5 "--config=/export/scratch1/milena/monet.DBG/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/export/scratch1/milena/monet.DBG/lib/MonetDB5:/export/scratch1/milena/monet.DBG/lib/MonetDB5/lib:/export/scratch1/milena/monet.DBG/lib/MonetDB5/bin" --set "gdk_dbfarm=/export/scratch1/milena/monet.DBG/var/MonetDB5/dbfarm" --set "sql_logdir=/export/scratch1/milena/monet.DBG/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=31275 --set xrpc_port=42858 --set monet_prompt= --trace  --dbname=mTests_src_mal  recycle10.mal
# 12:55:07 >  

# MonetDB server v5.7.0, based on kernel v1.25.0
# Serving database 'mTests_src_mal', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:30041/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-21946/.s.monetdb.30041
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.
#RECYCLE drop
#RECYCLER CATALOG cached 10 instructions, MAL recycled = -3 total MAL executed = 87 memory= 136 total searchtime=26.80(usec) savings=0
# CL	   lru		cnt	 ticks	 rd	 wr	 Instr
#0	1	6	0	0	#    1 := sql.mvc();
#1	1	59	0	88	#    <tmp_14> := sql.tid(1,"sys","tbl");
#2	1	40	0	48	#    <tmp_123> := sql.bind(1,"sys","tbl","col",0);
#3	1	17	136	0	#    <tmp_416> := algebra.subselect(<tmp_123>,<tmp_14>,2,8,true,true,false);
#4	1	9	0	0	#    10 := calc.+(2,8);
#5	1	10	0	0	#    5 := calc./(10,2);
#6	1	2	0	0	#    5 := calc.int(5);
#7	1	10	48	0	#    <tmp_516> := algebra.subselect(<tmp_123>,<tmp_416>,5,5,true,true,false);
#8	1	18	48	0	#    <tmp_702> := algebra.subselect(<tmp_123>,<tmp_416>,2,5,true,true,false);
#9	1	14	48	0	#    <tmp_703> := algebra.subselect(<tmp_123>,<tmp_416>,2,8,false,true,false);

# 20:49:41 >  
# 20:49:41 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-22767" "--port=33890"
# 20:49:41 >  

#qry(2,8);
#RECYCLE [  0] cost 6 mem 0 srch  -nan #    1 := sql.mvc();
#RECYCLE [  1] cost 59 mem 88 srch 52.00 #    <tmp_14> := sql.tid(1,"sys","tbl");
#RECYCLE [  2] cost 40 mem 48 srch 41.00 #    <tmp_123> := sql.bind(1,"sys","tbl","col",0);
#RECYCLE [  3] cost 17 mem 0 srch 36.00 #    <tmp_416> := algebra.subselect(<tmp_123>,<tmp_14>,2,8,true,true,false);
#RECYCLE [  4] cost 9 mem 0 srch 34.00 #    10 := calc.+(2,8);
#RECYCLE [  5] cost 10 mem 0 srch 30.80 #    5 := calc./(10,2);
#RECYCLE [  6] cost 2 mem 0 srch 28.67 #    5 := calc.int(5);
#RECYCLE [  7] cost 10 mem 0 srch 26.86 #    <tmp_516> := algebra.subselect(<tmp_123>,<tmp_416>,5,5,true,true,false);
#REUSED  [  3]  17 (usec) #    <tmp_416> := algebra.subselect(<tmp_123>,<tmp_14>,2,8,true,true,false);
#RECYCLE [  8] cost 18 mem 0 srch 27.00 #    <tmp_702> := algebra.subselect(<tmp_123>,<tmp_416>,2,5,true,true,false);
#REUSED  [  3]  17 (usec) #    <tmp_416> := algebra.subselect(<tmp_123>,<tmp_14>,2,8,true,true,false);
#RECYCLE [  9] cost 14 mem 0 srch 26.89 #    <tmp_703> := algebra.subselect(<tmp_123>,<tmp_416>,2,8,false,true,false);
#REUSED  [  3]  17 (usec) #    <tmp_416> := algebra.subselect(<tmp_123>,<tmp_14>,2,8,true,true,false);
#--------------------------#
# t	h  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
[ 1@0,	3@0  ]
[ 2@0,	4@0  ]
[ 3@0,	5@0  ]
[ 4@0,	6@0  ]
[ 5@0,	7@0  ]
[ 6@0,	8@0  ]
#--------------------------#
# t	h  # name
# void	oid  # type
#--------------------------#
[ 0@0,	5@0  ]
#--------------------------#
# t	h  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
[ 1@0,	3@0  ]
[ 2@0,	4@0  ]
[ 3@0,	5@0  ]
#--------------------------#
# t	h  # name
# void	oid  # type
#--------------------------#
[ 0@0,	3@0  ]
[ 1@0,	4@0  ]
[ 2@0,	5@0  ]
[ 3@0,	6@0  ]
[ 4@0,	7@0  ]
[ 5@0,	8@0  ]
#RECYCLER  CATALOG admission ADM_ALL
#CACHE= policy PROFIT limit= 20000 
#RESOURCES hard stmt = 20000 hard var = 100000 hard mem=16741163008
#recycled = 3 incache= 10 executed = 1535 memory(KB)= 448 PersBat memory=0
#Cache search time= 0(usec)
# CL	   lru		cnt	 ticks	 rd	 wr	 Instr
#        1	1020281	1	69	1	1	    _1 := user.bind("schema","table","column",0);
#        2	1020384	4	46	1	1	    _6 := algebra.select(<tmp_20>,2,8);
#        3	1020356	1	19	1	1	    _9 := algebra.select(<tmp_20>,5);
#        4	1020371	1	14	1	1	    _11 := algebra.select(<tmp_20>,2,5);
#        5	1020390	1	18	1	1	    _12 := algebra.select(<tmp_20>,2,8,false,true);

# 12:55:08 >  
# 12:55:08 >  Done.
# 12:55:08 >  

