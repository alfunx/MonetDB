#test the basics of the recycler
# testing reuse-cover with different selection instructions

module sql;
function sql.mvc():int;
    return mvc:=1;
end mvc;

function sql.tid(mvc:int,s:str,t:str):bat[:oid];
b:= bat.new(:oid);
barrier i:= 0:oid;
    bat.append(b,i);
    redo i:= iterator.next(1:oid,11:oid);
exit i;
    return tid:= b;
end tid;

function sql.bind(mvc:int, s:str,t:str,c:str,i:int):bat[:int];
    b:= bat.new(:int);
    bat.append(b,0);
    bat.append(b,1);
    bat.append(b,2);
    bat.append(b,3);
    bat.append(b,4);
    bat.append(b,5);
    bat.append(b,6);
    bat.append(b,7);
    bat.append(b,8);
    bat.append(b,9);
    bat.append(b,10);
    bat.append(b,11);
    return bind:=b;
end bind;

function qry(low:int, hgh:int);
    m:= sql.mvc();
    x:bat[:oid]  := sql.tid(m,"sys","tbl");
    b:bat[:int]:= sql.bind(m,"sys","tbl","col",0);
    s1:= algebra.subselect(b,x,low,hgh,true,true,false);
    v:= low + hgh;
    v1:= v/2;
    v2:= calc.int(v1);
    l2:= low +2;
    h2:= hgh -2;
    s2:= algebra.subselect(b,x,v2,v2,true,true,false);
    s3:= algebra.subselect(b,x,l2,h2,true,true,false);
    s4:= algebra.subselect(b,x,l2,hgh,true,false,false);
    io.print(s1);
    io.print(s2);
    io.print(s3);
    io.print(s4);
end qry;

optimizer.recycler("user","qry");

qry(1,9);

recycle.dump();
