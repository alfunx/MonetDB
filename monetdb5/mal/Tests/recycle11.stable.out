stdout of test 'recycle11` in directory 'monetdb5/mal` itself:


# 13:47:51 >  
# 13:47:51 >   mserver5 "--config=/export/scratch1/milena/monet.DBG/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/export/scratch1/milena/monet.DBG/lib/MonetDB5:/export/scratch1/milena/monet.DBG/lib/MonetDB5/lib:/export/scratch1/milena/monet.DBG/lib/MonetDB5/bin" --set "gdk_dbfarm=/export/scratch1/milena/monet.DBG/var/MonetDB5/dbfarm" --set "sql_logdir=/export/scratch1/milena/monet.DBG/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=35909 --set xrpc_port=47862 --set monet_prompt= --trace  --dbname=mTests_src_mal  recycle11.mal
# 13:47:51 >  

# MonetDB server v5.7.0, based on kernel v1.25.0
# Serving database 'mTests_src_mal', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:35049/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-25339/.s.monetdb.35049
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.
#RECYCLE drop
#RECYCLER CATALOG cached 12 instructions, MAL recycled = -3 total MAL executed = 89 memory= 136 total searchtime=27.08(usec) savings=0
# CL	   lru		cnt	 ticks	 rd	 wr	 Instr
#0	1	7	0	0	#    1 := sql.mvc();
#1	1	60	0	88	#    <tmp_46> := sql.tid(1,"sys","tbl");
#2	1	41	0	48	#    <tmp_326> := sql.bind(1,"sys","tbl","col",0);
#3	1	20	136	0	#    <tmp_450> := algebra.subselect(<tmp_326>,<tmp_46>,1,9,true,true,false);
#4	1	11	0	0	#    10 := calc.+(1,9);
#5	1	8	0	0	#    5 := calc./(10,2);
#6	1	2	0	0	#    5 := calc.int(5);
#7	1	2	0	0	#    3 := calc.+(1,2);
#8	1	7	0	0	#    7 := calc.-(9,2);
#9	1	20	48	0	#    <tmp_703> := algebra.subselect(<tmp_326>,<tmp_450>,5,5,true,true,false);
#10	1	15	48	0	#    <tmp_704> := algebra.subselect(<tmp_326>,<tmp_450>,3,7,true,true,false);
#11	1	14	48	0	#    <tmp_705> := algebra.subselect(<tmp_326>,<tmp_450>,3,9,true,false,false);

# 20:49:41 >  
# 20:49:41 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-22767" "--port=33890"
# 20:49:41 >  

#qry(1,9);
#RECYCLE [  0] cost 7 mem 0 srch  -nan #    1 := sql.mvc();
#RECYCLE [  1] cost 60 mem 88 srch 61.00 #    <tmp_46> := sql.tid(1,"sys","tbl");
#RECYCLE [  2] cost 41 mem 48 srch 47.00 #    <tmp_326> := sql.bind(1,"sys","tbl","col",0);
#RECYCLE [  3] cost 20 mem 0 srch 40.00 #    <tmp_450> := algebra.subselect(<tmp_326>,<tmp_46>,1,9,true,true,false);
#RECYCLE [  4] cost 11 mem 0 srch 37.25 #    10 := calc.+(1,9);
#RECYCLE [  5] cost 8 mem 0 srch 33.60 #    5 := calc./(10,2);
#RECYCLE [  6] cost 2 mem 0 srch 31.50 #    5 := calc.int(5);
#RECYCLE [  7] cost 2 mem 0 srch 29.57 #    3 := calc.+(1,2);
#RECYCLE [  8] cost 7 mem 0 srch 28.12 #    7 := calc.-(9,2);
#RECYCLE [  9] cost 20 mem 0 srch 27.00 #    <tmp_703> := algebra.subselect(<tmp_326>,<tmp_450>,5,5,true,true,false);
#REUSED  [  3]  20 (usec) #    <tmp_450> := algebra.subselect(<tmp_326>,<tmp_46>,1,9,true,true,false);
#RECYCLE [ 10] cost 15 mem 0 srch 27.10 #    <tmp_704> := algebra.subselect(<tmp_326>,<tmp_450>,3,7,true,true,false);
#REUSED  [  3]  20 (usec) #    <tmp_450> := algebra.subselect(<tmp_326>,<tmp_46>,1,9,true,true,false);
#RECYCLE [ 11] cost 14 mem 0 srch 27.09 #    <tmp_705> := algebra.subselect(<tmp_326>,<tmp_450>,3,9,true,false,false);
#REUSED  [  3]  20 (usec) #    <tmp_450> := algebra.subselect(<tmp_326>,<tmp_46>,1,9,true,true,false);
#--------------------------#
# t	h  # name
# void	oid  # type
#--------------------------#
[ 0@0,	1@0  ]
[ 1@0,	2@0  ]
[ 2@0,	3@0  ]
[ 3@0,	4@0  ]
[ 4@0,	5@0  ]
[ 5@0,	6@0  ]
[ 6@0,	7@0  ]
[ 7@0,	8@0  ]
[ 8@0,	9@0  ]
#--------------------------#
# t	h  # name
# void	oid  # type
#--------------------------#
[ 0@0,	5@0  ]
#--------------------------#
# t	h  # name
# void	oid  # type
#--------------------------#
[ 0@0,	3@0  ]
[ 1@0,	4@0  ]
[ 2@0,	5@0  ]
[ 3@0,	6@0  ]
[ 4@0,	7@0  ]
#--------------------------#
# t	h  # name
# void	oid  # type
#--------------------------#
[ 0@0,	3@0  ]
[ 1@0,	4@0  ]
[ 2@0,	5@0  ]
[ 3@0,	6@0  ]
[ 4@0,	7@0  ]
[ 5@0,	8@0  ]
#RECYCLER CATALOG cache limit= 5000 cached 12 memory 16741163008 
#MAL recycled = 9 savings= 0(usec) total MAL executed = 1535 memory(KB)= 496 searchtime=1(usec)
# CL	   lru		cnt	 ticks	 rd	 wr	 Instr
#        1	400914	1	69	1	1	    _1 := user.bind("schema","table","column",0);
#        2	401021	4	49	1	1	    _6 := algebra.select(<tmp_20>,1,9,false,false);
#        3	400993	1	21	1	1	    _10 := algebra.select(<tmp_20>,5);
#        4	401010	1	16	1	1	    _12 := algebra.select(<tmp_20>,3,7);
#        5	401027	1	15	1	1	    _15 := algebra.select(<tmp_20>,3,9,true,false);

# 13:47:51 >  
# 13:47:51 >  Done.
# 13:47:51 >  

