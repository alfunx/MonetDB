#test the basics of the recycler
# testing query categories statistics

module sql;
function sql.mvc():int;
    return mvc:=1;
end mvc;

function sql.tid(mvc:int,s:str,t:str):bat[:oid];
b:= bat.new(:oid);
barrier i:= 0:oid;
    bat.append(b,i);
    redo i:= iterator.next(1:oid,11:oid);
exit i;
    return tid:= b;
end tid;

function sql.bind(mvc:int, s:str,t:str,c:str,i:int):bat[:int];
    b:= bat.new(:int);
    bat.append(b,0);
    bat.append(b,1);
    bat.append(b,2);
    bat.append(b,3);
    bat.append(b,4);
    bat.append(b,5);
    bat.append(b,6);
    bat.append(b,7);
    bat.append(b,8);
    bat.append(b,9);
    bat.append(b,10);
    bat.append(b,11);
    return bind:=b;
end bind;

#intra-query commonality
function qry(low:int, hgh:int);
    m:= sql.mvc();
    x:bat[:oid]  := sql.tid(m,"sys","tbl");
    b:bat[:int]:= sql.bind(m,"sys","tbl","col",0);
    s:= algebra.subselect(b,x,low,hgh,true,true,false);
    l1:= low + 1;
    h1:= hgh - 1 ;
    s2:= algebra.subselect(b,l1,h1,true,true,false);
end qry;

#inter-query commonality
function qry1(val:int);
    m:= sql.mvc();
    x:bat[:oid]  := sql.tid(m,"sys","tbl");
    b:bat[:int]:= sql.bind(m,"sys","tbl","col",0);
    s:= algebra.subselect(b,x,val,val,true,true,false);
end qry1;

recycle.setCache(10);
optimizer.recycler("user","qry");
optimizer.recycler("user","qry1");

qry(2,8);
qry1(10);
qry1(10);

recycle.dump();
#recycle.dump();

