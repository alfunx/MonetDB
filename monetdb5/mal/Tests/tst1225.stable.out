stdout of test 'tst1225` in directory 'monetdb5/mal` itself:


# 15:48:29 >  
# 15:48:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35281" "--set" "mapi_usock=/var/tmp/mtest-18416/.s.monetdb.35281" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/default//Linux/var/MonetDB/mTests_monetdb5_mal" "--set" "mal_listing=2" "--set" "embedded_r=yes"
# 15:48:29 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.da.cwi.nl:35281/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-18416/.s.monetdb.35281
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 15:48:30 >  
# 15:48:30 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-18416" "--port=35281"
# 15:48:30 >  

# MonetDB Server v5.0.0_beta2_1
# Copyright (c) 1993-2007 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information
##old bug in tst1200
#	rule_apr:= mtime.rule("last THU on or before aPr 1@01:15");
#	rule_nov:= mtime.rule(11,-10,-4,75);
#	mc_a := calc.*(23,60);
#	tzone_07:= mtime.timezone(mc_a,rule_apr,rule_nov);
#	nc_a := calc.*(-23,59);
#	oc_a := calc.-(nc_a,59);
#	tzone_08:= mtime.timezone(oc_a);
#	tzone_09:= mtime.timezone(0);
#	pc_a := calc.*(23,60);
#	qc_a := calc.+(pc_a,59);
#	tzone_bat:= bat.new(:oid,:timezone);
#	i8:= 8@0;	# don't use 08@0
#	io.print(i8);	# don't use 09@0
[ 8@0 ]
[ 9@0 ]
#-------------------------#
# h	timezone		  # name
# void	timezone	  # type
#--------------------------#
[ 0@0,	"GMT-23:36"	]
[ 1@0,	"GMT"	]

# 23:39:02 >  
# 23:39:02 >  Done.
# 23:39:02 >  

