
## Use: nmake -f makefile.msc install

# Nothing much configurable below

TOPDIR = .\..\..\..
srcdir = $(TOPDIR)\..\monetdb5\modules\mal
!INCLUDE $(TOPDIR)\..\NT\rules.msc
all: all-msc
check: check-msc
install: install-msc
INCLUDES = -I$(srcdir) "-I..\..\mal" -I$(srcdir)\..\..\mal "-I..\atoms" -I$(srcdir)\..\atoms "-I..\kernel" -I$(srcdir)\..\kernel "-I..\..\..\clients\mapilib" -I$(srcdir)\..\..\..\clients\mapilib "-I..\..\..\common\options" -I$(srcdir)\..\..\..\common\options "-I..\..\..\common\stream" -I$(srcdir)\..\..\..\common\stream "-I..\..\..\common\utils" -I$(srcdir)\..\..\..\common\utils "-I..\..\..\gdk" -I$(srcdir)\..\..\..\gdk $(pcre_CFLAGS) $(zlib_CFLAGS) $(BZIP_INCS) $(MSGCONTROL_FLAGS) $(openssl_CFLAGS)
CFLAGS=$(CFLAGS) $(thread_safe_flag_spec)
EXTRA_DIST_DIR =  Tests
00_batcalc_hge.mal: "$(srcdir)\00_batcalc_hge.mal"
	$(INSTALL) "$(srcdir)\00_batcalc_hge.mal" "00_batcalc_hge.mal"
!IF defined(HAVE_HGE)
C_00_batcalc_hge_mal = 00_batcalc_hge.mal
!ELSE
C_00_batcalc_hge_mal =
!ENDIF
00_calc_hge.mal: "$(srcdir)\00_calc_hge.mal"
	$(INSTALL) "$(srcdir)\00_calc_hge.mal" "00_calc_hge.mal"
!IF defined(HAVE_HGE)
C_00_calc_hge_mal = 00_calc_hge.mal
!ELSE
C_00_calc_hge_mal =
!ENDIF
00_mkey_hge.mal: "$(srcdir)\00_mkey_hge.mal"
	$(INSTALL) "$(srcdir)\00_mkey_hge.mal" "00_mkey_hge.mal"
!IF defined(HAVE_HGE)
C_00_mkey_hge_mal = 00_mkey_hge.mal
!ELSE
C_00_mkey_hge_mal =
!ENDIF
00_mal_mapi_hge.mal: "$(srcdir)\00_mal_mapi_hge.mal"
	$(INSTALL) "$(srcdir)\00_mal_mapi_hge.mal" "00_mal_mapi_hge.mal"
!IF defined(HAVE_HGE)
C_00_mal_mapi_hge_mal = 00_mal_mapi_hge.mal
!ELSE
C_00_mal_mapi_hge_mal =
!ENDIF
00_iterator_hge.mal: "$(srcdir)\00_iterator_hge.mal"
	$(INSTALL) "$(srcdir)\00_iterator_hge.mal" "00_iterator_hge.mal"
!IF defined(HAVE_HGE)
C_00_iterator_hge_mal = 00_iterator_hge.mal
!ELSE
C_00_iterator_hge_mal =
!ENDIF
00_language_hge.mal: "$(srcdir)\00_language_hge.mal"
	$(INSTALL) "$(srcdir)\00_language_hge.mal" "00_language_hge.mal"
!IF defined(HAVE_HGE)
C_00_language_hge_mal = 00_language_hge.mal
!ELSE
C_00_language_hge_mal =
!ENDIF
00_batExtensions_hge.mal: "$(srcdir)\00_batExtensions_hge.mal"
	$(INSTALL) "$(srcdir)\00_batExtensions_hge.mal" "00_batExtensions_hge.mal"
!IF defined(HAVE_HGE)
C_00_batExtensions_hge_mal = 00_batExtensions_hge.mal
!ELSE
C_00_batExtensions_hge_mal =
!ENDIF
libmal_OBJS = batExtensions.obj bbp.obj clients.obj factories.obj groupby.obj inspect.obj iterator.obj projectionpath.obj language.obj mal_io.obj mal_mapi.obj manual.obj mat.obj mdb.obj mkey.obj manifold.obj pcre.obj profiler.obj querylog.obj recycle.obj remote.obj sabaoth.obj sysmon.obj tablet.obj tokenizer.obj transaction.obj txtsim.obj zorder.obj sample.obj json_util.obj calc.obj batcalc.obj
libmal_DEPS = $(libmal_OBJS)
libmal.lib: $(libmal_DEPS)
	$(ARCHIVER) /out:"libmal.lib" $(libmal_OBJS) $(libmal_LIBS)

mkey.obj: "$(srcdir)\mkey.c" "$(srcdir)\mkey.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h"
	$(CC) $(CFLAGS) $(mkey_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"mkey.obj" -c "$(srcdir)\mkey.c"
querylog.obj: "$(srcdir)\querylog.c" "$(srcdir)\querylog.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\atoms\..\..\..\gdk\gdk.h" "$(srcdir)\..\atoms\..\..\mal\mal.h" "$(srcdir)\..\atoms\..\..\mal\mal_exception.h" "$(srcdir)\..\atoms\mtime.h"
	$(CC) $(CFLAGS) $(querylog_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"querylog.obj" -c "$(srcdir)\querylog.c"
projectionpath.obj: "$(srcdir)\projectionpath.c" "$(srcdir)\projectionpath.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_resolve.h" "$(srcdir)\..\..\mal\mal_profiler.h" "$(srcdir)\..\..\mal\mal_client.h" "$(srcdir)\..\..\mal\mal_interpreter.h"
	$(CC) $(CFLAGS) $(projectionpath_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"projectionpath.obj" -c "$(srcdir)\projectionpath.c"
mat.obj: "$(srcdir)\mat.c" "$(srcdir)\mat.h" "$(srcdir)\..\..\mal\mal_resolve.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\..\..\mal\mal_interpreter.h"
	$(CC) $(CFLAGS) $(mat_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"mat.obj" -c "$(srcdir)\mat.c"
transaction.obj: "$(srcdir)\transaction.c" "$(srcdir)\..\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\kernel\..\..\mal\mal.h" "$(srcdir)\..\kernel\..\..\..\gdk\gdk.h" "$(srcdir)\..\kernel\bat5.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h"
	$(CC) $(CFLAGS) $(transaction_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"transaction.obj" -c "$(srcdir)\transaction.c"
sample.obj: "$(srcdir)\sample.c" "$(srcdir)\..\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\sample.h"
	$(CC) $(CFLAGS) $(sample_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"sample.obj" -c "$(srcdir)\sample.c"
bbp.obj: "$(srcdir)\bbp.c" "$(srcdir)\bbp.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_resolve.h" "$(srcdir)\..\..\mal\mal_profiler.h" "$(srcdir)\..\..\mal\mal_client.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\..\mal\mal_module.h" "$(srcdir)\..\..\mal\mal_scenario.h" "$(srcdir)\..\..\mal\mal_import.h" "$(srcdir)\..\..\mal\mal_session.h" "$(srcdir)\..\kernel\..\..\mal\mal.h" "$(srcdir)\..\kernel\..\..\..\gdk\gdk.h" "$(srcdir)\..\kernel\bat5.h"
	$(CC) $(CFLAGS) $(bbp_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"bbp.obj" -c "$(srcdir)\bbp.c"
groupby.obj: "$(srcdir)\groupby.c" "$(srcdir)\groupby.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\kernel\..\..\..\gdk\gdk.h" "$(srcdir)\..\kernel\group.h"
	$(CC) $(CFLAGS) $(groupby_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"groupby.obj" -c "$(srcdir)\groupby.c"
pcre.obj: "$(srcdir)\pcre.c" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\..\..\..\gdk\gdk_cand.h"
	$(CC) $(CFLAGS) $(pcre_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"pcre.obj" -c "$(srcdir)\pcre.c"
batExtensions.obj: "$(srcdir)\batExtensions.c" "$(srcdir)\batExtensions.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_resolve.h" "$(srcdir)\..\..\mal\mal_profiler.h" "$(srcdir)\..\..\mal\mal_client.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\kernel\..\..\mal\mal.h" "$(srcdir)\..\kernel\..\..\..\gdk\gdk.h" "$(srcdir)\..\kernel\bat5.h" "$(srcdir)\..\kernel\..\..\mal\mal_exception.h" "$(srcdir)\..\kernel\..\..\mal\mal_interpreter.h" "$(srcdir)\..\kernel\algebra.h"
	$(CC) $(CFLAGS) $(batExtensions_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"batExtensions.obj" -c "$(srcdir)\batExtensions.c"
profiler.obj: "$(srcdir)\profiler.c" "$(srcdir)\profiler.h" "$(srcdir)\..\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_resolve.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\..\..\mal\mal_profiler.h" "$(srcdir)\..\..\mal\mal_client.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\..\mal\mal_runtime.h"
	$(CC) $(CFLAGS) $(profiler_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"profiler.obj" -c "$(srcdir)\profiler.c"
inspect.obj: "$(srcdir)\inspect.c" "$(srcdir)\inspect.h" "$(srcdir)\..\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_resolve.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_profiler.h" "$(srcdir)\..\..\mal\mal_client.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\..\..\mal\mal_debugger.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\..\mal\mal_listing.h"
	$(CC) $(CFLAGS) $(inspect_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"inspect.obj" -c "$(srcdir)\inspect.c"
mdb.obj: "$(srcdir)\mdb.c" "$(srcdir)\mdb.h" "$(srcdir)\..\..\..\gdk\gdk.h" "$(srcdir)\..\..\..\common\utils\mutils.h" "$(srcdir)\..\..\mal\mal_resolve.h" "$(srcdir)\..\..\mal\mal_linker.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_profiler.h" "$(srcdir)\..\..\mal\mal_client.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\..\..\mal\mal_debugger.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\..\mal\mal_function.h"
	$(CC) $(CFLAGS) $(mdb_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"mdb.obj" -c "$(srcdir)\mdb.c"
language.obj: "$(srcdir)\language.c" "$(srcdir)\language.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_module.h" "$(srcdir)\..\..\mal\mal_scenario.h" "$(srcdir)\..\..\mal\mal_import.h" "$(srcdir)\..\..\mal\mal_session.h" "$(srcdir)\..\..\mal\mal_resolve.h" "$(srcdir)\..\..\mal\mal_profiler.h" "$(srcdir)\..\..\mal\mal_client.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\..\mal\mal_dataflow.h"
	$(CC) $(CFLAGS) $(language_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"language.obj" -c "$(srcdir)\language.c"
sabaoth.obj: "$(srcdir)\sabaoth.c" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\..\..\mal\mal_sabaoth.h" "$(srcdir)\sabaoth.h"
	$(CC) $(CFLAGS) $(sabaoth_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"sabaoth.obj" -c "$(srcdir)\sabaoth.c"
mal_io.obj: "$(srcdir)\mal_io.c" "$(srcdir)\mal_io.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_interpreter.h"
	$(CC) $(CFLAGS) $(mal_io_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"mal_io.obj" -c "$(srcdir)\mal_io.c"
tablet.obj: "$(srcdir)\tablet.c" "$(srcdir)\tablet.h" "$(srcdir)\..\..\..\gdk\gdk.h" "$(srcdir)\..\atoms\..\..\mal\mal.h" "$(srcdir)\..\atoms\..\..\..\common\stream\stream_socket.h" "$(srcdir)\..\atoms\streams.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\..\..\mal\mal_resolve.h" "$(srcdir)\..\..\mal\mal_profiler.h" "$(srcdir)\..\..\mal\mal_client.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\kernel\..\..\..\gdk\gdk.h" "$(srcdir)\..\kernel\..\..\mal\mal_exception.h" "$(srcdir)\..\kernel\..\..\mal\mal_interpreter.h" "$(srcdir)\..\kernel\algebra.h"
	$(CC) $(CFLAGS) $(tablet_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"tablet.obj" -c "$(srcdir)\tablet.c"
calc.obj: "$(srcdir)\calc.c" "$(srcdir)\..\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\..\..\mal\mal_interpreter.h"
	$(CC) $(CFLAGS) $(calc_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"calc.obj" -c "$(srcdir)\calc.c"
mal_mapi.obj: "$(srcdir)\mal_mapi.c" "$(srcdir)\mal_mapi.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_resolve.h" "$(srcdir)\..\..\mal\mal_profiler.h" "$(srcdir)\..\..\mal\mal_client.h" "$(srcdir)\..\..\mal\mal_scenario.h" "$(srcdir)\..\..\mal\mal_import.h" "$(srcdir)\..\..\mal\mal_session.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\..\mal\mal_authorize.h" "$(srcdir)\..\..\..\common\utils\msabaoth.h" "$(srcdir)\..\..\..\common\utils\mcrypt.h" "$(srcdir)\..\..\..\common\stream\stream.h" "$(srcdir)\..\atoms\..\..\mal\mal.h" "$(srcdir)\..\atoms\..\..\..\common\stream\stream_socket.h" "$(srcdir)\..\atoms\streams.h" "$(srcdir)\..\..\..\common\stream\stream_socket.h" "$(srcdir)\..\..\..\clients\mapilib\mapi.h"
	$(CC) $(CFLAGS) $(mal_mapi_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"mal_mapi.obj" -c "$(srcdir)\mal_mapi.c"
manual.obj: "$(srcdir)\manual.c" "$(srcdir)\manual.h" "$(srcdir)\..\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_resolve.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_profiler.h" "$(srcdir)\..\..\mal\mal_client.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\..\..\mal\mal_debugger.h" "$(srcdir)\..\..\mal\mal_interpreter.h"
	$(CC) $(CFLAGS) $(manual_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"manual.obj" -c "$(srcdir)\manual.c"
clients.obj: "$(srcdir)\clients.c" "$(srcdir)\clients.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\..\..\common\utils\mcrypt.h" "$(srcdir)\..\..\mal\mal_import.h" "$(srcdir)\..\..\mal\mal_scenario.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_resolve.h" "$(srcdir)\..\..\mal\mal_profiler.h" "$(srcdir)\..\..\mal\mal_client.h" "$(srcdir)\..\..\mal\mal_authorize.h" "$(srcdir)\..\..\mal\mal_private.h" "$(srcdir)\..\atoms\..\..\..\gdk\gdk.h" "$(srcdir)\..\atoms\..\..\mal\mal.h" "$(srcdir)\..\atoms\..\..\mal\mal_exception.h" "$(srcdir)\..\atoms\mtime.h"
	$(CC) $(CFLAGS) $(clients_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"clients.obj" -c "$(srcdir)\clients.c"
txtsim.obj: "$(srcdir)\txtsim.c" "$(srcdir)\txtsim.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h"
	$(CC) $(CFLAGS) $(txtsim_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"txtsim.obj" -c "$(srcdir)\txtsim.c"
zorder.obj: "$(srcdir)\zorder.c" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\zorder.h"
	$(CC) $(CFLAGS) $(zorder_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"zorder.obj" -c "$(srcdir)\zorder.c"
recycle.obj: "$(srcdir)\recycle.c" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\..\mal\mal_function.h" "$(srcdir)\..\..\mal\mal_listing.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_runtime.h" "$(srcdir)\..\..\mal\mal_client.h" "$(srcdir)\..\..\mal\mal_resolve.h" "$(srcdir)\..\..\mal\mal_profiler.h" "$(srcdir)\..\..\mal\mal_recycle.h" "$(srcdir)\recycle.h" "$(srcdir)\..\kernel\..\..\mal\mal.h" "$(srcdir)\..\kernel\..\..\..\gdk\gdk.h" "$(srcdir)\..\kernel\bat5.h" "$(srcdir)\..\kernel\..\..\mal\mal_exception.h" "$(srcdir)\..\kernel\..\..\mal\mal_interpreter.h" "$(srcdir)\..\kernel\algebra.h"
	$(CC) $(CFLAGS) $(recycle_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"recycle.obj" -c "$(srcdir)\recycle.c"
sysmon.obj: "$(srcdir)\sysmon.c" "$(srcdir)\sysmon.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\..\mal\mal_authorize.h" "$(srcdir)\..\..\mal\mal_runtime.h" "$(srcdir)\..\atoms\..\..\..\gdk\gdk.h" "$(srcdir)\..\atoms\..\..\mal\mal.h" "$(srcdir)\..\atoms\..\..\mal\mal_exception.h" "$(srcdir)\..\atoms\mtime.h"
	$(CC) $(CFLAGS) $(sysmon_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"sysmon.obj" -c "$(srcdir)\sysmon.c"
iterator.obj: "$(srcdir)\iterator.c" "$(srcdir)\iterator.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_interpreter.h"
	$(CC) $(CFLAGS) $(iterator_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"iterator.obj" -c "$(srcdir)\iterator.c"
batcalc.obj: "$(srcdir)\batcalc.c" "$(srcdir)\..\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\..\..\mal\mal_interpreter.h"
	$(CC) $(CFLAGS) $(batcalc_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"batcalc.obj" -c "$(srcdir)\batcalc.c"
factories.obj: "$(srcdir)\factories.c" "$(srcdir)\factories.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\..\mal\mal_namespace.h"
	$(CC) $(CFLAGS) $(factories_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"factories.obj" -c "$(srcdir)\factories.c"
tokenizer.obj: "$(srcdir)\tokenizer.c" "$(srcdir)\..\kernel\..\..\mal\mal.h" "$(srcdir)\..\kernel\..\..\..\gdk\gdk.h" "$(srcdir)\..\kernel\bat5.h" "$(srcdir)\tokenizer.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_resolve.h" "$(srcdir)\..\..\mal\mal_profiler.h" "$(srcdir)\..\..\mal\mal_client.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\..\mal\mal_linker.h"
	$(CC) $(CFLAGS) $(tokenizer_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"tokenizer.obj" -c "$(srcdir)\tokenizer.c"
json_util.obj: "$(srcdir)\json_util.c" "$(srcdir)\..\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\json_util.h" "$(srcdir)\..\atoms\..\..\..\gdk\gdk.h" "$(srcdir)\..\atoms\..\..\mal\mal.h" "$(srcdir)\..\atoms\..\..\mal\mal_client.h" "$(srcdir)\..\atoms\..\..\mal\mal_instruction.h" "$(srcdir)\..\atoms\..\..\mal\mal_exception.h" "$(srcdir)\..\atoms\json.h"
	$(CC) $(CFLAGS) $(json_util_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"json_util.obj" -c "$(srcdir)\json_util.c"
manifold.obj: "$(srcdir)\manifold.c" "$(srcdir)\manifold.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\..\mal\mal_resolve.h" "$(srcdir)\..\..\mal\mal_builder.h"
	$(CC) $(CFLAGS) $(manifold_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"manifold.obj" -c "$(srcdir)\manifold.c"
remote.obj: "$(srcdir)\remote.c" "$(srcdir)\remote.h" "$(srcdir)\..\..\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\mal\mal.h" "$(srcdir)\..\..\mal\mal_instruction.h" "$(srcdir)\..\..\mal\mal_type.h" "$(srcdir)\..\..\mal\mal_stack.h" "$(srcdir)\..\..\mal\mal_namespace.h" "$(srcdir)\..\..\mal\mal_errors.h" "$(srcdir)\..\..\mal\mal_exception.h" "$(srcdir)\..\..\mal\mal_interpreter.h" "$(srcdir)\..\..\mal\mal_function.h" "$(srcdir)\..\..\mal\mal_listing.h" "$(srcdir)\..\..\..\clients\mapilib\mapi.h" "$(srcdir)\..\..\..\common\utils\mutils.h"
	$(CC) $(CFLAGS) $(remote_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBMAL -Fo"remote.obj" -c "$(srcdir)\remote.c"
pcre.mal: "$(srcdir)\pcre.mal"
	$(INSTALL) "$(srcdir)\pcre.mal" "pcre.mal"
manifold.mal: "$(srcdir)\manifold.mal"
	$(INSTALL) "$(srcdir)\manifold.mal" "manifold.mal"
sysmon.mal: "$(srcdir)\sysmon.mal"
	$(INSTALL) "$(srcdir)\sysmon.mal" "sysmon.mal"
json_util.mal: "$(srcdir)\json_util.mal"
	$(INSTALL) "$(srcdir)\json_util.mal" "json_util.mal"
groupby.mal: "$(srcdir)\groupby.mal"
	$(INSTALL) "$(srcdir)\groupby.mal" "groupby.mal"
mal_init.mal: "$(srcdir)\mal_init.mal"
	$(INSTALL) "$(srcdir)\mal_init.mal" "mal_init.mal"
remote.mal: "$(srcdir)\remote.mal"
	$(INSTALL) "$(srcdir)\remote.mal" "remote.mal"
mal_mapi.mal: "$(srcdir)\mal_mapi.mal"
	$(INSTALL) "$(srcdir)\mal_mapi.mal" "mal_mapi.mal"
tokenizer.mal: "$(srcdir)\tokenizer.mal"
	$(INSTALL) "$(srcdir)\tokenizer.mal" "tokenizer.mal"
bbp.mal: "$(srcdir)\bbp.mal"
	$(INSTALL) "$(srcdir)\bbp.mal" "bbp.mal"
mal_io.mal: "$(srcdir)\mal_io.mal"
	$(INSTALL) "$(srcdir)\mal_io.mal" "mal_io.mal"
sabaoth.mal: "$(srcdir)\sabaoth.mal"
	$(INSTALL) "$(srcdir)\sabaoth.mal" "sabaoth.mal"
batExtensions.mal: "$(srcdir)\batExtensions.mal"
	$(INSTALL) "$(srcdir)\batExtensions.mal" "batExtensions.mal"
manual.mal: "$(srcdir)\manual.mal"
	$(INSTALL) "$(srcdir)\manual.mal" "manual.mal"
language.mal: "$(srcdir)\language.mal"
	$(INSTALL) "$(srcdir)\language.mal" "language.mal"
mdb.mal: "$(srcdir)\mdb.mal"
	$(INSTALL) "$(srcdir)\mdb.mal" "mdb.mal"
factories.mal: "$(srcdir)\factories.mal"
	$(INSTALL) "$(srcdir)\factories.mal" "factories.mal"
inspect.mal: "$(srcdir)\inspect.mal"
	$(INSTALL) "$(srcdir)\inspect.mal" "inspect.mal"
mat.mal: "$(srcdir)\mat.mal"
	$(INSTALL) "$(srcdir)\mat.mal" "mat.mal"
profiler.mal: "$(srcdir)\profiler.mal"
	$(INSTALL) "$(srcdir)\profiler.mal" "profiler.mal"
iterator.mal: "$(srcdir)\iterator.mal"
	$(INSTALL) "$(srcdir)\iterator.mal" "iterator.mal"
transaction.mal: "$(srcdir)\transaction.mal"
	$(INSTALL) "$(srcdir)\transaction.mal" "transaction.mal"
sample.mal: "$(srcdir)\sample.mal"
	$(INSTALL) "$(srcdir)\sample.mal" "sample.mal"
querylog.mal: "$(srcdir)\querylog.mal"
	$(INSTALL) "$(srcdir)\querylog.mal" "querylog.mal"
txtsim.mal: "$(srcdir)\txtsim.mal"
	$(INSTALL) "$(srcdir)\txtsim.mal" "txtsim.mal"
zorder.mal: "$(srcdir)\zorder.mal"
	$(INSTALL) "$(srcdir)\zorder.mal" "zorder.mal"
clients.mal: "$(srcdir)\clients.mal"
	$(INSTALL) "$(srcdir)\clients.mal" "clients.mal"
recycle.mal: "$(srcdir)\recycle.mal"
	$(INSTALL) "$(srcdir)\recycle.mal" "recycle.mal"
batmtime.mal: "$(srcdir)\batmtime.mal"
	$(INSTALL) "$(srcdir)\batmtime.mal" "batmtime.mal"
mkey.mal: "$(srcdir)\mkey.mal"
	$(INSTALL) "$(srcdir)\mkey.mal" "mkey.mal"
01_batcalc.mal: "$(srcdir)\01_batcalc.mal"
	$(INSTALL) "$(srcdir)\01_batcalc.mal" "01_batcalc.mal"
01_calc.mal: "$(srcdir)\01_calc.mal"
	$(INSTALL) "$(srcdir)\01_calc.mal" "01_calc.mal"
all-msc: "libmal.lib" "00_batcalc_hge.mal" "00_calc_hge.mal" "00_mkey_hge.mal" "00_mal_mapi_hge.mal" "00_iterator_hge.mal" "00_language_hge.mal" "00_batExtensions_hge.mal" "pcre.mal" "manifold.mal" "sysmon.mal" "json_util.mal" "groupby.mal" "mal_init.mal" "remote.mal" "mal_mapi.mal" "tokenizer.mal" "bbp.mal" "mal_io.mal" "sabaoth.mal" "batExtensions.mal" "manual.mal" "language.mal" "mdb.mal" "factories.mal" "inspect.mal" "mat.mal" "profiler.mal" "iterator.mal" "transaction.mal" "sample.mal" "querylog.mal" "txtsim.mal" "zorder.mal" "clients.mal" "recycle.mal" "batmtime.mal" "mkey.mal" "01_batcalc.mal" "01_calc.mal"
check-msc: all-msc "pcre.mal" "00_mkey_hge.mal" "manifold.mal" "sysmon.mal" "json_util.mal" "00_mal_mapi_hge.mal" "groupby.mal" "00_language_hge.mal" "mal_init.mal" "remote.mal" "mal_mapi.mal" "tokenizer.mal" "00_calc_hge.mal" "01_batcalc.mal" "bbp.mal" "mal_io.mal" "sabaoth.mal" "batExtensions.mal" "manual.mal" "00_iterator_hge.mal" "language.mal" "mdb.mal" "factories.mal" "inspect.mal" "mat.mal" "profiler.mal" "00_batcalc_hge.mal" "iterator.mal" "transaction.mal" "sample.mal" "querylog.mal" "txtsim.mal" "zorder.mal" "clients.mal" "recycle.mal" "batmtime.mal" "mkey.mal" "00_batExtensions_hge.mal" "01_calc.mal"
install-msc: install-exec install-data
install-exec:  "install_pcre.mal" "install_00_mkey_hge.mal" "install_manifold.mal" "install_sysmon.mal" "install_json_util.mal" "install_00_mal_mapi_hge.mal" "install_groupby.mal" "install_00_language_hge.mal" "install_mal_init.mal" "install_remote.mal" "install_mal_mapi.mal" "install_tokenizer.mal" "install_00_calc_hge.mal" "install_01_batcalc.mal" "install_bbp.mal" "install_mal_io.mal" "install_sabaoth.mal" "install_batExtensions.mal" "install_manual.mal" "install_00_iterator_hge.mal" "install_language.mal" "install_mdb.mal" "install_factories.mal" "install_inspect.mal" "install_mat.mal" "install_profiler.mal" "install_00_batcalc_hge.mal" "install_iterator.mal" "install_transaction.mal" "install_sample.mal" "install_querylog.mal" "install_txtsim.mal" "install_zorder.mal" "install_clients.mal" "install_recycle.mal" "install_batmtime.mal" "install_mkey.mal" "install_00_batExtensions_hge.mal" "install_01_calc.mal" 
install_pcre.mal: "pcre.mal" "$(libdir)\monetdb5"
	$(INSTALL) "pcre.mal" "$(libdir)\monetdb5\pcre.mal"
!IF defined(HAVE_HGE)
install_00_mkey_hge.mal: "00_mkey_hge.mal" "$(libdir)\monetdb5\autoload"
	$(INSTALL) "00_mkey_hge.mal" "$(libdir)\monetdb5\autoload\00_mkey_hge.mal"
!ELSE
install_00_mkey_hge.mal:
!ENDIF
install_manifold.mal: "manifold.mal" "$(libdir)\monetdb5"
	$(INSTALL) "manifold.mal" "$(libdir)\monetdb5\manifold.mal"
install_sysmon.mal: "sysmon.mal" "$(libdir)\monetdb5"
	$(INSTALL) "sysmon.mal" "$(libdir)\monetdb5\sysmon.mal"
install_json_util.mal: "json_util.mal" "$(libdir)\monetdb5"
	$(INSTALL) "json_util.mal" "$(libdir)\monetdb5\json_util.mal"
!IF defined(HAVE_HGE)
install_00_mal_mapi_hge.mal: "00_mal_mapi_hge.mal" "$(libdir)\monetdb5\autoload"
	$(INSTALL) "00_mal_mapi_hge.mal" "$(libdir)\monetdb5\autoload\00_mal_mapi_hge.mal"
!ELSE
install_00_mal_mapi_hge.mal:
!ENDIF
install_groupby.mal: "groupby.mal" "$(libdir)\monetdb5"
	$(INSTALL) "groupby.mal" "$(libdir)\monetdb5\groupby.mal"
!IF defined(HAVE_HGE)
install_00_language_hge.mal: "00_language_hge.mal" "$(libdir)\monetdb5\autoload"
	$(INSTALL) "00_language_hge.mal" "$(libdir)\monetdb5\autoload\00_language_hge.mal"
!ELSE
install_00_language_hge.mal:
!ENDIF
install_mal_init.mal: "mal_init.mal" "$(libdir)\monetdb5"
	$(INSTALL) "mal_init.mal" "$(libdir)\monetdb5\mal_init.mal"
install_remote.mal: "remote.mal" "$(libdir)\monetdb5"
	$(INSTALL) "remote.mal" "$(libdir)\monetdb5\remote.mal"
install_mal_mapi.mal: "mal_mapi.mal" "$(libdir)\monetdb5"
	$(INSTALL) "mal_mapi.mal" "$(libdir)\monetdb5\mal_mapi.mal"
install_tokenizer.mal: "tokenizer.mal" "$(libdir)\monetdb5"
	$(INSTALL) "tokenizer.mal" "$(libdir)\monetdb5\tokenizer.mal"
!IF defined(HAVE_HGE)
install_00_calc_hge.mal: "00_calc_hge.mal" "$(libdir)\monetdb5\autoload"
	$(INSTALL) "00_calc_hge.mal" "$(libdir)\monetdb5\autoload\00_calc_hge.mal"
!ELSE
install_00_calc_hge.mal:
!ENDIF
install_01_batcalc.mal: "01_batcalc.mal" "$(libdir)\monetdb5\autoload"
	$(INSTALL) "01_batcalc.mal" "$(libdir)\monetdb5\autoload\01_batcalc.mal"
install_bbp.mal: "bbp.mal" "$(libdir)\monetdb5"
	$(INSTALL) "bbp.mal" "$(libdir)\monetdb5\bbp.mal"
install_mal_io.mal: "mal_io.mal" "$(libdir)\monetdb5"
	$(INSTALL) "mal_io.mal" "$(libdir)\monetdb5\mal_io.mal"
install_sabaoth.mal: "sabaoth.mal" "$(libdir)\monetdb5"
	$(INSTALL) "sabaoth.mal" "$(libdir)\monetdb5\sabaoth.mal"
install_batExtensions.mal: "batExtensions.mal" "$(libdir)\monetdb5"
	$(INSTALL) "batExtensions.mal" "$(libdir)\monetdb5\batExtensions.mal"
install_manual.mal: "manual.mal" "$(libdir)\monetdb5"
	$(INSTALL) "manual.mal" "$(libdir)\monetdb5\manual.mal"
!IF defined(HAVE_HGE)
install_00_iterator_hge.mal: "00_iterator_hge.mal" "$(libdir)\monetdb5\autoload"
	$(INSTALL) "00_iterator_hge.mal" "$(libdir)\monetdb5\autoload\00_iterator_hge.mal"
!ELSE
install_00_iterator_hge.mal:
!ENDIF
install_language.mal: "language.mal" "$(libdir)\monetdb5"
	$(INSTALL) "language.mal" "$(libdir)\monetdb5\language.mal"
install_mdb.mal: "mdb.mal" "$(libdir)\monetdb5"
	$(INSTALL) "mdb.mal" "$(libdir)\monetdb5\mdb.mal"
install_factories.mal: "factories.mal" "$(libdir)\monetdb5"
	$(INSTALL) "factories.mal" "$(libdir)\monetdb5\factories.mal"
install_inspect.mal: "inspect.mal" "$(libdir)\monetdb5"
	$(INSTALL) "inspect.mal" "$(libdir)\monetdb5\inspect.mal"
install_mat.mal: "mat.mal" "$(libdir)\monetdb5"
	$(INSTALL) "mat.mal" "$(libdir)\monetdb5\mat.mal"
install_profiler.mal: "profiler.mal" "$(libdir)\monetdb5"
	$(INSTALL) "profiler.mal" "$(libdir)\monetdb5\profiler.mal"
!IF defined(HAVE_HGE)
install_00_batcalc_hge.mal: "00_batcalc_hge.mal" "$(libdir)\monetdb5\autoload"
	$(INSTALL) "00_batcalc_hge.mal" "$(libdir)\monetdb5\autoload\00_batcalc_hge.mal"
!ELSE
install_00_batcalc_hge.mal:
!ENDIF
install_iterator.mal: "iterator.mal" "$(libdir)\monetdb5"
	$(INSTALL) "iterator.mal" "$(libdir)\monetdb5\iterator.mal"
install_transaction.mal: "transaction.mal" "$(libdir)\monetdb5"
	$(INSTALL) "transaction.mal" "$(libdir)\monetdb5\transaction.mal"
install_sample.mal: "sample.mal" "$(libdir)\monetdb5"
	$(INSTALL) "sample.mal" "$(libdir)\monetdb5\sample.mal"
install_querylog.mal: "querylog.mal" "$(libdir)\monetdb5"
	$(INSTALL) "querylog.mal" "$(libdir)\monetdb5\querylog.mal"
install_txtsim.mal: "txtsim.mal" "$(libdir)\monetdb5"
	$(INSTALL) "txtsim.mal" "$(libdir)\monetdb5\txtsim.mal"
install_zorder.mal: "zorder.mal" "$(libdir)\monetdb5"
	$(INSTALL) "zorder.mal" "$(libdir)\monetdb5\zorder.mal"
install_clients.mal: "clients.mal" "$(libdir)\monetdb5"
	$(INSTALL) "clients.mal" "$(libdir)\monetdb5\clients.mal"
install_recycle.mal: "recycle.mal" "$(libdir)\monetdb5"
	$(INSTALL) "recycle.mal" "$(libdir)\monetdb5\recycle.mal"
install_batmtime.mal: "batmtime.mal" "$(libdir)\monetdb5"
	$(INSTALL) "batmtime.mal" "$(libdir)\monetdb5\batmtime.mal"
install_mkey.mal: "mkey.mal" "$(libdir)\monetdb5"
	$(INSTALL) "mkey.mal" "$(libdir)\monetdb5\mkey.mal"
!IF defined(HAVE_HGE)
install_00_batExtensions_hge.mal: "00_batExtensions_hge.mal" "$(libdir)\monetdb5\autoload"
	$(INSTALL) "00_batExtensions_hge.mal" "$(libdir)\monetdb5\autoload\00_batExtensions_hge.mal"
!ELSE
install_00_batExtensions_hge.mal:
!ENDIF
install_01_calc.mal: "01_calc.mal" "$(libdir)\monetdb5\autoload"
	$(INSTALL) "01_calc.mal" "$(libdir)\monetdb5\autoload\01_calc.mal"
"$(libdir)\monetdb5":
	if not exist "$(libdir)\monetdb5" $(MKDIR) "$(libdir)\monetdb5"
"$(libdir)\monetdb5\autoload":
	if not exist "$(libdir)\monetdb5\autoload" $(MKDIR) "$(libdir)\monetdb5\autoload"
install-data:
