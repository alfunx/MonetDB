# enqueue something 
b:= bat.new(:int);

bat.append(b,1);
bat.append(b,0);
bat.append(b,2);
bat.append(b,2);
bat.append(b,5);
bat.append(b,5);
bat.append(b,3);

io.print(b);

bp:= algebra.firstn(b,0:wrd,false,false);
io.print(bp);
bp:= algebra.firstn(b,1:wrd,false,false);
io.print(bp);
bp:= algebra.firstn(b,2:wrd,false,false);
io.print(bp);
bp:= algebra.firstn(b,3:wrd,false,false);
io.print(bp);
bp:= algebra.firstn(b,4:wrd,false,false);
io.print(bp);
bp:= algebra.firstn(b,5:wrd,false,false);
io.print(bp);
bp:= algebra.firstn(b,6:wrd,false,false);
io.print(bp);
bp:= algebra.firstn(b,7:wrd,false,false);
io.print(bp);
bp:= algebra.firstn(b,8:wrd,false,false);
io.print(bp);

bp:= algebra.firstn(b,0:wrd,true,false);
io.print(bp);
bp:= algebra.firstn(b,1:wrd,true,false);
io.print(bp);
bp:= algebra.firstn(b,2:wrd,true,false);
io.print(bp);
bp:= algebra.firstn(b,3:wrd,true,false);
io.print(bp);
bp:= algebra.firstn(b,4:wrd,true,false);
io.print(bp);
bp:= algebra.firstn(b,5:wrd,true,false);
io.print(bp);
bp:= algebra.firstn(b,6:wrd,true,false);
io.print(bp);
bp:= algebra.firstn(b,7:wrd,true,false);
io.print(bp);
bp:= algebra.firstn(b,8:wrd,true,false);
io.print(bp);

