stderr of test 'remote03` in directory 'monetdb5/modules/mal` itself:


# 23:12:08 >  
# 23:12:08 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=30565" "--set" "mapi_usock=/var/tmp/mtest-23626/.s.monetdb.30565" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/default//Linux/var/MonetDB/mTests_monetdb5_modules_mal" "--set" "mal_listing=2" "--set" "embedded_r=yes"
# 23:12:08 >  

# builtin opt 	gdk_dbpath = /export/scratch1/mk/default//Linux/var/monetdb5/dbfarm/demo
# builtin opt 	gdk_debug = 0
# builtin opt 	gdk_vmtrim = no
# builtin opt 	monet_prompt = >
# builtin opt 	monet_daemon = no
# builtin opt 	mapi_port = 50000
# builtin opt 	mapi_open = false
# builtin opt 	mapi_autosense = false
# builtin opt 	sql_optimizer = default_pipe
# builtin opt 	sql_debug = 0
# cmdline opt 	gdk_nr_threads = 0
# cmdline opt 	mapi_open = true
# cmdline opt 	mapi_port = 30565
# cmdline opt 	mapi_usock = /var/tmp/mtest-23626/.s.monetdb.30565
# cmdline opt 	monet_prompt = 
# cmdline opt 	mal_listing = 2
# cmdline opt 	gdk_dbpath = /export/scratch1/mk/default//Linux/var/MonetDB/mTests_monetdb5_modules_mal
# cmdline opt 	mal_listing = 2
# cmdline opt 	embedded_r = yes
# cmdline opt 	gdk_debug = 536870922

# 23:12:08 >  
# 23:12:08 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "--host=/var/tmp/mtest-23626" "--port=30565"
# 23:12:08 >  

MAPI  = (monetdb) /var/tmp/mtest-25315/.s.monetdb.30153
QUERY = # let connect figure out itself how to connect to the running db
        uri := sabaoth.getLocalConnectionURI();
        conn:str := remote.connect(uri, "monetdb", "monetdb");
        
        # this is invalid, as io.print is an invalid module, and bla will be
        # taken as function
        function tst(conn:str);
        res:str := remote.put(conn,:void);
        res := remote.exec(conn, "io.print", "bla");
        catch SyntaxException:str;
        	io.print("Received first error from the remote site");
        	io.printf("!%s\n", SyntaxException);
        exit SyntaxException;
        
        # now do it with a function that returns something (a BAT in this case)
        bn:= bat.new(:str);
        b := remote.put(conn,bn);
        catch MALException:str;
        	io.print("Received second init error from the remote site");
        	io.printf("!%s\n", MALException);
        exit MALException;
        io.print(b);
        b := remote.exec(conn, "inspect", "getAtomNames");
        catch MALException:str;
        	io.print("Received second error from the remote site");
        	io.printf("!%s\n", MALException);
        exit MALException;
        io.print(b);
        
        c:bat[:str] := remote.get(conn, b);
        io.print(c);
        catch MALException:str;
        	io.print("Received third error from the remote site");
        	io.printf("!%s\n", MALException);
        exit MALException;
        
        # io.print only outputs things, but returns nothing
        ah:str := remote.put(conn,:void);
        io.print(ah);
        ah:str := remote.exec(conn, "io", "print", b);
        catch MALException:str;
        	io.print("Received fourth error from the remote site");
        	io.printf("!%s\n", MALException);
        exit MALException;
        
        d:void := remote.get(conn, ah);
        io.print(d);
        catch MALException:str;
        	io.print("Received fifth error from the remote site");
        	io.printf("!%s\n", MALException);
        exit MALException;
        end tst;
        tst(conn);
        
        catch SyntaxException:str;
        	io.print("Received an error from the remote site");
        	io.printf("!%s\n", SyntaxException);
        exit SyntaxException;
        # help testweb a bit, since currently no cleanup is done on server
        # shutdown
        remote.disconnect(conn);
        catch MALException:str;
        	io.print("Received an error from the remote site");
        exit MALException;
        
ERROR = !SyntaxException:remote.exec:(mapi:monetdb://monetdb@lab02.da.cwi.nl/mTests_monetdb5_modules_mal) rmt0_X_3_void := io.print.bla();


# 23:12:09 >  
# 23:12:09 >  "Done."
# 23:12:09 >  

