stdout of test 'dataflow` in directory 'monetdb5/optimizer` itself:


# 18:05:39 >  
# 18:05:39 >   mserver5  --debug=10 --set gdk_nr_threads=0  --set "gdk_dbfarm=/ufs/mk/Aug2011//Linux/var/MonetDB" --set mapi_open=true --set mapi_port=32759 --set monet_prompt= --trace --forcemito --set mal_listing=2  --dbname=mTests_optimizer  dataflow.mal
# 18:05:39 >  

# MonetDB 5 server v11.5.0
# This is an unreleased version
# Serving database 'mTests_optimizer', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 7.749 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://eir.ins.cwi.nl:32759/
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 10:55:30 >  
# 10:55:30 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "--host=/var/tmp/mtest-5303" "--port=30531"
# 10:55:30 >  

function user.tst():void;               	#[0] (0)  0 
    s:bat[:int] := microbenchmark.uniform(0@0:oid,100000:wrd,100000:int);	#[1] (0) MBMuniform 1 <- 2 3 4 
    l:int := aggr.min(s:bat[:int]);     	#[2] (0) ALGminany 5 <- 1 
    h:int := l:int;                     	#[3] (0)  6 <- 5 
#mdb.setTimer(true);                    
#mdb.setThread(true);                   
barrier X_28:bit := language.dataflow();	#[6] (0) MALstartDataflow 28 
    z:bat[:oid] := nil:bat[:oid];       	#[7] (0)  9 <- 10 
    t1:bat[:oid] := algebra.subselect(s:bat[:int],l:int,h:int,true:bit,true:bit,false:bit);	#[8] (0) ALGsubselect1 11 <- 1 5 6 12 13 14 
    t2:bat[:oid] := algebra.subselect(s:bat[:int],l:int,h:int,true:bit,true:bit,false:bit);	#[9] (0) ALGsubselect1 15 <- 1 5 6 12 12 14 
    t3:bat[:oid] := algebra.subselect(s:bat[:int],l:int,h:int,true:bit,true:bit,false:bit);	#[10] (0) ALGsubselect1 16 <- 1 5 6 12 12 14 
    t4:bat[:oid] := algebra.subselect(s:bat[:int],l:int,h:int,true:bit,true:bit,false:bit);	#[11] (0) ALGsubselect1 17 <- 1 5 6 12 12 14 
    t5:bat[:oid] := algebra.subselect(s:bat[:int],l:int,h:int,true:bit,true:bit,false:bit);	#[12] (0) ALGsubselect1 18 <- 1 5 6 12 12 14 
    t6:bat[:oid] := algebra.subselect(s:bat[:int],l:int,h:int,true:bit,true:bit,false:bit);	#[13] (0) ALGsubselect1 19 <- 1 5 6 12 12 14 
    t7:bat[:oid] := algebra.subselect(s:bat[:int],l:int,h:int,true:bit,true:bit,false:bit);	#[14] (0) ALGsubselect1 20 <- 1 5 6 12 12 14 
    t8:bat[:oid] := algebra.subselect(s:bat[:int],l:int,h:int,true:bit,true:bit,false:bit);	#[15] (0) ALGsubselect1 21 <- 1 5 6 12 12 14 
    language.pass(s:bat[:int]);         	#[16] (0) MALpass 27 <- 1 
exit X_28:bit;                          	#[17] (0)  28 
    z:bat[:oid] := mat.pack(t1:bat[:oid],t2:bat[:oid],t3:bat[:oid],t4:bat[:oid],t5:bat[:oid],t6:bat[:oid],t7:bat[:oid],t8:bat[:oid]);	#[18] (0) MATpack 9 <- 11 15 16 17 18 19 20 21 
    mdb.var();                          	#[19] (0) MDBvar 22 
    c:wrd := aggr.count(z:bat[:oid]);   	#[20] (0) ALGcount_bat 23 <- 9 
    io.print(c:wrd);                    	#[21] (0) IOprint_val 24 <- 23 
    io.print("done":str);               	#[22] (0) IOprint_val 25 <- 26 
end user.tst;                           	#[23] (0)  
#Stack 'tst' size=512 top=31
#[1]     s = nil :bat[:int]   eolife=16 
#[2]    _2 = 0@0 :oid  constant 
#[3]    _3 = 10000000 :wrd  constant 
#[4]    _4 = 10000000 :int  constant 
#[5]     l = 0 :int  
#[6]     h = 0 :int  
#[9]     z = <tmp_160> :bat[:void,:int] rows=8   eolife=20 
#[10]   _10 = nil :bat[:oid,:int]  constant  eolife=6 
#[11]    go = false :bit  
#[12]    t1 = nil :bat[:oid,:int]   eolife=16 
#[13]    t2 = nil :bat[:oid,:int]   eolife=16 
#[14]    t3 = nil :bat[:oid,:int]   eolife=16 
#[15]    t4 = nil :bat[:oid,:int]   eolife=16 
#[16]    t5 = nil :bat[:oid,:int]   eolife=16 
#[17]    t6 = nil :bat[:oid,:int]   eolife=16 
#[18]    t7 = nil :bat[:oid,:int]   eolife=16 
#[19]    t8 = nil :bat[:oid,:int]   eolife=16 
#[21]     c = 0 :wrd  
#[24]   _24 = "done" :str  constant 
#[26]   _26 = nil :bat[:oid,:int]  constant 
[ 8 ]

[ "done" ]



# 18:05:41 >  
# 18:05:41 >  Done.
# 18:05:41 >  

