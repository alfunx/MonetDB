
## Use: nmake -f makefile.msc install

# Nothing much configurable below

TOPDIR = .\..\..\..\..
srcdir = $(TOPDIR)\..\sql\backends\monet5\vaults
!INCLUDE $(TOPDIR)\..\NT\rules.msc
all: build-all
check: check-recursive check-msc
install: install-recursive install-msc
!IFDEF HAVE_SAMTOOLS
HAVE_SAMTOOLS-1-all: "HAVE_SAMTOOLS-1-dir" "HAVE_SAMTOOLS-1-Makefile"
	$(CD) "bam" && $(MAKE) /nologo $(MAKEDEBUG) "prefix=$(prefix)" "bits=$(bits)" all 
HAVE_SAMTOOLS-1-dir: 
	if not exist "bam" $(MKDIR) "bam"
HAVE_SAMTOOLS-1-Makefile: "$(srcdir)\bam\Makefile.msc"
	$(INSTALL) "$(srcdir)\bam\Makefile.msc" "bam\Makefile"
HAVE_SAMTOOLS-1-check:
	$(CD) "bam" && $(MAKE) /nologo $(MAKEDEBUG) "prefix=$(prefix)" "bits=$(bits)" check
HAVE_SAMTOOLS-1-install:
	$(CD) "bam" && $(MAKE) /nologo $(MAKEDEBUG) "prefix=$(prefix)" "bits=$(bits)" install
!ELSE
HAVE_SAMTOOLS-1-all:
HAVE_SAMTOOLS-1-check:
HAVE_SAMTOOLS-1-install:
!ENDIF
!IFDEF HAVE_FITS
HAVE_FITS-2-all: "HAVE_FITS-2-dir" "HAVE_FITS-2-Makefile"
	$(CD) "fits" && $(MAKE) /nologo $(MAKEDEBUG) "prefix=$(prefix)" "bits=$(bits)" all 
HAVE_FITS-2-dir: 
	if not exist "fits" $(MKDIR) "fits"
HAVE_FITS-2-Makefile: "$(srcdir)\fits\Makefile.msc"
	$(INSTALL) "$(srcdir)\fits\Makefile.msc" "fits\Makefile"
HAVE_FITS-2-check:
	$(CD) "fits" && $(MAKE) /nologo $(MAKEDEBUG) "prefix=$(prefix)" "bits=$(bits)" check
HAVE_FITS-2-install:
	$(CD) "fits" && $(MAKE) /nologo $(MAKEDEBUG) "prefix=$(prefix)" "bits=$(bits)" install
!ELSE
HAVE_FITS-2-all:
HAVE_FITS-2-check:
HAVE_FITS-2-install:
!ENDIF
!IFDEF HAVE_LIDAR
HAVE_LIDAR-3-all: "HAVE_LIDAR-3-dir" "HAVE_LIDAR-3-Makefile"
	$(CD) "lidar" && $(MAKE) /nologo $(MAKEDEBUG) "prefix=$(prefix)" "bits=$(bits)" all 
HAVE_LIDAR-3-dir: 
	if not exist "lidar" $(MKDIR) "lidar"
HAVE_LIDAR-3-Makefile: "$(srcdir)\lidar\Makefile.msc"
	$(INSTALL) "$(srcdir)\lidar\Makefile.msc" "lidar\Makefile"
HAVE_LIDAR-3-check:
	$(CD) "lidar" && $(MAKE) /nologo $(MAKEDEBUG) "prefix=$(prefix)" "bits=$(bits)" check
HAVE_LIDAR-3-install:
	$(CD) "lidar" && $(MAKE) /nologo $(MAKEDEBUG) "prefix=$(prefix)" "bits=$(bits)" install
!ELSE
HAVE_LIDAR-3-all:
HAVE_LIDAR-3-check:
HAVE_LIDAR-3-install:
!ENDIF
!IFDEF HAVE_NETCDF
HAVE_NETCDF-4-all: "HAVE_NETCDF-4-dir" "HAVE_NETCDF-4-Makefile"
	$(CD) "netcdf" && $(MAKE) /nologo $(MAKEDEBUG) "prefix=$(prefix)" "bits=$(bits)" all 
HAVE_NETCDF-4-dir: 
	if not exist "netcdf" $(MKDIR) "netcdf"
HAVE_NETCDF-4-Makefile: "$(srcdir)\netcdf\Makefile.msc"
	$(INSTALL) "$(srcdir)\netcdf\Makefile.msc" "netcdf\Makefile"
HAVE_NETCDF-4-check:
	$(CD) "netcdf" && $(MAKE) /nologo $(MAKEDEBUG) "prefix=$(prefix)" "bits=$(bits)" check
HAVE_NETCDF-4-install:
	$(CD) "netcdf" && $(MAKE) /nologo $(MAKEDEBUG) "prefix=$(prefix)" "bits=$(bits)" install
!ELSE
HAVE_NETCDF-4-all:
HAVE_NETCDF-4-check:
HAVE_NETCDF-4-install:
!ENDIF
!IFDEF HAVE_SHP
HAVE_SHP-5-all: "HAVE_SHP-5-dir" "HAVE_SHP-5-Makefile"
	$(CD) "shp" && $(MAKE) /nologo $(MAKEDEBUG) "prefix=$(prefix)" "bits=$(bits)" all 
HAVE_SHP-5-dir: 
	if not exist "shp" $(MKDIR) "shp"
HAVE_SHP-5-Makefile: "$(srcdir)\shp\Makefile.msc"
	$(INSTALL) "$(srcdir)\shp\Makefile.msc" "shp\Makefile"
HAVE_SHP-5-check:
	$(CD) "shp" && $(MAKE) /nologo $(MAKEDEBUG) "prefix=$(prefix)" "bits=$(bits)" check
HAVE_SHP-5-install:
	$(CD) "shp" && $(MAKE) /nologo $(MAKEDEBUG) "prefix=$(prefix)" "bits=$(bits)" install
!ELSE
HAVE_SHP-5-all:
HAVE_SHP-5-check:
HAVE_SHP-5-install:
!ENDIF
all-recursive: "HAVE_SAMTOOLS-1-all" "HAVE_FITS-2-all" "HAVE_LIDAR-3-all" "HAVE_NETCDF-4-all" "HAVE_SHP-5-all" 
check-recursive: "HAVE_SAMTOOLS-1-check" "HAVE_FITS-2-check" "HAVE_LIDAR-3-check" "HAVE_NETCDF-4-check" "HAVE_SHP-5-check" 
install-recursive: "HAVE_SAMTOOLS-1-install" "HAVE_FITS-2-install" "HAVE_LIDAR-3-install" "HAVE_NETCDF-4-install" "HAVE_SHP-5-install" 
INCLUDES = -I$(srcdir) "-I..\..\..\include" -I$(srcdir)\..\..\..\include "-I..\..\..\common" -I$(srcdir)\..\..\..\common "-I..\..\..\storage" -I$(srcdir)\..\..\..\storage "-I..\..\..\server" -I$(srcdir)\..\..\..\server "-I.." -I$(srcdir)\.. "-I..\..\..\..\monetdb5\modules\atoms" -I$(srcdir)\..\..\..\..\monetdb5\modules\atoms "-I..\..\..\..\monetdb5\modules\kernel" -I$(srcdir)\..\..\..\..\monetdb5\modules\kernel "-I..\..\..\..\monetdb5\mal" -I$(srcdir)\..\..\..\..\monetdb5\mal "-I..\..\..\..\monetdb5\modules\mal" -I$(srcdir)\..\..\..\..\monetdb5\modules\mal "-I..\..\..\..\monetdb5\optimizer" -I$(srcdir)\..\..\..\..\monetdb5\optimizer "-I..\..\..\..\monetdb5\scheduler" -I$(srcdir)\..\..\..\..\monetdb5\scheduler "-I..\..\..\..\common\options" -I$(srcdir)\..\..\..\..\common\options "-I..\..\..\..\common\stream" -I$(srcdir)\..\..\..\..\common\stream "-I..\..\..\..\common\utils" -I$(srcdir)\..\..\..\..\common\utils "-I..\..\..\..\gdk" -I$(srcdir)\..\..\..\..\gdk $(READLINE_INCS)
EXTRA_DIST_DIR =  Tests
70_vault.mal: "$(srcdir)\70_vault.mal"
	$(INSTALL) "$(srcdir)\70_vault.mal" "70_vault.mal"
vault.mal: "$(srcdir)\vault.mal"
	$(INSTALL) "$(srcdir)\vault.mal" "vault.mal"
vault.sql: "$(srcdir)\vault.sql"
	$(INSTALL) "$(srcdir)\vault.sql" "vault.sql"
lib_vault.dll:  ..\..\..\..\monetdb5\tools\libmonetdb5.lib ..\..\..\..\gdk\libbat.lib
lib_vault_LIBS = ..\..\..\..\monetdb5\tools\libmonetdb5.lib ..\..\..\..\gdk\libbat.lib $(curl_LIBS)
lib_vault_OBJS = vault.obj
lib_vault_DEPS = $(lib_vault_OBJS)
lib_vault.lib: lib_vault.dll
lib_vault.dll: $(lib_vault_DEPS) 
	python "$(TOPDIR)\..\NT\wincompile.py" $(CC) $(CFLAGS) -LD -Felib_vault.dll @<< /link @<<
$(lib_vault_OBJS)
<<
$(lib_vault_LIBS)
<<
	if exist $@.manifest $(MT) -manifest $@.manifest -outputresource:$@;2
	if not exist .libs $(MKDIR) .libs
	$(INSTALL) "lib_vault.dll" ".libs\lib_vault.dll"

vault.obj: "$(srcdir)\vault.c" "$(srcdir)\vault.h" "$(srcdir)\..\..\..\..\monetdb5\mal\mal.h" "$(srcdir)\..\..\..\..\monetdb5\mal\..\..\gdk\gdk.h" "$(srcdir)\..\..\..\..\monetdb5\mal\mal_resolve.h" "$(srcdir)\..\..\..\..\monetdb5\mal\mal_profiler.h" "$(srcdir)\..\..\..\..\monetdb5\mal\mal_client.h" "$(srcdir)\..\..\..\..\monetdb5\mal\mal_interpreter.h"
	$(CC) $(CFLAGS) $(vault_CFLAGS) $(GENDLL) -D_CRT_SECURE_NO_WARNINGS -DLIBVAULT -Fo"vault.obj" -c "$(srcdir)\vault.c"
build-all: $(BUILT_SOURCES) all-recursive all-msc
all-msc: "lib_vault.dll" "70_vault.mal" "vault.mal" "vault.sql"
check-msc: all-msc "70_vault.mal" "lib_vault.dll" "vault.mal" "vault.sql"
install-msc: install-exec install-data
install-exec:  "install_70_vault.mal" "install_lib_vault" "install_vault.mal" "install_vault.sql" 
install_70_vault.mal: "70_vault.mal" "$(libdir)\monetdb5\autoload"
	$(INSTALL) "70_vault.mal" "$(libdir)\monetdb5\autoload\70_vault.mal"
install_lib_vault: "lib_vault.dll" "$(libdir)\monetdb5"
	$(INSTALL) "lib_vault.dll" "$(libdir)\monetdb5\lib_vault.dll"
	$(INSTALL) "lib_vault.lib" "$(libdir)\monetdb5\lib_vault.lib"
install_vault.mal: "vault.mal" "$(libdir)\monetdb5"
	$(INSTALL) "vault.mal" "$(libdir)\monetdb5\vault.mal"
install_vault.sql: "vault.sql" "$(libdir)\monetdb5"
	$(INSTALL) "vault.sql" "$(libdir)\monetdb5\vault.sql"
"$(libdir)\monetdb5\autoload":
	if not exist "$(libdir)\monetdb5\autoload" $(MKDIR) "$(libdir)\monetdb5\autoload"
"$(libdir)\monetdb5":
	if not exist "$(libdir)\monetdb5" $(MKDIR) "$(libdir)\monetdb5"
install-data:
