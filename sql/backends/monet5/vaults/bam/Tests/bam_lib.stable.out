stdout of test 'bam_lib` in directory 'sql/backends/monet5/vaults/bam` itself:


# 14:48:31 >  
# 14:48:31 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35990" "--set" "mapi_usock=/var/tmp/mtest-20228/.s.monetdb.35990" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/robin/MonetDB/PREFIX/var/MonetDB/mTests_sql_backends_monet5_bam" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 14:48:31 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_sql_backends_monet5_bam', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 7.333 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://robin-xps13:35990/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-20228/.s.monetdb.35990
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 14:48:31 >  
# 14:48:31 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-20228" "--port=35990"
# 14:48:31 >  

#SET SCHEMA bam;
#SELECT bam_flag(1, 'mult_segm');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(2, 'prop_alig');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(4, 'segm_unma');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(8, 'next_unma');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(16, 'segm_reve');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(32, 'next_reve');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(64, 'firs_segm');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(128, 'last_segm');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(256, 'seco_alig');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(512, 'qual_cont');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(1024, 'opti_dupl');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(2048, 'supp_alig');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(2, 'mult_segm');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ false	]
#SELECT bam_flag(4, 'prop_alig');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ false	]
#SELECT bam_flag(8, 'segm_unma');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ false	]
#SELECT bam_flag(16, 'next_unma');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ false	]
#SELECT bam_flag(4, 'segm_reve');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ false	]
#SELECT bam_flag(2, 'next_reve');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ false	]
#SELECT bam_flag(4, 'firs_segm');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ false	]
#SELECT bam_flag(8, 'last_segm');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ false	]
#SELECT bam_flag(16, 'seco_alig');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ false	]
#SELECT bam_flag(32, 'qual_cont');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ false	]
#SELECT bam_flag(64, 'opti_dupl');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ false	]
#SELECT bam_flag(128, 'supp_alig');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ false	]
#SELECT bam_flag(2047, 'mult_segm');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(2047, 'prop_alig');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(2047, 'segm_unma');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(2047, 'next_unma');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(2047, 'segm_reve');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(2047, 'next_reve');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(2047, 'firs_segm');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(2047, 'last_segm');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(2047, 'seco_alig');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(2047, 'qual_cont');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(2047, 'opti_dupl');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT bam_flag(4095, 'supp_alig');
% .L # table_name
% bam_flag_single_value # name
% boolean # type
% 5 # length
[ true	]
#SELECT flag,
#	bam_flag(flag, 'mult_segm') AS mult_segm,
#	bam_flag(flag, 'prop_alig') AS prop_alig,
#	bam_flag(flag, 'segm_unma') AS segm_unma,
#	bam_flag(flag, 'next_unma') AS next_unma,
#	bam_flag(flag, 'segm_reve') AS segm_reve,
#	bam_flag(flag, 'next_reve') AS next_reve,
#	bam_flag(flag, 'firs_segm') AS firs_segm,
#	bam_flag(flag, 'last_segm') AS last_segm,
#	bam_flag(flag, 'seco_alig') AS seco_alig,
#	bam_flag(flag, 'qual_cont') AS qual_cont,
#	bam_flag(flag, 'opti_dupl') AS opti_dupl,
#	bam_flag(flag, 'supp_alig') AS supp_alig
% bam.alignments_1,	bam.L,	bam.L,	bam.L,	bam.L,	bam.L,	bam.L,	bam.L,	bam.L,	bam.L,	bam.L,	bam.L,	bam.L # table_name
% flag,	mult_segm,	prop_alig,	segm_unma,	next_unma,	segm_reve,	next_reve,	firs_segm,	last_segm,	seco_alig,	qual_cont,	opti_dupl,	supp_alig # name
% smallint,	boolean,	boolean,	boolean,	boolean,	boolean,	boolean,	boolean,	boolean,	boolean,	boolean,	boolean,	boolean # type
% 3,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5 # length
[ 385,	true,	false,	false,	false,	false,	false,	false,	true,	true,	false,	false,	false	]
[ 419,	true,	true,	false,	false,	false,	true,	false,	true,	true,	false,	false,	false	]
[ 339,	true,	true,	false,	false,	true,	false,	true,	false,	true,	false,	false,	false	]
[ 401,	true,	false,	false,	false,	true,	false,	false,	true,	true,	false,	false,	false	]
[ 99,	true,	true,	false,	false,	false,	true,	true,	false,	false,	false,	false,	false	]
[ 147,	true,	true,	false,	false,	true,	false,	false,	true,	false,	false,	false,	false	]
[ 163,	true,	true,	false,	false,	false,	true,	false,	true,	false,	false,	false,	false	]
[ 385,	true,	false,	false,	false,	false,	false,	false,	true,	true,	false,	false,	false	]
[ 83,	true,	true,	false,	false,	true,	false,	true,	false,	false,	false,	false,	false	]
[ 99,	true,	true,	false,	false,	false,	true,	true,	false,	false,	false,	false,	false	]
[ 147,	true,	true,	false,	false,	true,	false,	false,	true,	false,	false,	false,	false	]
[ 99,	true,	true,	false,	false,	false,	true,	true,	false,	false,	false,	false,	false	]
[ 147,	true,	true,	false,	false,	true,	false,	false,	true,	false,	false,	false,	false	]
[ 99,	true,	true,	false,	false,	false,	true,	true,	false,	false,	false,	false,	false	]
[ 147,	true,	true,	false,	false,	true,	false,	false,	true,	false,	false,	false,	false	]
[ 401,	true,	false,	false,	false,	true,	false,	false,	true,	true,	false,	false,	false	]
[ 321,	true,	false,	false,	false,	false,	false,	true,	false,	true,	false,	false,	false	]
[ 99,	true,	true,	false,	false,	false,	true,	true,	false,	false,	false,	false,	false	]
[ 147,	true,	true,	false,	false,	true,	false,	false,	true,	false,	false,	false,	false	]
[ 99,	true,	true,	false,	false,	false,	true,	true,	false,	false,	false,	false,	false	]
[ 147,	true,	true,	false,	false,	true,	false,	false,	true,	false,	false,	false,	false	]
[ 99,	true,	true,	false,	false,	false,	true,	true,	false,	false,	false,	false,	false	]
[ 147,	true,	true,	false,	false,	true,	false,	false,	true,	false,	false,	false,	false	]
[ 99,	true,	true,	false,	false,	false,	true,	true,	false,	false,	false,	false,	false	]
[ 147,	true,	true,	false,	false,	true,	false,	false,	true,	false,	false,	false,	false	]
[ 385,	true,	false,	false,	false,	false,	false,	false,	true,	true,	false,	false,	false	]
[ 163,	true,	true,	false,	false,	false,	true,	false,	true,	false,	false,	false,	false	]
[ 83,	true,	true,	false,	false,	true,	false,	true,	false,	false,	false,	false,	false	]
[ 99,	true,	true,	false,	false,	false,	true,	true,	false,	false,	false,	false,	false	]
[ 147,	true,	true,	false,	false,	true,	false,	false,	true,	false,	false,	false,	false	]
[ 99,	true,	true,	false,	false,	false,	true,	true,	false,	false,	false,	false,	false	]
[ 147,	true,	true,	false,	false,	true,	false,	false,	true,	false,	false,	false,	false	]
[ 163,	true,	true,	false,	false,	false,	true,	false,	true,	false,	false,	false,	false	]
[ 83,	true,	true,	false,	false,	true,	false,	true,	false,	false,	false,	false,	false	]
[ 163,	true,	true,	false,	false,	false,	true,	false,	true,	false,	false,	false,	false	]
[ 337,	true,	false,	false,	false,	true,	false,	true,	false,	true,	false,	false,	false	]
[ 83,	true,	true,	false,	false,	true,	false,	true,	false,	false,	false,	false,	false	]
[ 99,	true,	true,	false,	false,	false,	true,	true,	false,	false,	false,	false,	false	]
[ 355,	true,	true,	false,	false,	false,	true,	true,	false,	true,	false,	false,	false	]
[ 403,	true,	true,	false,	false,	true,	false,	false,	true,	true,	false,	false,	false	]
[ 147,	true,	true,	false,	false,	true,	false,	false,	true,	false,	false,	false,	false	]
[ 163,	true,	true,	false,	false,	false,	true,	false,	true,	false,	false,	false,	false	]
[ 337,	true,	false,	false,	false,	true,	false,	true,	false,	true,	false,	false,	false	]
[ 83,	true,	true,	false,	false,	true,	false,	true,	false,	false,	false,	false,	false	]
[ 419,	true,	true,	false,	false,	false,	true,	false,	true,	true,	false,	false,	false	]
[ 385,	true,	false,	false,	false,	false,	false,	false,	true,	true,	false,	false,	false	]
[ 339,	true,	true,	false,	false,	true,	false,	true,	false,	true,	false,	false,	false	]
[ 419,	true,	true,	false,	false,	false,	true,	false,	true,	true,	false,	false,	false	]
[ 385,	true,	false,	false,	false,	false,	false,	false,	true,	true,	false,	false,	false	]
[ 339,	true,	true,	false,	false,	true,	false,	true,	false,	true,	false,	false,	false	]
[ 163,	true,	true,	false,	false,	false,	true,	false,	true,	false,	false,	false,	false	]
[ 83,	true,	true,	false,	false,	true,	false,	true,	false,	false,	false,	false,	false	]
[ 163,	true,	true,	false,	false,	false,	true,	false,	true,	false,	false,	false,	false	]
[ 337,	true,	false,	false,	false,	true,	false,	true,	false,	true,	false,	false,	false	]
[ 83,	true,	true,	false,	false,	true,	false,	true,	false,	false,	false,	false,	false	]
[ 337,	true,	false,	false,	false,	true,	false,	true,	false,	true,	false,	false,	false	]
[ 385,	true,	false,	false,	false,	false,	false,	false,	true,	true,	false,	false,	false	]
[ 163,	true,	true,	false,	false,	false,	true,	false,	true,	false,	false,	false,	false	]
[ 83,	true,	true,	false,	false,	true,	false,	true,	false,	false,	false,	false,	false	]
[ 337,	true,	false,	false,	false,	true,	false,	true,	false,	true,	false,	false,	false	]
[ 163,	true,	true,	false,	false,	false,	true,	false,	true,	false,	false,	false,	false	]
[ 419,	true,	true,	false,	false,	false,	true,	false,	true,	true,	false,	false,	false	]
[ 339,	true,	true,	false,	false,	true,	false,	true,	false,	true,	false,	false,	false	]
[ 83,	true,	true,	false,	false,	true,	false,	true,	false,	false,	false,	false,	false	]
[ 99,	true,	true,	false,	false,	false,	true,	true,	false,	false,	false,	false,	false	]
[ 147,	true,	true,	false,	false,	true,	false,	false,	true,	false,	false,	false,	false	]
[ 401,	true,	false,	false,	false,	true,	false,	false,	true,	true,	false,	false,	false	]
[ 401,	true,	false,	false,	false,	true,	false,	false,	true,	true,	false,	false,	false	]
[ 321,	true,	false,	false,	false,	false,	false,	true,	false,	true,	false,	false,	false	]
[ 401,	true,	false,	false,	false,	true,	false,	false,	true,	true,	false,	false,	false	]
[ 401,	true,	false,	false,	false,	true,	false,	false,	true,	true,	false,	false,	false	]
#SELECT reverse_seq('A');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 1 # length
[ "T"	]
#SELECT reverse_seq('T');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 1 # length
[ "A"	]
#SELECT reverse_seq('C');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 1 # length
[ "G"	]
#SELECT reverse_seq('G');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 1 # length
[ "C"	]
#SELECT reverse_seq('R');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 1 # length
[ "Y"	]
#SELECT reverse_seq('Y');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 1 # length
[ "R"	]
#SELECT reverse_seq('S');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 1 # length
[ "S"	]
#SELECT reverse_seq('W');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 1 # length
[ "W"	]
#SELECT reverse_seq('K');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 1 # length
[ "M"	]
#SELECT reverse_seq('M');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 1 # length
[ "K"	]
#SELECT reverse_seq('H');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 1 # length
[ "D"	]
#SELECT reverse_seq('D');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 1 # length
[ "H"	]
#SELECT reverse_seq('V');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 1 # length
[ "B"	]
#SELECT reverse_seq('B');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 1 # length
[ "V"	]
#SELECT reverse_seq('N');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 1 # length
[ "N"	]
#SELECT reverse_seq('ATCGRYSWKMHDVBN');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 15 # length
[ "NVBHDKMWSRYCGAT"	]
#SELECT reverse_seq('invalidchars');
% .L # table_name
% reverse_seq_single_value # name
% clob # type
% 12 # length
[ "????????????"	]
#SELECT seq, reverse_seq(seq) AS reverse_seq
#FROM bam.alignments_1;
% bam.alignments_1,	bam.L # table_name
% seq,	reverse_seq # name
% clob,	clob # type
% 100,	100 # length
[ "TATACTTATAGAACAAATGAACCCAAAACCACATAAGGTAAACAACAAAGCTACTGGTTCAAAATTAAGCCTAACTTCAACAGTACCAGGCAAAAACCAT",	"ATGGTTTTTGCCTGGTACTGTTGAAGTTAGGCTTAATTTTGAACCAGTAGCTTTGTTGTTTACCTTATGTGGTTTTGGGTTCATTTGTTCTATAAGTATA"	]
[ "TATACTTATAGAACAAATGAACCCAAAACCACATAAGGTAAACAACAAAGCTACTGGTTCAAAATTAAGCCTAACTTCAACAGTACCAGGCAAAAACCAT",	"ATGGTTTTTGCCTGGTACTGTTGAAGTTAGGCTTAATTTTGAACCAGTAGCTTTGTTGTTTACCTTATGTGGTTTTGGGTTCATTTGTTCTATAAGTATA"	]
[ "GTACAAAAGTGGGAAATTTTAAAGCTGGGCATCCAGGGGAGACATCACGTGTCAGTAGGTTCCGTGATGCCCCCCAAGCCGCAAAACCAGCAAGTTTTTA",	"TAAAAACTTGCTGGTTTTGCGGCTTGGGGGGCATCACGGAACCTACTGACACGTGATGTCTCCCCTGGATGCCCAGCTTTAAAATTTCCCACTTTTGTAC"	]
[ "ATGGTTTTTGCCTGGTACTGTTGAAGTTAGGCTTAATTTTGAACCAGTAGCTTTGTTGTTTACCTTATGTGGTTTTGGGTTCATTTGTTCTATAAGTATA",	"TATACTTATAGAACAAATGAACCCAAAACCACATAAGGTAAACAACAAAGCTACTGGTTCAAAATTAAGCCTAACTTCAACAGTACCAGGCAAAAACCAT"	]
[ "TAAAAACTTGCTGGTTTTGCGGCTTGGGGGGCATCACGGAACCTACTGACACGTGATGTCTCCCCTGGATGCCCAGCTTTAAAATTTCCCACTTTTGTAC",	"GTACAAAAGTGGGAAATTTTAAAGCTGGGCATCCAGGGGAGACATCACGTGTCAGTAGGTTCCGTGATGCCCCCCAAGCCGCAAAACCAGCAAGTTTTTA"	]
[ "ATGGTTTTTGCCTGGTACTGTTGAAGTTAGGCTTAATTTTGAACCAGTAGCTTTGTTGTTTACCTTATGTGGTTTTGGGTTCATTTGTTCTATAAGTATA",	"TATACTTATAGAACAAATGAACCCAAAACCACATAAGGTAAACAACAAAGCTACTGGTTCAAAATTAAGCCTAACTTCAACAGTACCAGGCAAAAACCAT"	]
[ "CACATTTTCAAAAAACAAAAAAAAGTCTGAGCTCCTACTGTTGATTTAAATTCTTTTATAAATCTCTATCAAACTTTTCATGTTTACAGTTCTTATGCAA",	"TTGCATAAGAACTGTAAACATGAAAAGTTTGATAGAGATTTATAAAAGAATTTAAATCAACAGTAGGAGCTCAGACTTTTTTTTGTTTTTTGAAAATGTG"	]
[ "CACATTTTCAAAAAACAAAAAAAAGTCTGAGCTCCTACTGTTGATTTAAATTCTTTTATAAATCTCTATCAAACTTTTCATGTTTACAGTTCTTATGCAA",	"TTGCATAAGAACTGTAAACATGAAAAGTTTGATAGAGATTTATAAAAGAATTTAAATCAACAGTAGGAGCTCAGACTTTTTTTTGTTTTTTGAAAATGTG"	]
[ "TTTAAAATATTAAAAGATGAATTACTATCAATTGTTTTGAATTTTAAACTAAAAATCAGTAGTTACTATAAAATTATTATTAAATGTTCTAATAATTGTA",	"TACAATTATTAGAACATTTAATAATAATTTTATAGTAACTACTGATTTTTAGTTTAAAATTCAAAACAATTGATAGTAATTCATCTTTTAATATTTTAAA"	]
[ "ATTATTCAGCCTCACATTTCAACATCGCAGAACAGGTCAGGGAGTGCAAGGTACCTCCTGCTCTTTCCAGCAGGTGCAAGGTGCACAGGGAGAAGCAGGT",	"ACCTGCTTCTCCCTGTGCACCTTGCACCTGCTGGAAAGAGCAGGAGGTACCTTGCACTCCCTGACCTGTTCTGCGATGTTGAAATGTGAGGCTGAATAAT"	]
[ "CAGGCCGCCCGGGGCGGTTCCACCAAGAAAGTGACATCTGGGAGGGGCATTGAGGCAAAGGGGCCGCGAGAGGGTAGGTGCTCTAGAGGTGGCCCACGGG",	"CCCGTGGGCCACCTCTAGAGCACCTACCCTCTCGCGGCCCCTTTGCCTCAATGCCCCTCCCAGATGTCACTTTCTTGGTGGAACCGCCCCGGGCGGCCTG"	]
[ "TCCAGCTCCATCTGCCAGGTTTTGTTTTGCCTGAGCAGTAGGAGCCTAGAAATATTCCTTGCACAACACAGGCACATAATGACTCGCTGAGCAGGACTTG",	"CAAGTCCTGCTCAGCGAGTCATTATGTGCCTGTGTTGTGCAAGGAATATTTCTAGGCTCCTACTGCTCAGGCAAAACAAAACCTGGCAGATGGAGCTGGA"	]
[ "CTCTGTCCGTTTCTAATGGGAGCATTAACTCACTGCTTTGGGGGGCTGAGATAGTCAAAAAAGAGCAATTTCAGTGCAGGTTCTAGTCCTGGGCATGCTC",	"GAGCATGCCCAGGACTAGAACCTGCACTGAAATTGCTCTTTTTTGACTATCTCAGCCCCCCAAAGCAGTGAGTTAATGCTCCCATTAGAAACGGACAGAG"	]
[ "CTTTTCTATATAAAACAAATAATTTATAATACTGTATTTGTTTTCTATTACTATTGAAATTACTACAAATGTAGTAGCTAAAACAACACATATTTTTCAT",	"ATGAAAAATATGTGTTGTTTTAGCTACTACATTTGTAGTAATTTCAATAGTAATAGAAAACAAATACAGTATTATAAATTATTTGTTTTATATAGAAAAG"	]
[ "TGCCTTTTCCAGCTGATAGAGACAGCCATGTTTCATGGCTTGTAGCCCCTTCCTCCATCTTCAAAGCCAACAACAACTGGTCAAGTTGTCACATTGCATC",	"GATGCAATGTGACAACTTGACCAGTTGTTGTTGGCTTTGAAGATGGAGGAAGGGGCTACAAGCCATGAAACATGGCTGTCTCTATCAGCTGGAAAAGGCA"	]
[ "TGCCTTTTCCAGCTGATAGAGACAGCCATGTTTCATGGCTTGTAGCCCCTTCCTCCATCTTCAAAGCCAACAACAACTGGTCAAGTTGTCACATTGCATC",	"GATGCAATGTGACAACTTGACCAGTTGTTGTTGGCTTTGAAGATGGAGGAAGGGGCTACAAGCCATGAAACATGGCTGTCTCTATCAGCTGGAAAAGGCA"	]
[ "CCTGTCAAGCCTACCTTGTCACCTGTTGCCAGGAAGTCCTGCTCCCTCCTAGGGCAGCCCCTGGTTAGTGGAGCTGAGAGAACCCAGGGTGCTGAGCCGT",	"ACGGCTCAGCACCCTGGGTTCTCTCAGCTCCACTAACCAGGGGCTGCCCTAGGAGGGAGCAGGACTTCCTGGCAACAGGTGACAAGGTAGGCTTGACAGG"	]
[ "CCTGTCAAGCCTACCTTGTCACCTGTTGCCAGGAAGTCCTGCTCCCTCCTAGGGCAGCCCCTGGTTAGTGGAGCTGAGAGAACCCAGGGTGCTGAGCCGT",	"ACGGCTCAGCACCCTGGGTTCTCTCAGCTCCACTAACCAGGGGCTGCCCTAGGAGGGAGCAGGACTTCCTGGCAACAGGTGACAAGGTAGGCTTGACAGG"	]
[ "CGGGGGGCGGAGCGCAGGCAGGTGAAACTGGAGGAAATTGGAGATACAGCGGGAGGGAGGGGGAAAAGGTAAAACCTCTCACCACCTCCTCAACGCTTAT",	"ATAAGCGTTGAGGAGGTGGTGAGAGGTTTTACCTTTTCCCCCTCCCTCCCGCTGTATCTCCAATTTCCTCCAGTTTCACCTGCCTGCGCTCCGCCCCCCG"	]
[ "ACAGTCACCCACAGATTTGCACACCTGTCCAACTTGAGCCAGTGATGAATAAAGACAGATATGGTTGCTGTTCTTTCATGGAGCTTACATCCTAGGGGAG",	"CTCCCCTAGGATGTAAGCTCCATGAAAGAACAGCAACCATATCTGTCTTTATTCATCACTGGCTCAAGTTGGACAGGTGTGCAAATCTGTGGGTGACTGT"	]
[ "AGTGGGCAGGGCAGCTTTCTACGAGGAGGTGACTAAATTAAGATCTTGCTGTGAAGATGTTTAGTTGCCTGCTACCCTCCACTTCTCCCTGAATAAAACA",	"TGTTTTATTCAGGGAGAAGTGGAGGGTAGCAGGCAACTAAACATCTTCACAGCAAGATCTTAATTTAGTCACCTCCTCGTAGAAAGCTGCCCTGCCCACT"	]
[ "TAATAATCTCAAAAGATAGTTCAATGTAGAACCTAATTAATTCAGTAGGATGACCAGCTCAGTAGCAGTAAGTAGCAGTGCAATATAAGTGGCATTTTAA",	"TTAAAATGCCACTTATATTGCACTGCTACTTACTGCTACTGAGCTGGTCATCCTACTGAATTAATTAGGTTCTACATTGAACTATCTTTTGAGATTATTA"	]
[ "ATGCCTTATAAATAAATTTATAAGATGACTACTTTGTAGGCACATCTTGTTATAAGAAAAGTCAATGATATGTGTCCCTTTAATTTTCAAAATGAAAAAT",	"ATTTTTCATTTTGAAAATTAAAGGGACACATATCATTGACTTTTCTTATAACAAGATGTGCCTACAAAGTAGTCATCTTATAAATTTATTTATAAGGCAT"	]
[ "ATTCTCTGCCCTGAGTAAGGGGAATCAAGAGAGATTTCGATGCAGGAAACAGCACCCGAGAGAATCAATCCAGTTGGGCCTTTTCAATTAGTCTGTTTTT",	"AAAAACAGACTAATTGAAAAGGCCCAACTGGATTGATTCTCTCGGGTGCTGTTTCCTGCATCGAAATCTCTCTTGATTCCCCTTACTCAGGGCAGAGAAT"	]
[ "CGTCTCTCCTGCCCCCCACCCTCTGTCTGTGAAAACATTAGAGCTGAAAGACGACTCCCCTGGCGATAAACATCTACGCAAAGCCAATTGTCAGGCGATG",	"CATCGCCTGACAATTGGCTTTGCGTAGATGTTTATCGCCAGGGGAGTCGTCTTTCAGCTCTAATGTTTTCACAGACAGAGGGTGGGGGGCAGGAGAGACG"	]
[ "GAGAGGCAGCCATAGGTTCGAGTCCTAGCTACTGGCTAGGGGACCTTGGACAAGGCACTGATAGTCCCAAGACTCAGTTTACCCATCTGTGCAGTGATGT",	"ACATCACTGCACAGATGGGTAAACTGAGTCTTGGGACTATCAGTGCCTTGTCCAAGGTCCCCTAGCCAGTAGCTAGGACTCGAACCTATGGCTGCCTCTC"	]
[ "GAGAGGCAGCCATAGGTTCGAGTCCTAGCTACTGGCTAGGGGACCTTGGACAAGGCACTGATAGTCCCAAGACTCAGTTTACCCATCTGTGCAGTGATGT",	"ACATCACTGCACAGATGGGTAAACTGAGTCTTGGGACTATCAGTGCCTTGTCCAAGGTCCCCTAGCCAGTAGCTAGGACTCGAACCTATGGCTGCCTCTC"	]
[ "ATGTGCTCTATGGTCACCTAACCTGTCTGAGACTCAATATACTCATCTGATAAATAGGCAGAATAAAAATAAGAGGTGCCCTGCCTCTTTTCAGAGTCAC",	"GTGACTCTGAAAAGAGGCAGGGCACCTCTTATTTTTATTCTGCCTATTTATCAGATGAGTATATTGAGTCTCAGACAGGTTAGGTGACCATAGAGCACAT"	]
[ "TGGAATGGAGTGGGGTAGAGGACTGCTGATTTAGCAGATGCATTATTTCCCCAAGCCAAAGAGCTGCCCTGGAAATGGGCCAAATATAATTTCTTTTAAG",	"CTTAAAAGAAATTATATTTGGCCCATTTCCAGGGCAGCTCTTTGGCTTGGGGAAATAATGCATCTGCTAAATCAGCAGTCCTCTACCCCACTCCATTCCA"	]
[ "AGGGGCAGTGGGGGTGGTGTGGGGGAGCCGCTGTGAGTCTTAATGCAAAGAGGAATGTAGGCTAGTCAACAGGAAACCCAAAGTGCTTGATACAGCACAG",	"CTGTGCTGTATCAAGCACTTTGGGTTTCCTGTTGACTAGCCTACATTCCTCTTTGCATTAAGACTCACAGCGGCTCCCCCACACCACCCCCACTGCCCCT"	]
[ "TGATGCTGAGCTTGACGGCGGTCCCCCGGGTACCACTCCATCACCCAGTGAAGGAGGCAGGTGGGACCATCTCAGACATGGGCTGTGTTGGGACCCCCAG",	"CTGGGGGTCCCAACACAGCCCATGTCTGAGATGGTCCCACCTGCCTCCTTCACTGGGTGATGGAGTGGTACCCGGGGGACCGCCGTCAAGCTCAGCATCA"	]
[ "TGGCCAAGTAATCATGCTAACTAGAGCTCTAGCTTCCTCTCCCTGGTTTCGCTTTTCTAAGTATAAATAAATAAATAAATGATAAATTGCCTTATTTTTT",	"AAAAAATAAGGCAATTTATCATTTATTTATTTATTTATACTTAGAAAAGCGAAACCAGGGAGAGGAAGCTAGAGCTCTAGTTAGCATGATTACTTGGCCA"	]
[ "TCCTAGGGCAATGCCTAGTTAGGTAAACCAACTGGTGCTGAAGAGGAGCGCTTGGGTCTGGGAAATGCCCATTGTAATCACTTGGGACCGTGTTACTTGA",	"TCAAGTAACACGGTCCCAAGTGATTACAATGGGCATTTCCCAGACCCAAGCGCTCCTCTTCAGCACCAGTTGGTTTACCTAACTAGGCATTGCCCTAGGA"	]
[ "AGGCCTCTGTTTTTTAAAATACTGCAGATACAAATCCTAGATTTTCATTCTTAGCACTAGAATGGCTTCTCCAGAAACAGATTTATGTATTTGTAGGAAT",	"ATTCCTACAAATACATAAATCTGTTTCTGGAGAAGCCATTCTAGTGCTAAGAATGAAAATCTAGGATTTGTATCTGCAGTATTTTAAAAAACAGAGGCCT"	]
[ "TTATTACTCATAACAATCTTATGGGGTACATACTCTCATTATCCCGATTTGACAGATTAGTAAACTGAGGTGCAGACAGGCAAGTGATTCTTCCAGAGAG",	"CTCTCTGGAAGAATCACTTGCCTGTCTGCACCTCAGTTTACTAATCTGTCAAATCGGGATAATGAGAGTATGTACCCCATAAGATTGTTATGAGTAATAA"	]
[ "AGAGCAAAACATTCTGGCAGATGCACAGCAGGTGGTGGGGCAAAAAGGGACCCGGATGGGGATCAAGAGGCTCACAAGATAGTCTCAGCTCTGCCGCTTA",	"TAAGCGGCAGAGCTGAGACTATCTTGTGAGCCTCTTGATCCCCATCCGGGTCCCTTTTTGCCCCACCACCTGCTGTGCATCTGCCAGAATGTTTTGCTCT"	]
[ "AGAGCAAAACATTCTGGCAGATGCACAGCAGGTGGTGGGGCAAAAAGGGACCCGGATGGGGATCAAGAGGCTCACAAGATAGTCTCAGCTCTGCCGCTTA",	"TAAGCGGCAGAGCTGAGACTATCTTGTGAGCCTCTTGATCCCCATCCGGGTCCCTTTTTGCCCCACCACCTGCTGTGCATCTGCCAGAATGTTTTGCTCT"	]
[ "TCGGGCCTAGAACACGGAGCCTGGAGACCCGCGCGCCGTTGACCACAGGGTTTGGCGCCAAACGAGGAGGGCGGGGCGAGGACCAAGGGGCCGGGGCGGG",	"CCCGCCCCGGCCCCTTGGTCCTCGCCCCGCCCTCCTCGTTTGGCGCCAAACCCTGTGGTCAACGGCGCGCGGGTCTCCAGGCTCCGTGTTCTAGGCCCGA"	]
[ "TCGGGCCTAGAACACGGAGCCTGGAGACCCGCGCGCCGTTGACCACAGGGTTTGGCGCCAAACGAGGAGGGCGGGGCGAGGACCAAGGGGCCGGGGCGGG",	"CCCGCCCCGGCCCCTTGGTCCTCGCCCCGCCCTCCTCGTTTGGCGCCAAACCCTGTGGTCAACGGCGCGCGGGTCTCCAGGCTCCGTGTTCTAGGCCCGA"	]
[ "GGCGAGGGGGCGGGGCGAGGGCTGAGGGGCGGAAAACTAAGAGGAGCCCCCGCGGGTGGCGAGCTGGGATGACGGAGGGAGGGAGGGAGGGGCGCTGTGG",	"CCACAGCGCCCCTCCCTCCCTCCCTCCGTCATCCCAGCTCGCCACCCGCGGGGGCTCCTCTTAGTTTTCCGCCCCTCAGCCCTCGCCCCGCCCCCTCGCC"	]
[ "GGCGAGGGGGCGGGGCGAGGGCTGAGGGGCGGAAAACTAAGAGGAGCCCCCGCGGGTGGCGAGCTGGGATGACGGAGGGAGGGAGGGAGGGGCGCTGTGG",	"CCACAGCGCCCCTCCCTCCCTCCCTCCGTCATCCCAGCTCGCCACCCGCGGGGGCTCCTCTTAGTTTTCCGCCCCTCAGCCCTCGCCCCGCCCCCTCGCC"	]
[ "CGTAGTGAGACCCCATCTCCAAAAAATAAATAAATTAAGGACAGGATGGGCATGGACCACTCTTCAAGATTACTGACCAGCTTCTTGATATTGGACAACT",	"AGTTGTCCAATATCAAGAAGCTGGTCAGTAATCTTGAAGAGTGGTCCATGCCCATCCTGTCCTTAATTTATTTATTTTTTGGAGATGGGGTCTCACTACG"	]
[ "AATATAAATTAAAATCTCAGGCCTCCATCCCCTATCTACTGAATCAGAATCTGCATTTTAACAGATCTTTTGTGGTTCATATACAGTTGAGTTCTTTTTT",	"AAAAAAGAACTCAACTGTATATGAACCACAAAAGATCTGTTAAAATGCAGATTCTGATTCAGTAGATAGGGGATGGAGGCCTGAGATTTTAATTTATATT"	]
[ "AATATAAATTAAAATCTCAGGCCTCCATCCCCTATCTACTGAATCAGAATCTGCATTTTAACAGATCTTTTGTGGTTCATATACAGTTGAGTTCTTTTTT",	"AAAAAAGAACTCAACTGTATATGAACCACAAAAGATCTGTTAAAATGCAGATTCTGATTCAGTAGATAGGGGATGGAGGCCTGAGATTTTAATTTATATT"	]
[ "AGTAGATGGGATTACAGGCACCCGCCACCGCGCCCAGCTAATTTTTATATATTTTTTAAGTAGAGATGGGGTTTCACCATGTTGGCCAGGCTGGTCTTGA",	"TCAAGACCAGCCTGGCCAACATGGTGAAACCCCATCTCTACTTAAAAAATATATAAAAATTAGCTGGGCGCGGTGGCGGGTGCCTGTAATCCCATCTACT"	]
[ "AGTAGATGGGATTACAGGCACCCGCCACCGCGCCCAGCTAATTTTTATATATTTTTTAAGTAGAGATGGGGTTTCACCATGTTGGCCAGGCTGGTCTTGA",	"TCAAGACCAGCCTGGCCAACATGGTGAAACCCCATCTCTACTTAAAAAATATATAAAAATTAGCTGGGCGCGGTGGCGGGTGCCTGTAATCCCATCTACT"	]
[ "ACTCTGTCGCCCAGGCCGGGGCGTAGCCATGCAAACACGGCTCACTGCAGCCTCGACCTCCCCGGCTCAAGCCATCCTCCCACCTCAACCTCCCAAGTAG",	"CTACTTGGGAGGTTGAGGTGGGAGGATGGCTTGAGCCGGGGAGGTCGAGGCTGCAGTGAGCCGTGTTTGCATGGCTACGCCCCGGCCTGGGCGACAGAGT"	]
[ "AGTAGATGGGATTACAGGCACCCGCCACCGCGCCCAGCTAATTTTTATATATTTTTTAAGTAGAGATGGGGTTTCACCATGTTGGCCAGGCTGGTCTTGA",	"TCAAGACCAGCCTGGCCAACATGGTGAAACCCCATCTCTACTTAAAAAATATATAAAAATTAGCTGGGCGCGGTGGCGGGTGCCTGTAATCCCATCTACT"	]
[ "AGTAGATGGGATTACAGGCACCCGCCACCGCGCCCAGCTAATTTTTATATATTTTTTAAGTAGAGATGGGGTTTCACCATGTTGGCCAGGCTGGTCTTGA",	"TCAAGACCAGCCTGGCCAACATGGTGAAACCCCATCTCTACTTAAAAAATATATAAAAATTAGCTGGGCGCGGTGGCGGGTGCCTGTAATCCCATCTACT"	]
[ "ACTCTGTCGCCCAGGCCGGGGCGTAGCCATGCAAACACGGCTCACTGCAGCCTCGACCTCCCCGGCTCAAGCCATCCTCCCACCTCAACCTCCCAAGTAG",	"CTACTTGGGAGGTTGAGGTGGGAGGATGGCTTGAGCCGGGGAGGTCGAGGCTGCAGTGAGCCGTGTTTGCATGGCTACGCCCCGGCCTGGGCGACAGAGT"	]
[ "AGTAGATGGGATTACAGGCACCCGCCACCGCGCCCAGCTAATTTTTATATATTTTTTAAGTAGAGATGGGGTTTCACCATGTTGGCCAGGCTGGTCTTGA",	"TCAAGACCAGCCTGGCCAACATGGTGAAACCCCATCTCTACTTAAAAAATATATAAAAATTAGCTGGGCGCGGTGGCGGGTGCCTGTAATCCCATCTACT"	]
[ "ACTCTGTCGCCCAGGCCGGGGCGTAGCCATGCAAACACGGCTCACTGCAGCCTCGACCTCCCCGGCTCAAGCCATCCTCCCACCTCAACCTCCCAAGTAG",	"CTACTTGGGAGGTTGAGGTGGGAGGATGGCTTGAGCCGGGGAGGTCGAGGCTGCAGTGAGCCGTGTTTGCATGGCTACGCCCCGGCCTGGGCGACAGAGT"	]
[ "GCCTGGATGGAGCCCTGGGGCTGGAGGCTGGCACTTCCAATCGAGACTGCCCGTTTGGTCCTGCCCTGTGTGACAGTATACAGGCTTATCTTGGCCACCC",	"GGGTGGCCAAGATAAGCCTGTATACTGTCACACAGGGCAGGACCAAACGGGCAGTCTCGATTGGAAGTGCCAGCCTCCAGCCCCAGGGCTCCATCCAGGC"	]
[ "TGACTATTCTAGGAGACCACGAGTTGGGAAAGGTATGGCAAGGCACCCACAGGAGAGCTGATGACAACTGTGAGGATCAGTGACTGTGGATGATGGAACA",	"TGTTCCATCATCCACAGTCACTGATCCTCACAGTTGTCATCAGCTCTCCTGTGGGTGCCTTGCCATACCTTTCCCAACTCGTGGTCTCCTAGAATAGTCA"	]
[ "TGACTATTCTAGGAGACCACGAGTTGGGAAAGGTATGGCAAGGCACCCACAGGAGAGCTGATGACAACTGTGAGGATCAGTGACTGTGGATGATGGAACA",	"TGTTCCATCATCCACAGTCACTGATCCTCACAGTTGTCATCAGCTCTCCTGTGGGTGCCTTGCCATACCTTTCCCAACTCGTGGTCTCCTAGAATAGTCA"	]
[ "TAATTTTACCTCTCAGAAAGCTCTGGCTGCTGCTGTTCATCTTTTTGTAAATGTTCACTTAACAGCTGATCCTTTGGAACAAGAACTGGAGAGACAGTGG",	"CCACTGTCTCTCCAGTTCTTGTTCCAAAGGATCAGCTGTTAAGTGAACATTTACAAAAAGATGAACAGCAGCAGCCAGAGCTTTCTGAGAGGTAAAATTA"	]
[ "TCAGTGTTATCATTTCTAAATTTAAAAGGTAAATTCAATAATTCCTAAGATCTCTGCTTGCTCTAAAATTCCCTGACTCTCATTACTGTCTTTATAGTGT",	"ACACTATAAAGACAGTAATGAGAGTCAGGGAATTTTAGAGCAAGCAGAGATCTTAGGAATTATTGAATTTACCTTTTAAATTTAGAAATGATAACACTGA"	]
[ "TCAGTGTTATCATTTCTAAATTTAAAAGGTAAATTCAATAATTCCTAAGATCTCTGCTTGCTCTAAAATTCCCTGACTCTCATTACTGTCTTTATAGTGT",	"ACACTATAAAGACAGTAATGAGAGTCAGGGAATTTTAGAGCAAGCAGAGATCTTAGGAATTATTGAATTTACCTTTTAAATTTAGAAATGATAACACTGA"	]
[ "TAATTTTACCTCTCAGAAAGCTCTGGCTGCTGCTGTTCATCTTTTTGTAAATGTTCACTTAACAGCTGATCCTTTGGAACAAGAACTGGAGAGACAGTGG",	"CCACTGTCTCTCCAGTTCTTGTTCCAAAGGATCAGCTGTTAAGTGAACATTTACAAAAAGATGAACAGCAGCAGCCAGAGCTTTCTGAGAGGTAAAATTA"	]
[ "ACCAGCCTGGCCAACATGGTGAAACGCTGTCTCTACTAAAAGTACAAAAAAATTAGCTAGGCGTGGTGGTGGGCACCTGTAATCCCAGCTACTCGGGGAG",	"CTCCCCGAGTAGCTGGGATTACAGGTGCCCACCACCACGCCTAGCTAATTTTTTTGTACTTTTAGTAGAGACAGCGTTTCACCATGTTGGCCAGGCTGGT"	]
[ "TAGGAATTTTTTTTTTTTTTGAGACAGAGTTTCGCTCTTGTTGCCCAGGCTGGAGTGCAATGGTGCGATTGGCTGGAATTTTTTTTCTTGGCTGTCATAA",	"TTATGACAGCCAAGAAAAAAAATTCCAGCCAATCGCACCATTGCACTCCAGCCTGGGCAACAAGAGCGAAACTCTGTCTCAAAAAAAAAAAAAATTCCTA"	]
[ "TAGGAATTTTTTTTTTTTTTGAGACAGAGTTTCGCTCTTGTTGCCCAGGCTGGAGTGCAATGGTGCGATTGGCTGGAATTTTTTTTCTTGGCTGTCATAA",	"TTATGACAGCCAAGAAAAAAAATTCCAGCCAATCGCACCATTGCACTCCAGCCTGGGCAACAAGAGCGAAACTCTGTCTCAAAAAAAAAAAAAATTCCTA"	]
[ "ACCAGCCTGGCCAACATGGTGAAACGCTGTCTCTACTAAAAGTACAAAAAAATTAGCTAGGCGTGGTGGTGGGCACCTGTAATCCCAGCTACTCGGGGAG",	"CTCCCCGAGTAGCTGGGATTACAGGTGCCCACCACCACGCCTAGCTAATTTTTTTGTACTTTTAGTAGAGACAGCGTTTCACCATGTTGGCCAGGCTGGT"	]
[ "ACCAGCCTGGCCAACATGGTGAAACGCTGTCTCTACTAAAAGTACAAAAAAATTAGCTAGGCGTGGTGGTGGGCACCTGTAATCCCAGCTACTCGGGGAG",	"CTCCCCGAGTAGCTGGGATTACAGGTGCCCACCACCACGCCTAGCTAATTTTTTTGTACTTTTAGTAGAGACAGCGTTTCACCATGTTGGCCAGGCTGGT"	]
[ "CCCTGGCTGGAGTACAAGTTACTGGGGCTCAGTTCTTAGGATTCCTACAAAGCCCAATTTGGGTCACCTGACTTGTTAAGTCAGGTGAAGGTGACTTACC",	"GGTAAGTCACCTTCACCTGACTTAACAAGTCAGGTGACCCAAATTGGGCTTTGTAGGAATCCTAAGAACTGAGCCCCAGTAACTTGTACTCCAGCCAGGG"	]
[ "TGACTCCAGGGAAGTTAAATAAATGCCAAGAGGATTCACGTGGCAGGGCCATGGAGGTGGGGAGGAAGGAGCACAGGAGACACCAGGTGCTCACTGTCCA",	"TGGACAGTGAGCACCTGGTGTCTCCTGTGCTCCTTCCTCCCCACCTCCATGGCCCTGCCACGTGAATCCTCTTGGCATTTATTTAACTTCCCTGGAGTCA"	]
[ "TGACTCCAGGGAAGTTAAATAAATGCCAAGAGGATTCACGTGGCAGGGCCATGGAGGTGGGGAGGAAGGAGCACAGGAGACACCAGGTGCTCACTGTCCA",	"TGGACAGTGAGCACCTGGTGTCTCCTGTGCTCCTTCCTCCCCACCTCCATGGCCCTGCCACGTGAATCCTCTTGGCATTTATTTAACTTCCCTGGAGTCA"	]
[ "ATGGTTTTTGCCTGGTACTGTTGAAGTTAGGCTTAATTTTGAACCAGTAGCTTTGTTGTTTACCTTATGTGGTTTTGGGTTCATTTGTTCTATAAGTATA",	"TATACTTATAGAACAAATGAACCCAAAACCACATAAGGTAAACAACAAAGCTACTGGTTCAAAATTAAGCCTAACTTCAACAGTACCAGGCAAAAACCAT"	]
[ "TACAATTATTAGAACATTTAATAATAATTTTATAGTAACTACTGATTTTTAGTTTAAAATTCAAAACAATTGATAGTAATTCATCTTTTAATATTTTAAA",	"TTTAAAATATTAAAAGATGAATTACTATCAATTGTTTTGAATTTTAAACTAAAAATCAGTAGTTACTATAAAATTATTATTAAATGTTCTAATAATTGTA"	]
[ "ATGGTTTTTGCCTGGTACTGTTGAAGTTAGGCTTAATTTTGAACCAGTAGCTTTGTTGTTTACCTTATGTGGTTTTGGGTTCATTTGTTCTATAAGTATA",	"TATACTTATAGAACAAATGAACCCAAAACCACATAAGGTAAACAACAAAGCTACTGGTTCAAAATTAAGCCTAACTTCAACAGTACCAGGCAAAAACCAT"	]
[ "ATGGTTTTTGCCTGGTACTGTTGAAGTTAGGCTTAATTTTGAACCAGTAGCTTTGTTGTTTACCTTATGTGGTTTTGGGTTCATTTGTTCTATAAGTATA",	"TATACTTATAGAACAAATGAACCCAAAACCACATAAGGTAAACAACAAAGCTACTGGTTCAAAATTAAGCCTAACTTCAACAGTACCAGGCAAAAACCAT"	]
#SELECT reverse_qual('Should be reversed');
% .L # table_name
% reverse_qual_single_value # name
% clob # type
% 18 # length
[ "desrever eb dluohS"	]
#SELECT qual, reverse_qual(qual) AS reverse_qual
#FROM bam.alignments_1;
% bam.alignments_1,	bam.L # table_name
% qual,	reverse_qual # name
% clob,	clob # type
% 100,	100 # length
[ "CGF?BB;DAEFEEEGEFGE@5EABGD/>DGDDB@5EA@B=EDEDGC?CE5B3GBAED5D?GEB>D?-EC@##?:DBDA3#2G:@E#F>A5D####A#A##",	"##A#A####D5A>F#E@:G2#3ADBD:?##@CE-?D>BEG?D5DEABG3B5EC?CGDEDE=B@AE5@BDDGD>/DGBAE5@EGFEGEEEFEAD;BB?FGC"	]
[ "CGF?BB;DAEFEEEGEFGE@5EABGD/>DGDDB@5EA@B=EDEDGC?CE5B3GBAED5D?GEB>D?-EC@##?:DBDA3#2G:@E#F>A5D####A#A##",	"##A#A####D5A>F#E@:G2#3ADBD:?##@CE-?D>BEG?D5DEABG3B5EC?CGDEDE=B@AE5@BDDGD>/DGBAE5@EGFEGEEEFEAD;BB?FGC"	]
[ "####F#EFCGEC5BE?EF#F=@?DF658;DEDG=@FBG@?E=DE=F#FDB?CCGE1GFFEDEFFDGGFE>FFCGEGGG:;B@FFG@DDGGGFGB7FBC?F",	"F?CBF7BGFGGGDD@GFF@B;:GGGEGCFF>EFGGDFFEDEFFG1EGCC?BDF#F=ED=E?@GBF@=GDED;856FD?@=F#FE?EB5CEGCFE#F####"	]
[ "##A#A####D5A>F#E@:G2#3ADBD:?##@CE-?D>BEG?D5DEABG3B5EC?CGDEDE=B@AE5@BDDGD>/DGBAE5@EGFEGEEEFEAD;BB?FGC",	"CGF?BB;DAEFEEEGEFGE@5EABGD/>DGDDB@5EA@B=EDEDGC?CE5B3GBAED5D?GEB>D?-EC@##?:DBDA3#2G:@E#F>A5D####A#A##"	]
[ "F?CBF7BGFGGGDD@GFF@B;:GGGEGCFF>EFGGDFFEDEFFG1EGCC?BDF#F=ED=E?@GBF@=GDED;856FD?@=F#FE?EB5CEGCFE#F####",	"####F#EFCGEC5BE?EF#F=@?DF658;DEDG=@FBG@?E=DE=F#FDB?CCGE1GFFEDEFFDGGFE>FFCGEGGG:;B@FFG@DDGGGFGB7FBC?F"	]
[ "##A#A####D5A>F#E@:G2#3ADBD:?##@CE-?D>BEG?D5DEABG3B5EC?CGDEDE=B@AE5@BDDGD>/DGBAE5@EGFEGEEEFEAD;BB?FGC",	"CGF?BB;DAEFEEEGEFGE@5EABGD/>DGDDB@5EA@B=EDEDGC?CE5B3GBAED5D?GEB>D?-EC@##?:DBDA3#2G:@E#F>A5D####A#A##"	]
[ "FGDEGFA:GGG@?BE?F;FGCFF5@EF3;5G#FA.G=D?D?AGAE?AFF=>CBDE32?<E?ED#GG?G?E#E#EEE>5#B####EFF##=D####6#:#,",	",#:#6####D=##FFE####B#5>EEE#E#E?G?GG#DE?E<?23EDBC>=FFA?EAGA?D?D=G.AF#G5;3FE@5FFCGF;F?EB?@GGG:AFGEDGF"	]
[ "FGDEGFA:GGG@?BE?F;FGCFF5@EF3;5G#FA.G=D?D?AGAE?AFF=>CBDE32?<E?ED#GG?G?E#E#EEE>5#B####EFF##=D####6#:#,",	",#:#6####D=##FFE####B#5>EEE#E#E?G?GG#DE?E<?23EDBC>=FFA?EAGA?D?D=G.AF#G5;3FE@5FFCGF;F?EB?@GGG:AFGEDGF"	]
[ "5<###E?##AB#E=DB#<==;#E#?=AFEE@C@AEA6GDGFFG?DE??::?=@BC#G>GB>GEEDA=G>ADEFDEGABEDDEBCGGEFFF7;=GEGGFGC",	"CGFGGEG=;7FFFEGGCBEDDEBAGEDFEDA>G=ADEEG>BG>G#CB@=?::??ED?GFFGDG6AEA@C@EEFA=?#E#;==<#BD=E#BA##?E###<5"	]
[ "CDDEFG;?DGEDFE+CECEEGFG>C,EG5?DGE87GBDFGCEDD=BGGDD?GDFGDD?DAGGC<G=GF@A@CE@>?>.6#F#FFDEE?@CE==<9?B?>;",	";>?B?9<==EC@?EEDFF#F#6.>?>@EC@A@FG=G<CGGAD?DDGFDG?DDGGB=DDECGFDBG78EGD?5GE,C>GFGEECEC+EFDEGD?;GFEDDC"	]
[ "?##??3G#9##=5B#>A#.#>#>CFBEC@:BGC>.A5@6-F4:5?;EGGAA>?6@D<?EAEDE6CGGDGGE@9F?GGGGDD5EDDGFD?:>?FED?DEBA",	"ABED?DEF?>:?DFGDDE5DDGGGG?F9@EGGDGGC6EDEAE?<D@6?>AAGGE;?5:4F-6@5A.>CGB:@CEBFC>#>#.#A>#B5=##9#G3??##?"	]
[ "FBGGFDGEFA?GGFGEF;AEGCEEGCFE?FE;GA:EAEEGDD>F8E=E=FABFCDCEG@@@E#BDBCBE;=#D5#,55DCAG:B8EGE#AAGBF#?#E#A",	"A#E#?#FBGAA#EGE8B:GACD55,#5D#=;EBCBDB#E@@@GECDCFBAF=E=E8F>DDGEEAE:AG;EF?EFCGEECGEA;FEGFGG?AFEGDFGGBF"	]
[ "#;>6##<@#C@#8B#>#:GF2G@A2;BFA?B:-<ECG--)GE7F9DGD;/:ACDABDEBD5EG:EB@DDGB#@:AEA?=GG=DE?D5GD<AFEC;DF=GA",	"AG=FD;CEFA<DG5D?ED=GG=?AEA:@#BGDD@BE:GE5DBEDBADCA:/;DGD9F7EG)--GCE<-:B?AFB;2A@G2FG:#>#B8#@C#@<##6>;#"	]
[ "DE>FDG5FDGDGFDAGEFABDGGEGADG?BEDDFGGEDGA?GG=9FEDDGBD58=@AFDFD=CBD9GGD=DCC?EE?F#A6GC#>?F#F@2E?CDF?#B?",	"?B#?FDC?E2@F#F?>#CG6A#F?EE?CCD=DGG9DBC=DFDFA@=85DBGDDEF9=GG?AGDEGGFDDEB?GDAGEGGDBAFEGADFGDGDF5GDF>ED"	]
[ "####FF-0AD#E>@#?#9??E##A>C=C>D7A,<G?D>=>DDD=F:?G=>CE?:CAFGEDGEFDAGGFEF7CGDCEDEEGA@DECFGE-?DEACD?DC=G",	"G=CD?DCAED?-EGFCED@AGEEDECDGC7FEFGGADFEGDEGFAC:?EC>=G?:F=DDD>=>D?G<,A7D>C=C>A##E??9#?#@>E#DA0-FF####"	]
[ "####FF-0AD#E>@#?#9??E##A>C=C>D7A,<G?D>=>DDD=F:?G=>CE?:CAFGEDGEFDAGGFEF7CGDCEDEEGA@DECFGE-?DEACD?DC=G",	"G=CD?DCAED?-EGFCED@AGEEDECDGC7FEFGGADFEGDEGFAC:?EC>=G?:F=DDD>=>D?G<,A7D>C=C>A##E??9#?#@>E#DA0-FF####"	]
[ "G5FGBEFEEGFED=EGDABFGGGFGGCE?EF=EEDGG9G?GEAECD9FGBFCEF;GGEC=GC5>F1?CDCCD#FEB=EE5B#CFEB###:ECBA-CE:@A",	"A@:EC-ABCE:###BEFC#B5EE=BEF#DCCDC?1F>5CG=CEGG;FECFBGF9DCEAEG?G9GGDEE=FE?ECGGFGGGFBADGE=DEFGEEFEBGF5G"	]
[ "G5FGBEFEEGFED=EGDABFGGGFGGCE?EF=EEDGG9G?GEAECD9FGBFCEF;GGEC=GC5>F1?CDCCD#FEB=EE5B#CFEB###:ECBA-CE:@A",	"A@:EC-ABCE:###BEFC#B5EE=BEF#DCCDC?1F>5CG=CEGG;FECFBGF9DCEAEG?G9GGDEE=FE?ECGGFGGGFBADGE=DEFGEEFEBGF5G"	]
[ "##??BG#C##5AB#D;=G#BF#E#:;@?#<(4BGCG-#EA@<G?FC*GDD@FD:BEBEGFGFDDBDEAD9GGD37DDFDCDFDGEFGFCGEE:?AE>EDG",	"GDE>EA?:EEGCFGFEGDFDCDFDD73DGG9DAEDBDDFGFGEBEB:DF@DDG*CF?G<@AE#-GCGB4(<#?@;:#E#FB#G=;D#BA5##C#GB??##"	]
[ "GGDEGGEAGGD?ED?>GDGDGFG.-GEFG:FE=FFGGFDGDDE==C==:@C7DEE=#GBC,BFFC?<@:A#:6AC>D?C#;EFD/FE#@CF#C=#B?#6=",	"=6#?B#=C#FC@#EF/DFE;#C?D>CA6:#A:@<?CFFB,CBG#=EED7C@:==C==EDDGDFGGFF=EF:GFEG-.GFGDGDG>?DE?DGGAEGGEDGG"	]
[ "A=#=C?A5.E##?#A##=#C#D?-A#E+E?CEFFCCB1;=-DG:DGFCECF=GA@FFFAECACF-;=DDDFDFB??F?F5?GGF:;FEBGFC;(CGDGG:",	":GGDGC(;CFGBEF;:FGG?5F?F??BFDFDDD=;-FCACEAFFF@AG=FCECFGD:GD-=;1BCCFFEC?E+E#A-?D#C#=##A#?##E.5A?C=#=A"	]
[ "EFE:FC@D?5FGGCAEDAFEGG3GEDA5(CFFFEGD#GEFFG?EDCFC?GBAGEFADCFBGCG@FGCF2F0ED>C@E:DAF:A-BF;:/#;#E##A#A?C",	"C?A#A##E#;#/:;FB-A:FAD:E@C>DE0F2FCGF@GCGBFCDAFEGABG?CFCDE?GFFEG#DGEFFFC(5ADEG3GGEFADEACGGF5?D@CF:EFE"	]
[ "#GD###A#5ED#B5.#BE==5FG#E3-@#AB7CA)@DEFF=FF#@AEFDFD4>DF2CCCGGA:DGB'FFDG9AEF?3;DGAE?CGCFD2GAG?GB@GFGF",	"FGFG@BG?GAG2DFCGC?EAGD;3?FEA9GDFF'BGD:AGGCCC2FD>4DFDFEA@#FF=FFED@)AC7BA#@-3E#GF5==EB#.5B#DE5#A###DG#"	]
[ "?GFGFFAEEEGEF-GGEEGGEEFFGDF;??DGDGD/=DBD09EGG5EDG@DEC,FBGD@BF5:FBE6:FAE@B.EAABCBFCE5D>EF#=#:EE#A>###",	"###>A#EE:#=#FE>D5ECFBCBAAE.B@EAF:6EBF:5FB@DGBF,CED@GDE5GGE90DBD=/DGDGD??;FDGFFEEGGEEGG-FEGEEEAFFGFG?"	]
[ "4####B#?C#???#6,D####-BAEF3<)DE>AD(#DD+BFEFFBBEAFBC1GABFAA2GEBGEDF8G7G=AAAD=EGDD:A4ABE?AFGDGD0DD?DB>",	">BD?DD0DGDGFA?EBA4A:DDGE=DAAA=G7G8FDEGBEG2AAFBAG1CBFAEBBFFEFB+DD#(DA>ED)<3FEAB-####D,6#???#C?#B####4"	]
[ "CG.GCEGGGFDGGGGEDCE<BEG5GDGEE=##EEFEFABFDE:#G??>:55;FE:5=A?E;E9BF#E@5=AE;BEGCA:#>EAC#DED#B##A;###B#B",	"B#B###;A##B#DED#CAE>#:ACGEB;EA=5@E#FB9E;E?A=5:EF;55:>??G#:EDFBAFEFEE##=EEGDG5GEB<ECDEGGGGDFGGGECG.GC"	]
[ "CG.GCEGGGFDGGGGEDCE<BEG5GDGEE=##EEFEFABFDE:#G??>:55;FE:5=A?E;E9BF#E@5=AE;BEGCA:#>EAC#DED#B##A;###B#B",	"B#B###;A##B#DED#CAE>#:ACGEB;EA=5@E#FB9E;E?A=5:EF;55:>??G#:EDFBAFEFEE##=EEGDG5GEB<ECDEGGGGDFGGGECG.GC"	]
[ "##AEG#=GE>75CADDFEB=DF;<7=CF?<B?CBBC6:GDCDE=EBFFGFDE=BDDEEDEB?DD'AAE?CEEDFGFDDG>EGEGDA>FGD;EEEF:@GF<",	"<FG@:FEEE;DGF>ADGEGE>GDDFGFDEEC?EAA'DD?BEDEEDDB=EDFGFFBE=EDCDG:6CBBC?B<?FC=7<;FD=BEFDDAC57>EG=#GEA##"	]
[ "FGECEGDGGGGG?DGGEBG=FGGFD@EA9:EGGDGCFDDCEC??=DF:DECAEFC:A@EFEGE6>#GBE5C#BF<EDC=D&?G;E#=#B###G=A#@?5#",	"#5?@#A=G###B#=#E;G?&D=CDE<FB#C5EBG#>6EGEFE@A:CFEACED:FD=??CECDDFCGDGGE:9AE@DFGGF=GBEGGD?GGGGGDGECEGF"	]
[ "##DAA#C-#BE#D##F#9:B#@AB#DF#6D6G8F-D8CFF8E?E:#=>B>AG=6EG#CGEDG9B3:AEEG6AC:BE5DDCDFBBG5GCFG4GAEEFBGG?",	"?GGBFEEAG4GFCG5GBBFDCDD5EB:CA6GEEA:3B9GDEGC#GE6=GA>B>=#:E?E8FFC8D-F8G6D6#FD#BA@#B:9#F##D#EB#-C#AAD##"	]
[ "@*G@F:7DEDG?BFGFFGA:DBGG:EAGDCDAGG?E=FGGGGD?EGG5FEFE?#EA@E:DCD?>E-?C?BE<BE?CE:GB=CGC#+?#CC###>C#D@F#",	"#F@D#C>###CC#?+#CGC=BG:EC?EB<EB?C?-E>?DCD:E@AE#?EFEF5GGE?DGGGGF=E?GGADCDGAE:GGBD:AGFFGFB?GDED7:F@G*@"	]
[ "?#D#A##FBE@-#0EA/?A>#?=EB9%;<-EC>G3EA2ADDF9EGCACFAFC?:GAB5AGE=CGBE5?DEEEFBG:DFDECFDB5AGEGGGGGFD?G?DD",	"DD?G?DFGGGGGEGA5BDFCEDFD:GBFEEED?5EBGC=EGA5BAG:?CFAFCACGE9FDDA2AE3G>CE-<;%9BE=?#>A?/AE0#-@EBF##A#D#?"	]
[ "F?DE>FGCFDDGGEFAD@GFGEGEGF?DABCF@>@E?<D55ABGEAE#(-#EDE?=D8&@DGEA@#8DDD5DDF#F##E4=@=<BD-#AA?##<A###.#",	"#.###A<##?AA#-DB<=@=4E##F#FDD5DDD8#@AEGD@&8D=?EDE#-(#EAEGBA55D<?E@>@FCBAD?FGEGEGFG@DAFEGGDDFCGF>ED?F"	]
[ ">BA#EAB#A?#=DCE#DDEACCDGA?@B?D;AC5EAFA=D)#EG8EG##DGD=?#FFGAABECGFA,G<EGEE:@FDEFE?DGDGGFGFGGGGEGGEFGA",	"AGFEGGEGGGGFGFGGDGD?EFEDF@:EEGE<G,AFGCEBAAGFF#?=DGD##GE8GE#)D=AFAE5CA;D?B@?AGDCCAEDD#ECD=#?A#BAE#AB>"	]
[ "F:CADE=EBGDDAEGE>DE@@D=CDDE#EG35CG?E;7CEEBDGGEB@-F=GEGD8CG>=5A=BBAFB#?D:G?E3A##?#F-?#DC#:###E#G8##B#",	"#B##8G#E###:#CD#?-F#?##A3E?G:D?#BFABB=A5=>GC8DGEG=F-@BEGGDBEEC7;E?GC53GE#EDDC=D@@ED>EGEADDGBE=EDAC:F"	]
[ ";5#GFC#@@#AE@FE@E@4B=BE:6;ADA>E#:GF=?#=:?/EA?G>GF3CFCDEB:EFGDG?G@GGFEG=F5FDGE?#GDFGGFEE@AGADGFGEDEEG",	"GEEDEGFGDAGA@EEFGGFDG#?EGDF5F=GEFGG@G?GDGFE:BEDCFC3FG>G?AE/?:=#?=FG:#E>ADA;6:EB=B4@E@EF@EA#@@#CFG#5;"	]
[ ";5#GFC#@@#AE@FE@E@4B=BE:6;ADA>E#:GF=?#=:?/EA?G>GF3CFCDEB:EFGDG?G@GGFEG=F5FDGE?#GDFGGFEE@AGADGFGEDEEG",	"GEEDEGFGDAGA@EEFGGFDG#?EGDF5F=GEFGG@G?GDGFE:BEDCFC3FG>G?AE/?:=#?=FG:#E>ADA;6:EB=B4@E@EF@EA#@@#CFG#5;"	]
[ "FDFGECDG?GDF=2BGEGEGEE@GGG=EEG:GFF@>EADDAFEE?::FGEGB>F>E@6EGGAE#DG#=B?(#@BCDDAEEGGFBAFFE-D#:>#:#CD7#",	"#7DC#:#>:#D-EFFABFGGEEADDCB@#(?B=#GD#EAGGE6@E>F>BGEGF::?EEFADDAE>@FFG:GEE=GGG@EEGEGEGB2=FDG?GDCEGFDF"	]
[ "FDFGECDG?GDF=2BGEGEGEE@GGG=EEG:GFF@>EADDAFEE?::FGEGB>F>E@6EGGAE#DG#=B?(#@BCDDAEEGGFBAFFE-D#:>#:#CD7#",	"#7DC#:#>:#D-EFFABFGGEEADDCB@#(?B=#GD#EAGGE6@E>F>BGEGF::?EEFADDAE>@FFG:GEE=GGG@EEGEGEGB2=FDG?GDCEGFDF"	]
[ "E##G#A=CD:.E-E.DEDE71#-5EEAGC;5-=#EE5'?DDED?:CFDFG&=?ACFB=DFGG=EBFDGCAGFGG>FG>GFGFFDFGE=AG6DAGEFFEGA",	"AGEFFEGAD6GA=EGFDFFGFG>GF>GGFGACGDFBE=GGFD=BFCA?=&GFDFC:?DEDD?'5EE#=-5;CGAEE5-#17EDED.E-E.:DC=A#G##E"	]
[ "E##G#A=CD:.E-E.DEDE71#-5EEAGC;5-=#EE5'?DDED?:CFDFG&=?ACFB=DFGG=EBFDGCAGFGG>FG>GFGFFDFGE=AG6DAGEFFEGA",	"AGEFFEGAD6GA=EGFDFFGFG>GF>GGFGACGDFBE=GGFD=BFCA?=&GFDFC:?DEDD?'5EE#=-5;CGAEE5-#17EDED.E-E.:DC=A#G##E"	]
[ "BC-GDFADDFFFCG@FAF6GCFBD==@=ACG>=G>EC5<>B#E0<CG4,=GBB>DDGAGEDE7BBD6:G#55DD=EEF#B5#;#GEC#BE####A=C?A5",	"5A?C=A####EB#CEG#;#5B#FEE=DD55#G:6DBB7EDEGAGDD>BBG=,4GC<0E#B><5CE>G=>GCA=@==DBFCG6FAF@GCFFFDDAFDG-CB"	]
[ "4D@6##D=>G#<E#F#?G#;BC:EE#DB:C#>DE>B>:#ED?CFAFDF>DDC<CG:FEGGF5GEE1EFBFDGDG=GDBFDEDFBEGGGFDEDEDFGC?FF",	"FF?CGFDEDEDFGGGEBFDEDFBDG=GDGDFBFE1EEG5FGGEF:GC<CDD>FDFAFC?DE#:>B>ED>#C:BD#EE:CB;#G?#F#E<#G>=D##6@D4"	]
[ "4D@6##D=>G#<E#F#?G#;BC:EE#DB:C#>DE>B>:#ED?CFAFDF>DDC<CG:FEGGF5GEE1EFBFDGDG=GDBFDEDFBEGGGFDEDEDFGC?FF",	"FF?CGFDEDEDFGGGEBFDEDFBDG=GDGDFBFE1EEG5FGGEF:GC<CDD>FDFAFC?DE#:>B>ED>#C:BD#EE:CB;#G?#F#E<#G>=D##6@D4"	]
[ "EEEEEFAG=GCDAGBF8F:EFGGDEGCFFBAAGCE?DD?5?DGF#DC##BD;D=BD@G?A0F9G6AFC?5#CCCAE6AD-F#CA0#.ADCD;#-#6#A##",	"##A#6#-#;DCDA.#0AC#F-DA6EACCC#5?CFA6G9F0A?G@DB=D;DB##CD#FGD?5?DD?ECGAABFFCGEDGGFE:F8FBGADCG=GAFEEEEE"	]
[ "EEEEEFAG=GCDAGBF8F:EFGGDEGCFFBAAGCE?DD?5?DGF#DC##BD;D=BD@G?A0F9G6AFC?5#CCCAE6AD-F#CA0#.ADCD;#-#6#A##",	"##A#6#-#;DCDA.#0AC#F-DA6EACCC#5?CFA6G9F0A?G@DB=D;DB##CD#FGD?5?DD?ECGAABFFCGEDGGFE:F8FBGADCG=GAFEEEEE"	]
[ "##?#-@=#?D5?EBC##=2#E6A=E8A:F5+F>=CF8#BDFDF?7B8BAGC2EF?FFFG>EE*F=GDBGDGFEFEFG=FBGFFBFFBGEDCF5EFGGGDG",	"GDGGGFE5FCDEGBFFBFFGBF=GFEFEFGDGBDG=F*EE>GFFF?FE2CGAB8B7?FDFDB#8FC=>F+5F:A8E=A6E#2=##CBE?5D?#=@-#?##"	]
[ "EEEEEFAG=GCDAGBF8F:EFGGDEGCFFBAAGCE?DD?5?DGF#DC##BD;D=BD@G?A0F9G6AFC?5#CCCAE6AD-F#CA0#.ADCD;#-#6#A##",	"##A#6#-#;DCDA.#0AC#F-DA6EACCC#5?CFA6G9F0A?G@DB=D;DB##CD#FGD?5?DD?ECGAABFFCGEDGGFE:F8FBGADCG=GAFEEEEE"	]
[ "EEEEEFAG=GCDAGBF8F:EFGGDEGCFFBAAGCE?DD?5?DGF#DC##BD;D=BD@G?A0F9G6AFC?5#CCCAE6AD-F#CA0#.ADCD;#-#6#A##",	"##A#6#-#;DCDA.#0AC#F-DA6EACCC#5?CFA6G9F0A?G@DB=D;DB##CD#FGD?5?DD?ECGAABFFCGEDGGFE:F8FBGADCG=GAFEEEEE"	]
[ "##?#-@=#?D5?EBC##=2#E6A=E8A:F5+F>=CF8#BDFDF?7B8BAGC2EF?FFFG>EE*F=GDBGDGFEFEFG=FBGFFBFFBGEDCF5EFGGGDG",	"GDGGGFE5FCDEGBFFBFFGBF=GFEFEFGDGBDG=F*EE>GFFF?FE2CGAB8B7?FDFDB#8FC=>F+5F:A8E=A6E#2=##CBE?5D?#=@-#?##"	]
[ "EEEEEFAG=GCDAGBF8F:EFGGDEGCFFBAAGCE?DD?5?DGF#DC##BD;D=BD@G?A0F9G6AFC?5#CCCAE6AD-F#CA0#.ADCD;#-#6#A##",	"##A#6#-#;DCDA.#0AC#F-DA6EACCC#5?CFA6G9F0A?G@DB=D;DB##CD#FGD?5?DD?ECGAABFFCGEDGGFE:F8FBGADCG=GAFEEEEE"	]
[ "##?#-@=#?D5?EBC##=2#E6A=E8A:F5+F>=CF8#BDFDF?7B8BAGC2EF?FFFG>EE*F=GDBGDGFEFEFG=FBGFFBFFBGEDCF5EFGGGDG",	"GDGGGFE5FCDEGBFFBFFGBF=GFEFEFGDGBDG=F*EE>GFFF?FE2CGAB8B7?FDFDB#8FC=>F+5F:A8E=A6E#2=##CBE?5D?#=@-#?##"	]
[ "GGGF:GFGG?EGFEG?DAFBEF=FA+>EGG=E:EDBEB7DCCE=DG@?:?CAE4E=DCBGFG@FE8EB>FDAE#CE=ECA@#D-D?:CEA#BD#E#B#EA",	"AE#B#E#DB#AEC:?D-D#@ACE=EC#EADF>BE8EF@GFGBCD=E4EAC?:?@GD=ECCD7BEBDE:E=GGE>+AF=FEBFAD?GEFGE?GGFG:FGGG"	]
[ "=?GF3A:EA#GF6#D5=EF##AG>*EE==A#GB=GA.DE'B@AACDECGB3G>DGFDCGFBFE?EFFD;E7GBFGDCAEGBGDAEFB;5GD=GEECF0FE",	"EF0FCEEG=DG5;BFEADGBGEACDGFBG7E;DFFE?EFBFGCDFGD>G3BGCEDCAA@B'ED.AG=BG#A==EE*>GA##FE=5D#6FG#AE:A3FG?="	]
[ "=?GF3A:EA#GF6#D5=EF##AG>*EE==A#GB=GA.DE'B@AACDECGB3G>DGFDCGFBFE?EFFD;E7GBFGDCAEGBGDAEFB;5GD=GEECF0FE",	"EF0FCEEG=DG5;BFEADGBGEACDGFBG7E;DFFE?EFBFGCDFGD>G3BGCEDCAA@B'ED.AG=BG#A==EE*>GA##FE=5D#6FG#AE:A3FG?="	]
[ "C=#EDEC#5####E#D-E3E#ECGA?EE=GCDD:#@E:B?F?E@GDBDFFG5GC:FE=BEBF:GA?EDG@B<>A?G:FFEFCFECFDCDC<DGEDDF;EG",	"GE;FDDEGD<CDCDFCEFCFEFF:G?A><B@GDE?AG:FBEB=EF:CG5GFFDBDG@E?F?B:E@#:DDCG=EE?AGCE#E3E-D#E####5#CEDE#=C"	]
[ "G>AEE=EF-GB?EGG@GGEEAB-GCE>E9;DEACG?:CCGDA(E7DFF.GFGEBEEED;D#FG4G:DDGGC=GG.;D@#A#B????#C#B#CB##AFE##",	"##EFA##BC#B#C#????B#A#@D;.GG=CGGDD:G4GF#D;DEEEBEGFG.FFD7E(ADGCC:?GCAED;9E>ECG-BAEEGG@GGE?BG-FE=EEA>G"	]
[ "G>AEE=EF-GB?EGG@GGEEAB-GCE>E9;DEACG?:CCGDA(E7DFF.GFGEBEEED;D#FG4G:DDGGC=GG.;D@#A#B????#C#B#CB##AFE##",	"##EFA##BC#B#C#????B#A#@D;.GG=CGGDD:G4GF#D;DEEEBEGFG.FFD7E(ADGCC:?GCAED;9E>ECG-BAEEGG@GGE?BG-FE=EEA>G"	]
[ "C=#EDEC#5####E#D-E3E#ECGA?EE=GCDD:#@E:B?F?E@GDBDFFG5GC:FE=BEBF:GA?EDG@B<>A?G:FFEFCFECFDCDC<DGEDDF;EG",	"GE;FDDEGD<CDCDFCEFCFEFF:G?A><B@GDE?AG:FBEB=EF:CG5GFFDBDG@E?F?B:E@#:DDCG=EE?AGCE#E3E-D#E####5#CEDE#=C"	]
[ "5#>?CG=E,A=#AG#?#>GAEA@=DB<>ED@?CFC@A?=EG65GGD:C@EE(BFABFG5B?G;EFE?@5EG5GAGD5@;DFGG?F?7GAGGAFEFA>E-E",	"E-E>AFEFAGGAG7?F?GGFD;@5DGAG5GE5@?EFE;G?B5GFBAFB(EE@C:DGG56GE=?A@CFC?@DE><BD=@AEAG>#?#GA#=A,E=GC?>#5"	]
[ "FGFCEEEGDE?CB::GE=FADFCEABEGBF>D;FGGGFFCDFGDGABCCADCDDDC;EF=:ACGGCEC#C=?=>EG@9#A@?=E;=:#B##A##@%C#D#",	"#D#C%@##A##B#:=;E=?@A#9@GE>=?=C#CECGGCA:=FE;CDDDCDACCBAGDGFDCFFGGGF;D>FBGEBAECFDAF=EG::BC?EDGEEECFGF"	]
[ "FGFCEEEGDE?CB::GE=FADFCEABEGBF>D;FGGGFFCDFGDGABCCADCDDDC;EF=:ACGGCEC#C=?=>EG@9#A@?=E;=:#B##A##@%C#D#",	"#D#C%@##A##B#:=;E=?@A#9@GE>=?=C#CECGGCA:=FE;CDDDCDACCBAGDGFDCFFGGGF;D>FBGEBAECFDAF=EG::BC?EDGEEECFGF"	]
[ "5#>?CG=E,A=#AG#?#>GAEA@=DB<>ED@?CFC@A?=EG65GGD:C@EE(BFABFG5B?G;EFE?@5EG5GAGD5@;DFGG?F?7GAGGAFEFA>E-E",	"E-E>AFEFAGGAG7?F?GGFD;@5DGAG5GE5@?EFE;G?B5GFBAFB(EE@C:DGG56GE=?A@CFC?@DE><BD=@AEAG>#?#GA#=A,E=GC?>#5"	]
[ "5#>?CG=E,A=#AG#?#>GAEA@=DB<>ED@?CFC@A?=EG65GGD:C@EE(BFABFG5B?G;EFE?@5EG5GAGD5@;DFGG?F?7GAGGAFEFA>E-E",	"E-E>AFEFAGGAG7?F?GGFD;@5DGAG5GE5@?EFE;G?B5GFBAFB(EE@C:DGG56GE=?A@CFC?@DE><BD=@AEAG>#?#GA#=A,E=GC?>#5"	]
[ "G6EG5GGGGDGGADFGEB?GFDGGAEGGCFFBECGGB*BEA9BFG6E=?=)C5FGAFE6G2FB=CFECF#DAEAG<AGD7F*44D:#B>+?F##;E;#DD",	"DD#;E;##F?+>B#:D44*F7DGA<GAEAD#FCEFC=BF2G6EFAGF5C)=?=E6GFB9AEB*BGGCEBFFCGGEAGGDFG?BEGFDAGGDGGGG5GE6G"	]
[ "#E###BF#?;;#>@=1#@=E=B#E-EDF?DBC#EDEF?;6FE>+GE@GDE.AEDE+DAF:4E>FF=EDA;DAEGEGAEFD?GD=DG=G=C5FEGDGGFAG",	"GAFGGDGEF5C=G=GD=DG?DFEAGEGEAD;ADE=FF>E4:FAD+EDEA.EDG@EG+>EF6;?FEDE#CBD?FDE-E#B=E=@#1=@>#;;?#FB###E#"	]
[ "#E###BF#?;;#>@=1#@=E=B#E-EDF?DBC#EDEF?;6FE>+GE@GDE.AEDE+DAF:4E>FF=EDA;DAEGEGAEFD?GD=DG=G=C5FEGDGGFAG",	"GAFGGDGEF5C=G=GD=DG?DFEAGEGEAD;ADE=FF>E4:FAD+EDEA.EDG@EG+>EF6;?FEDE#CBD?FDE-E#B=E=@#1=@>#;;?#FB###E#"	]
[ "##A#A####D5A>F#E@:G2#3ADBD:?##@CE-?D>BEG?D5DEABG3B5EC?CGDEDE=B@AE5@BDDGD>/DGBAE5@EGFEGEEEFEAD;BB?FGC",	"CGF?BB;DAEFEEEGEFGE@5EABGD/>DGDDB@5EA@B=EDEDGC?CE5B3GBAED5D?GEB>D?-EC@##?:DBDA3#2G:@E#F>A5D####A#A##"	]
[ "CGFGGEG=;7FFFEGGCBEDDEBAGEDFEDA>G=ADEEG>BG>G#CB@=?::??ED?GFFGDG6AEA@C@EEFA=?#E#;==<#BD=E#BA##?E###<5",	"5<###E?##AB#E=DB#<==;#E#?=AFEE@C@AEA6GDGFFG?DE??::?=@BC#G>GB>GEEDA=G>ADEFDEGABEDDEBCGGEFFF7;=GEGGFGC"	]
[ "##A#A####D5A>F#E@:G2#3ADBD:?##@CE-?D>BEG?D5DEABG3B5EC?CGDEDE=B@AE5@BDDGD>/DGBAE5@EGFEGEEEFEAD;BB?FGC",	"CGF?BB;DAEFEEEGEFGE@5EABGD/>DGDDB@5EA@B=EDEDGC?CE5B3GBAED5D?GEB>D?-EC@##?:DBDA3#2G:@E#F>A5D####A#A##"	]
[ "##A#A####D5A>F#E@:G2#3ADBD:?##@CE-?D>BEG?D5DEABG3B5EC?CGDEDE=B@AE5@BDDGD>/DGBAE5@EGFEGEEEFEAD;BB?FGC",	"CGF?BB;DAEFEEEGEFGE@5EABGD/>DGDDB@5EA@B=EDEDGC?CE5B3GBAED5D?GEB>D?-EC@##?:DBDA3#2G:@E#F>A5D####A#A##"	]
#SELECT seq_length('18M');
% .L # table_name
% seq_length_single_value # name
% int # type
% 2 # length
[ 18	]
#SELECT seq_length('3I5D6N');
% .L # table_name
% seq_length_single_value # name
% int # type
% 2 # length
[ 11	]
#SELECT seq_length('3=1X1=1X43=1X16=1X33=');
% .L # table_name
% seq_length_single_value # name
% int # type
% 3 # length
[ 100	]
#SELECT cigar, seq_length(cigar) AS seq_length
#FROM bam.alignments_1;
% bam.alignments_1,	bam.L # table_name
% cigar,	seq_length # name
% clob,	int # type
% 27,	4 # length
[ "3=1X1=1X43=1X16=1X33=",	100	]
[ "5=1X31=1X62=",	100	]
[ "100=",	100	]
[ "31=1X1=1X16=1X43=1X5=",	100	]
[ "100=",	100	]
[ "100=",	100	]
[ "3=1X96=",	100	]
[ "1=1I1=1I96=",	98	]
[ "100=",	100	]
[ "14=1X10=1X74=",	100	]
[ "9=1X90=",	100	]
[ "84=1X4=1X8=1X1=",	100	]
[ "42=1X57=",	100	]
[ "100=",	100	]
[ "14=1X85=",	100	]
[ "14=1X77=1056D1=1X2=1D4=",	1157	]
[ "33=1X52=1X1=1X11=",	100	]
[ "86=1X1=1X11=",	100	]
[ "100=",	100	]
[ "23=1X76=",	100	]
[ "20=1X79=",	100	]
[ "28=1X54=1X16=",	100	]
[ "66=1X33=",	100	]
[ "40=2X31=1X26=",	100	]
[ "1=1X12=2X12=1X17=1X4=1X48=",	100	]
[ "2=1X95=2I",	98	]
[ "2=1X95=1X1=",	100	]
[ "100=",	100	]
[ "44=1X26=1X28=",	100	]
[ "100=",	100	]
[ "100=",	100	]
[ "11=2X13=1X73=",	100	]
[ "48=1X51=",	100	]
[ "66=1X33=",	100	]
[ "100=",	100	]
[ "1=1I1=1I10=15D86=",	113	]
[ "100=",	100	]
[ "100=",	100	]
[ "92=172D6=1X1=",	272	]
[ "1=1X7=104D18=1X9=1X12=1X49=",	204	]
[ "27=1X9=1X12=1X49=",	100	]
[ "92=1X7=",	100	]
[ "1=1I1=2X9=27D86=",	126	]
[ "4=1X95=",	100	]
[ "5=1X11=1885D83=",	1985	]
[ "3=1I1=1X14=1751D80=",	1850	]
[ "11=1368D51=1X37=",	1468	]
[ "5=1X12=307D82=",	407	]
[ "3=1I1=1X13=171D81=",	270	]
[ "4=1X1I10=307D46=1X37=",	406	]
[ "100=",	100	]
[ "62=1X37=",	100	]
[ "68=1X31=",	100	]
[ "19=1X50=1X26=1I1=1I",	98	]
[ "19=1X50=1X26=1X2=",	100	]
[ "2=1D9=617D9=1X79=",	718	]
[ "5=1I3=232D71=1X12=1X6=",	331	]
[ "8=1X71=1X12=1X6=",	100	]
[ "20=1X79=",	100	]
[ "1=1X8=1134D31=1X56=1I1=",	1233	]
[ "89=1X5=1X4=",	100	]
[ "1=1I12=72I3=1X5=1X4=",	27	]
[ "41=1X56=1I1=",	99	]
[ "41=1X56=1X1=",	100	]
[ "100=",	100	]
[ "1X49=1X9=1X39=",	100	]
[ "1I49=1X9=1X39=",	99	]
[ "33=1X16=1X3=1X39=1X5=",	100	]
[ "41=1X34=1X2=1X20=",	100	]
[ "50=1X43=1X5=",	100	]
[ "50=1X43=1X5=",	100	]
#SELECT seq_char(5000, 'ACTGAG', 0, '6M');
% .L # table_name
% seq_char_single_value # name
% char # type
% 1 # length
[ NULL	]
#SELECT seq_char(5000, 'ACTGAG', 4995, '6M');
% .L # table_name
% seq_char_single_value # name
% char # type
% 1 # length
[ "G"	]
#SELECT seq_char(5000, 'ACTGAG', 4994, '6M');
% .L # table_name
% seq_char_single_value # name
% char # type
% 1 # length
[ NULL	]
#SELECT seq_char(5000, 'ACTGAG', 5000, '6M');
% .L # table_name
% seq_char_single_value # name
% char # type
% 1 # length
[ "A"	]
#SELECT seq_char(5000, 'ACTGAG', 5001, '6M');
% .L # table_name
% seq_char_single_value # name
% char # type
% 1 # length
[ NULL	]
#SELECT seq_char(7, 'ACTAGAATGGCT', 5, '3M1I3M1D5M');
% .L # table_name
% seq_char_single_value # name
% char # type
% 1 # length
[ "T"	]
#SELECT seq_char(8, 'ACTAGAATGGCT', 5, '3M1I3M1D5M');
% .L # table_name
% seq_char_single_value # name
% char # type
% 1 # length
[ "G"	]
#SELECT seq_char(11, 'ACTAGAATGGCT', 5, '3M1I3M1D5M');
% .L # table_name
% seq_char_single_value # name
% char # type
% 1 # length
[ NULL	]
#SELECT seq_char(16, 'ACTAGAATGGCT', 5, '3M1I3M1D5M');
% .L # table_name
% seq_char_single_value # name
% char # type
% 1 # length
[ "T"	]
#SELECT seq_char(17, 'ACTAGAATGGCT', 5, '3M1I3M1D5M');
% .L # table_name
% seq_char_single_value # name
% char # type
% 1 # length
[ NULL	]
#SELECT 17922987 AS ref_pos, seq, pos, cigar, seq_char(17922987, seq, pos, cigar) AS seq_char
#FROM bam.alignments_1
#WHERE seq_char(17922987, seq, pos, cigar) IS NOT NULL;
% .L,	bam.alignments_1,	bam.alignments_1,	bam.alignments_1,	.L # table_name
% ref_pos,	seq,	pos,	cigar,	seq_char # name
% int,	clob,	int,	clob,	char # type
% 8,	100,	8,	21,	1 # length
[ 17922987,	"TATACTTATAGAACAAATGAACCCAAAACCACATAAGGTAAACAACAAAGCTACTGGTTCAAAATTAAGCCTAACTTCAACAGTACCAGGCAAAAACCAT",	17922987,	"3=1X1=1X43=1X16=1X33=",	"T"	]

# 14:48:32 >  
# 14:48:32 >  "Done."
# 14:48:32 >  
