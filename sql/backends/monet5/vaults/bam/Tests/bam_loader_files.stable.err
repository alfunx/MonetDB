stderr of test 'bam_loader_files` in directory 'sql/backends/monet5/vaults/bam` itself:


# 10:49:55 >  
# 10:49:55 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=31416" "--set" "mapi_usock=/var/tmp/mtest-342/.s.monetdb.31416" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/robin/MonetDB/PREFIX/var/MonetDB/mTests_sql_backends_monet5_bam" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 10:49:55 >  

# builtin opt 	gdk_dbpath = /home/robin/MonetDB/PREFIX/var/monetdb5/dbfarm/demo
# builtin opt 	gdk_debug = 0
# builtin opt 	gdk_vmtrim = no
# builtin opt 	monet_prompt = >
# builtin opt 	monet_daemon = no
# builtin opt 	mapi_port = 50000
# builtin opt 	mapi_open = false
# builtin opt 	mapi_autosense = false
# builtin opt 	sql_optimizer = default_pipe
# builtin opt 	sql_debug = 0
# cmdline opt 	gdk_nr_threads = 0
# cmdline opt 	mapi_open = true
# cmdline opt 	mapi_port = 31416
# cmdline opt 	mapi_usock = /var/tmp/mtest-342/.s.monetdb.31416
# cmdline opt 	monet_prompt = 
# cmdline opt 	mal_listing = 2
# cmdline opt 	gdk_dbpath = /home/robin/MonetDB/PREFIX/var/MonetDB/mTests_sql_backends_monet5_bam
# cmdline opt 	mal_listing = 0
# cmdline opt 	embedded_r = yes
# cmdline opt 	gdk_debug = 536870922
# <bam_loader>: Loader started for 2 BAM files...
# # <bam_loader> Retrieving next file id...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_5 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_5_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_5 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_5_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_5_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_5 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_6 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_6_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_6 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_6_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_6_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_6 (virtual_offset) 
# 	);
# # <bam_loader> Creating reader threads...
# # <Thread 0> Starting on next file...
# # <Thread 0> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 5)...
# # <Thread 1> Starting on next file...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 6)...
# # <Thread 2> Starting on next file...
# # <Thread 2> No files left to work on; thread done
# # <Thread 3> Starting on next file...
# # <bam_loader> Waiting for reader threads to finish...
# # <Thread 3> No files left to work on; thread done
# # <Thread 0> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 5) processed!
# # <Thread 0> Starting on next file...
# # <Thread 0> No files left to work on; thread done
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 6) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> No files left to work on; thread done
# # <bam_loader> Copying data into DB...
# # COPY BINARY INTO bam.files FROM ('bam_binaries/5/files_0', 'bam_binaries/5/files_1', 'bam_binaries/5/files_2', 'bam_binaries/5/files_3', 'bam_binaries/5/files_4', 'bam_binaries/5/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/5/sq_0', 'bam_binaries/5/sq_1', 'bam_binaries/5/sq_2', 'bam_binaries/5/sq_3', 'bam_binaries/5/sq_4', 'bam_binaries/5/sq_5', 'bam_binaries/5/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/5/pg_0', 'bam_binaries/5/pg_1', 'bam_binaries/5/pg_2', 'bam_binaries/5/pg_3', 'bam_binaries/5/pg_4', 'bam_binaries/5/pg_5');
# COPY BINARY INTO bam.alignments_5 FROM 	('bam_binaries/5/alignments_0', 'bam_binaries/5/alignments_1', 'bam_binaries/5/alignments_2', 'bam_binaries/5/alignments_3', 'bam_binaries/5/alignments_4', 'bam_binaries/5/alignments_5', 'bam_binaries/5/alignments_6', 'bam_binaries/5/alignments_7', 'bam_binaries/5/alignments_8', 'bam_binaries/5/alignments_9', 'bam_binaries/5/alignments_10', 'bam_binaries/5/alignments_11');
# COPY BINARY INTO bam.alignments_extra_5 FROM ('bam_binaries/5/alignments_extra_0', 'bam_binaries/5/alignments_extra_1', 'bam_binaries/5/alignments_extra_2', 'bam_binaries/5/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/6/files_0', 'bam_binaries/6/files_1', 'bam_binaries/6/files_2', 'bam_binaries/6/files_3', 'bam_binaries/6/files_4', 'bam_binaries/6/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/6/sq_0', 'bam_binaries/6/sq_1', 'bam_binaries/6/sq_2', 'bam_binaries/6/sq_3', 'bam_binaries/6/sq_4', 'bam_binaries/6/sq_5', 'bam_binaries/6/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/6/pg_0', 'bam_binaries/6/pg_1', 'bam_binaries/6/pg_2', 'bam_binaries/6/pg_3', 'bam_binaries/6/pg_4', 'bam_binaries/6/pg_5');
# COPY BINARY INTO bam.alignments_6 FROM 	('bam_binaries/6/alignments_0', 'bam_binaries/6/alignments_1', 'bam_binaries/6/alignments_2', 'bam_binaries/6/alignments_3', 'bam_binaries/6/alignments_4', 'bam_binaries/6/alignments_5', 'bam_binaries/6/alignments_6', 'bam_binaries/6/alignments_7', 'bam_binaries/6/alignments_8', 'bam_binaries/6/alignments_9', 'bam_binaries/6/alignments_10', 'bam_binaries/6/alignments_11');
# COPY BINARY INTO bam.alignments_extra_6 FROM ('bam_binaries/6/alignments_extra_0', 'bam_binaries/6/alignments_extra_1', 'bam_binaries/6/alignments_extra_2', 'bam_binaries/6/alignments_extra_3');
# 
# # <bam_loader>: Loader finished processing 2 BAM files...
# # <bam_loader>: Loader started for 2 BAM files...
# # <bam_loader> Retrieving next file id...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/queryname/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/queryname/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/queryname/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/queryname/file2.sam'...
# # <bam_loader> Checking sortedness for BAM file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/queryname/file1.bam'...
# # <bam_loader> Checking sortedness for BAM file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/queryname/file2.sam'...
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/queryname/file1.bam'...
# # CREATE TABLE bam.paired_primary_alignments_7 ( 
# 		l_virtual_offset			  BIGINT	  NOT NULL, 
# 		r_virtual_offset			  BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		l_flag						SMALLINT	NOT NULL, 
# 		l_rname					   STRING	  NOT NULL, 
# 		l_pos						 INT		 NOT NULL, 
# 		l_mapq						SMALLINT	NOT NULL, 
# 		l_cigar					   STRING	  NOT NULL, 
# 		l_rnext					   STRING	  NOT NULL, 
# 		l_pnext					   INT		 NOT NULL, 
# 		l_tlen						INT		 NOT NULL, 
# 		l_seq						 STRING	  NOT NULL, 
# 		l_qual						STRING	  NOT NULL, 
# 		r_flag						SMALLINT	NOT NULL, 
# 		r_rname					   STRING	  NOT NULL, 
# 		r_pos						 INT		 NOT NULL, 
# 		r_mapq						SMALLINT	NOT NULL, 
# 		r_cigar					   STRING	  NOT NULL, 
# 		r_rnext					   STRING	  NOT NULL, 
# 		r_pnext					   INT		 NOT NULL, 
# 		r_tlen						INT		 NOT NULL, 
# 		r_seq						 STRING	  NOT NULL, 
# 		r_qual						STRING	  NOT NULL, 
# 		CONSTRAINT paired_primary_alignments_7_pkey_l_virtual_offset_r_virtual_offset 
# 			PRIMARY KEY (l_virtual_offset, r_virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.paired_secondary_alignments_7 ( 
# 		l_virtual_offset			  BIGINT	  NOT NULL, 
# 		r_virtual_offset			  BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		l_flag						SMALLINT	NOT NULL, 
# 		l_rname					   STRING	  NOT NULL, 
# 		l_pos						 INT		 NOT NULL, 
# 		l_mapq						SMALLINT	NOT NULL, 
# 		l_cigar					   STRING	  NOT NULL, 
# 		l_rnext					   STRING	  NOT NULL, 
# 		l_pnext					   INT		 NOT NULL, 
# 		l_tlen						INT		 NOT NULL, 
# 		l_seq						 STRING	  NOT NULL, 
# 		l_qual						STRING	  NOT NULL, 
# 		r_flag						SMALLINT	NOT NULL, 
# 		r_rname					   STRING	  NOT NULL, 
# 		r_pos						 INT		 NOT NULL, 
# 		r_mapq						SMALLINT	NOT NULL, 
# 		r_cigar					   STRING	  NOT NULL, 
# 		r_rnext					   STRING	  NOT NULL, 
# 		r_pnext					   INT		 NOT NULL, 
# 		r_tlen						INT		 NOT NULL, 
# 		r_seq						 STRING	  NOT NULL, 
# 		r_qual						STRING	  NOT NULL, 
# 		CONSTRAINT paired_secondary_alignments_7_pkey_l_virtual_offset_r_virtual_offset 
# 			PRIMARY KEY (l_virtual_offset, r_virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.unpaired_alignments_7 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT unpaired_alignments_7_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_7 ( 
# 	tag						   CHAR(2)	 NOT NULL, 
# 	virtual_offset				BIGINT	  NOT NULL, 
# 	type						  CHAR(1)	 NOT NULL, 
# 	value						 STRING, 
# 	CONSTRAINT alignments_extra_7_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset) 
# 	); 
# 	
# 	CREATE VIEW bam.unpaired_primary_alignments_7 AS 
# 		SELECT l_virtual_offset AS virtual_offset, qname, l_flag AS flag, l_rname AS rname, l_pos AS pos, l_mapq AS mapq, 
# 			l_cigar AS cigar, l_rnext AS rnext, l_pnext AS pnext, l_tlen AS tlen, l_seq AS seq, l_qual AS qual 
# 		FROM bam.paired_primary_alignments_7 
# 		UNION ALL 
# 		SELECT r_virtual_offset AS virtual_offset, qname, r_flag AS flag, r_rname AS rname, r_pos AS pos, r_mapq AS mapq, 
# 			r_cigar AS cigar, r_rnext AS rnext, r_pnext AS pnext, r_tlen AS tlen, r_seq AS seq, r_qual AS qual 
# 		FROM bam.paired_primary_alignments_7; 
# 	
# 	CREATE VIEW bam.unpaired_secondary_alignments_7 AS 
# 		SELECT l_virtual_offset AS virtual_offset, qname, l_flag AS flag, l_rname AS rname, l_pos AS pos, l_mapq AS mapq, 
# 			l_cigar AS cigar, l_rnext AS rnext, l_pnext AS pnext, l_tlen AS tlen, l_seq AS seq, l_qual AS qual 
# 		FROM bam.paired_secondary_alignments_7 
# 		UNION ALL 
# 		SELECT r_virtual_offset AS virtual_offset, qname, r_flag AS flag, r_rname AS rname, r_pos AS pos, r_mapq AS mapq, 
# 			r_cigar AS cigar, r_rnext AS rnext, r_pnext AS pnext, r_tlen AS tlen, r_seq AS seq, r_qual AS qual 
# 		FROM bam.paired_secondary_alignments_7; 
# 	
# 	CREATE VIEW bam.unpaired_all_alignments_7 AS 
# 	SELECT * 
# 	FROM bam.unpaired_primary_alignments_7 
# 	UNION ALL 
# 	SELECT * 
# 	FROM bam.unpaired_secondary_alignments_7 
# 	UNION ALL 
# 	SELECT * 
# 	FROM bam.unpaired_alignments_7;
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/queryname/file2.sam'...
# # CREATE TABLE bam.paired_primary_alignments_8 ( 
# 		l_virtual_offset			  BIGINT	  NOT NULL, 
# 		r_virtual_offset			  BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		l_flag						SMALLINT	NOT NULL, 
# 		l_rname					   STRING	  NOT NULL, 
# 		l_pos						 INT		 NOT NULL, 
# 		l_mapq						SMALLINT	NOT NULL, 
# 		l_cigar					   STRING	  NOT NULL, 
# 		l_rnext					   STRING	  NOT NULL, 
# 		l_pnext					   INT		 NOT NULL, 
# 		l_tlen						INT		 NOT NULL, 
# 		l_seq						 STRING	  NOT NULL, 
# 		l_qual						STRING	  NOT NULL, 
# 		r_flag						SMALLINT	NOT NULL, 
# 		r_rname					   STRING	  NOT NULL, 
# 		r_pos						 INT		 NOT NULL, 
# 		r_mapq						SMALLINT	NOT NULL, 
# 		r_cigar					   STRING	  NOT NULL, 
# 		r_rnext					   STRING	  NOT NULL, 
# 		r_pnext					   INT		 NOT NULL, 
# 		r_tlen						INT		 NOT NULL, 
# 		r_seq						 STRING	  NOT NULL, 
# 		r_qual						STRING	  NOT NULL, 
# 		CONSTRAINT paired_primary_alignments_8_pkey_l_virtual_offset_r_virtual_offset 
# 			PRIMARY KEY (l_virtual_offset, r_virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.paired_secondary_alignments_8 ( 
# 		l_virtual_offset			  BIGINT	  NOT NULL, 
# 		r_virtual_offset			  BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		l_flag						SMALLINT	NOT NULL, 
# 		l_rname					   STRING	  NOT NULL, 
# 		l_pos						 INT		 NOT NULL, 
# 		l_mapq						SMALLINT	NOT NULL, 
# 		l_cigar					   STRING	  NOT NULL, 
# 		l_rnext					   STRING	  NOT NULL, 
# 		l_pnext					   INT		 NOT NULL, 
# 		l_tlen						INT		 NOT NULL, 
# 		l_seq						 STRING	  NOT NULL, 
# 		l_qual						STRING	  NOT NULL, 
# 		r_flag						SMALLINT	NOT NULL, 
# 		r_rname					   STRING	  NOT NULL, 
# 		r_pos						 INT		 NOT NULL, 
# 		r_mapq						SMALLINT	NOT NULL, 
# 		r_cigar					   STRING	  NOT NULL, 
# 		r_rnext					   STRING	  NOT NULL, 
# 		r_pnext					   INT		 NOT NULL, 
# 		r_tlen						INT		 NOT NULL, 
# 		r_seq						 STRING	  NOT NULL, 
# 		r_qual						STRING	  NOT NULL, 
# 		CONSTRAINT paired_secondary_alignments_8_pkey_l_virtual_offset_r_virtual_offset 
# 			PRIMARY KEY (l_virtual_offset, r_virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.unpaired_alignments_8 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT unpaired_alignments_8_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_8 ( 
# 	tag						   CHAR(2)	 NOT NULL, 
# 	virtual_offset				BIGINT	  NOT NULL, 
# 	type						  CHAR(1)	 NOT NULL, 
# 	value						 STRING, 
# 	CONSTRAINT alignments_extra_8_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset) 
# 	); 
# 	
# 	CREATE VIEW bam.unpaired_primary_alignments_8 AS 
# 		SELECT l_virtual_offset AS virtual_offset, qname, l_flag AS flag, l_rname AS rname, l_pos AS pos, l_mapq AS mapq, 
# 			l_cigar AS cigar, l_rnext AS rnext, l_pnext AS pnext, l_tlen AS tlen, l_seq AS seq, l_qual AS qual 
# 		FROM bam.paired_primary_alignments_8 
# 		UNION ALL 
# 		SELECT r_virtual_offset AS virtual_offset, qname, r_flag AS flag, r_rname AS rname, r_pos AS pos, r_mapq AS mapq, 
# 			r_cigar AS cigar, r_rnext AS rnext, r_pnext AS pnext, r_tlen AS tlen, r_seq AS seq, r_qual AS qual 
# 		FROM bam.paired_primary_alignments_8; 
# 	
# 	CREATE VIEW bam.unpaired_secondary_alignments_8 AS 
# 		SELECT l_virtual_offset AS virtual_offset, qname, l_flag AS flag, l_rname AS rname, l_pos AS pos, l_mapq AS mapq, 
# 			l_cigar AS cigar, l_rnext AS rnext, l_pnext AS pnext, l_tlen AS tlen, l_seq AS seq, l_qual AS qual 
# 		FROM bam.paired_secondary_alignments_8 
# 		UNION ALL 
# 		SELECT r_virtual_offset AS virtual_offset, qname, r_flag AS flag, r_rname AS rname, r_pos AS pos, r_mapq AS mapq, 
# 			r_cigar AS cigar, r_rnext AS rnext, r_pnext AS pnext, r_tlen AS tlen, r_seq AS seq, r_qual AS qual 
# 		FROM bam.paired_secondary_alignments_8; 
# 	
# 	CREATE VIEW bam.unpaired_all_alignments_8 AS 
# 	SELECT * 
# 	FROM bam.unpaired_primary_alignments_8 
# 	UNION ALL 
# 	SELECT * 
# 	FROM bam.unpaired_secondary_alignments_8 
# 	UNION ALL 
# 	SELECT * 
# 	FROM bam.unpaired_alignments_8;
# # <bam_loader> Creating reader threads...
# # <Thread 0> Starting on next file...
# # <Thread 0> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/queryname/file1.bam' (file id 7)...
# # <Thread 1> Starting on next file...
# # <bam_loader> Waiting for reader threads to finish...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/queryname/file2.sam' (file id 8)...
# # <Thread 2> Starting on next file...
# # <Thread 2> No files left to work on; thread done
# # <Thread 3> Starting on next file...
# # <Thread 3> No files left to work on; thread done
# # <Thread 0> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/queryname/file1.bam' (file id 7) processed!
# # <Thread 0> Starting on next file...
# # <Thread 0> No files left to work on; thread done
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/queryname/file2.sam' (file id 8) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> No files left to work on; thread done
# # <bam_loader> Copying data into DB...
# # COPY BINARY INTO bam.files FROM ('bam_binaries/7/files_0', 'bam_binaries/7/files_1', 'bam_binaries/7/files_2', 'bam_binaries/7/files_3', 'bam_binaries/7/files_4', 'bam_binaries/7/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/7/sq_0', 'bam_binaries/7/sq_1', 'bam_binaries/7/sq_2', 'bam_binaries/7/sq_3', 'bam_binaries/7/sq_4', 'bam_binaries/7/sq_5', 'bam_binaries/7/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/7/pg_0', 'bam_binaries/7/pg_1', 'bam_binaries/7/pg_2', 'bam_binaries/7/pg_3', 'bam_binaries/7/pg_4', 'bam_binaries/7/pg_5');
# COPY BINARY INTO bam.unpaired_alignments_7 FROM 	('bam_binaries/7/alignments_0', 'bam_binaries/7/alignments_1', 'bam_binaries/7/alignments_2', 'bam_binaries/7/alignments_3', 'bam_binaries/7/alignments_4', 'bam_binaries/7/alignments_5', 'bam_binaries/7/alignments_6', 'bam_binaries/7/alignments_7', 'bam_binaries/7/alignments_8', 'bam_binaries/7/alignments_9', 'bam_binaries/7/alignments_10', 'bam_binaries/7/alignments_11');
# COPY BINARY INTO bam.paired_primary_alignments_7 FROM 	('bam_binaries/7/alignments_paired_primary_0', 'bam_binaries/7/alignments_paired_primary_1', 'bam_binaries/7/alignments_paired_primary_2', 'bam_binaries/7/alignments_paired_primary_3', 'bam_binaries/7/alignments_paired_primary_4', 'bam_binaries/7/alignments_paired_primary_5', 'bam_binaries/7/alignments_paired_primary_6', 'bam_binaries/7/alignments_paired_primary_7', 'bam_binaries/7/alignments_paired_primary_8', 'bam_binaries/7/alignments_paired_primary_9', 'bam_binaries/7/alignments_paired_primary_10', 'bam_binaries/7/alignments_paired_primary_11', 	 'bam_binaries/7/alignments_paired_primary_12', 'bam_binaries/7/alignments_paired_primary_13', 'bam_binaries/7/alignments_paired_primary_14', 'bam_binaries/7/alignments_paired_primary_15', 'bam_binaries/7/alignments_paired_primary_16', 'bam_binaries/7/alignments_paired_primary_17', 'bam_binaries/7/alignments_paired_primary_18', 'bam_binaries/7/alignments_paired_primary_19', 'bam_binaries/7/alignments_paired_primary_20', 'bam_binaries/7/alignments_paired_primary_21', 'bam_binaries/7/alignments_paired_primary_22');
# COPY BINARY INTO bam.paired_secondary_alignments_7 FROM 	('bam_binaries/7/alignments_paired_secondary_0', 'bam_binaries/7/alignments_paired_secondary_1', 'bam_binaries/7/alignments_paired_secondary_2', 'bam_binaries/7/alignments_paired_secondary_3', 'bam_binaries/7/alignments_paired_secondary_4', 'bam_binaries/7/alignments_paired_secondary_5', 'bam_binaries/7/alignments_paired_secondary_6', 'bam_binaries/7/alignments_paired_secondary_7', 'bam_binaries/7/alignments_paired_secondary_8', 'bam_binaries/7/alignments_paired_secondary_9', 'bam_binaries/7/alignments_paired_secondary_10', 'bam_binaries/7/alignments_paired_secondary_11', 	 'bam_binaries/7/alignments_paired_secondary_12', 'bam_binaries/7/alignments_paired_secondary_13', 'bam_binaries/7/alignments_paired_secondary_14', 'bam_binaries/7/alignments_paired_secondary_15', 'bam_binaries/7/alignments_paired_secondary_16', 'bam_binaries/7/alignments_paired_secondary_17', 'bam_binaries/7/alignments_paired_secondary_18', 'bam_binaries/7/alignments_paired_secondary_19', 'bam_binaries/7/alignments_paired_secondary_20', 'bam_binaries/7/alignments_paired_secondary_21', 'bam_binaries/7/alignments_paired_secondary_22');
# COPY BINARY INTO bam.alignments_extra_7 FROM ('bam_binaries/7/alignments_extra_0', 'bam_binaries/7/alignments_extra_1', 'bam_binaries/7/alignments_extra_2', 'bam_binaries/7/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/8/files_0', 'bam_binaries/8/files_1', 'bam_binaries/8/files_2', 'bam_binaries/8/files_3', 'bam_binaries/8/files_4', 'bam_binaries/8/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/8/sq_0', 'bam_binaries/8/sq_1', 'bam_binaries/8/sq_2', 'bam_binaries/8/sq_3', 'bam_binaries/8/sq_4', 'bam_binaries/8/sq_5', 'bam_binaries/8/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/8/pg_0', 'bam_binaries/8/pg_1', 'bam_binaries/8/pg_2', 'bam_binaries/8/pg_3', 'bam_binaries/8/pg_4', 'bam_binaries/8/pg_5');
# COPY BINARY INTO bam.unpaired_alignments_8 FROM 	('bam_binaries/8/alignments_0', 'bam_binaries/8/alignments_1', 'bam_binaries/8/alignments_2', 'bam_binaries/8/alignments_3', 'bam_binaries/8/alignments_4', 'bam_binaries/8/alignments_5', 'bam_binaries/8/alignments_6', 'bam_binaries/8/alignments_7', 'bam_binaries/8/alignments_8', 'bam_binaries/8/alignments_9', 'bam_binaries/8/alignments_10', 'bam_binaries/8/alignments_11');
# COPY BINARY INTO bam.paired_primary_alignments_8 FROM 	('bam_binaries/8/alignments_paired_primary_0', 'bam_binaries/8/alignments_paired_primary_1', 'bam_binaries/8/alignments_paired_primary_2', 'bam_binaries/8/alignments_paired_primary_3', 'bam_binaries/8/alignments_paired_primary_4', 'bam_binaries/8/alignments_paired_primary_5', 'bam_binaries/8/alignments_paired_primary_6', 'bam_binaries/8/alignments_paired_primary_7', 'bam_binaries/8/alignments_paired_primary_8', 'bam_binaries/8/alignments_paired_primary_9', 'bam_binaries/8/alignments_paired_primary_10', 'bam_binaries/8/alignments_paired_primary_11', 	 'bam_binaries/8/alignments_paired_primary_12', 'bam_binaries/8/alignments_paired_primary_13', 'bam_binaries/8/alignments_paired_primary_14', 'bam_binaries/8/alignments_paired_primary_15', 'bam_binaries/8/alignments_paired_primary_16', 'bam_binaries/8/alignments_paired_primary_17', 'bam_binaries/8/alignments_paired_primary_18', 'bam_binaries/8/alignments_paired_primary_19', 'bam_binaries/8/alignments_paired_primary_20', 'bam_binaries/8/alignments_paired_primary_21', 'bam_binaries/8/alignments_paired_primary_22');
# COPY BINARY INTO bam.paired_secondary_alignments_8 FROM 	('bam_binaries/8/alignments_paired_secondary_0', 'bam_binaries/8/alignments_paired_secondary_1', 'bam_binaries/8/alignments_paired_secondary_2', 'bam_binaries/8/alignments_paired_secondary_3', 'bam_binaries/8/alignments_paired_secondary_4', 'bam_binaries/8/alignments_paired_secondary_5', 'bam_binaries/8/alignments_paired_secondary_6', 'bam_binaries/8/alignments_paired_secondary_7', 'bam_binaries/8/alignments_paired_secondary_8', 'bam_binaries/8/alignments_paired_secondary_9', 'bam_binaries/8/alignments_paired_secondary_10', 'bam_binaries/8/alignments_paired_secondary_11', 	 'bam_binaries/8/alignments_paired_secondary_12', 'bam_binaries/8/alignments_paired_secondary_13', 'bam_binaries/8/alignments_paired_secondary_14', 'bam_binaries/8/alignments_paired_secondary_15', 'bam_binaries/8/alignments_paired_secondary_16', 'bam_binaries/8/alignments_paired_secondary_17', 'bam_binaries/8/alignments_paired_secondary_18', 'bam_binaries/8/alignments_paired_secondary_19', 'bam_binaries/8/alignments_paired_secondary_20', 'bam_binaries/8/alignments_paired_secondary_21', 'bam_binaries/8/alignments_paired_secondary_22');
# COPY BINARY INTO bam.alignments_extra_8 FROM ('bam_binaries/8/alignments_extra_0', 'bam_binaries/8/alignments_extra_1', 'bam_binaries/8/alignments_extra_2', 'bam_binaries/8/alignments_extra_3');
# 
# # <bam_loader>: Loader finished processing 2 BAM files...
# # <bam_loader>: Loader started for 60 BAM files...
# # <bam_loader> Retrieving next file id...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Initializing BAM wrapper for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # <bam_loader> Parsing header for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_9 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_9_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_9 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_9_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_9_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_9 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_10 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_10_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_10 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_10_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_10_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_10 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_11 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_11_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_11 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_11_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_11_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_11 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_12 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_12_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_12 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_12_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_12_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_12 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_13 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_13_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_13 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_13_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_13_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_13 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_14 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_14_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_14 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_14_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_14_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_14 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_15 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_15_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_15 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_15_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_15_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_15 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_16 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_16_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_16 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_16_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_16_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_16 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_17 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_17_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_17 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_17_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_17_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_17 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_18 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_18_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_18 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_18_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_18_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_18 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_19 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_19_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_19 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_19_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_19_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_19 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_20 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_20_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_20 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_20_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_20_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_20 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_21 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_21_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_21 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_21_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_21_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_21 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_22 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_22_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_22 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_22_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_22_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_22 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_23 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_23_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_23 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_23_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_23_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_23 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_24 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_24_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_24 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_24_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_24_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_24 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_25 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_25_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_25 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_25_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_25_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_25 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_26 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_26_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_26 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_26_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_26_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_26 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_27 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_27_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_27 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_27_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_27_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_27 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_28 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_28_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_28 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_28_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_28_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_28 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_29 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_29_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_29 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_29_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_29_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_29 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_30 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_30_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_30 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_30_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_30_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_30 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_31 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_31_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_31 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_31_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_31_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_31 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_32 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_32_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_32 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_32_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_32_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_32 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_33 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_33_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_33 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_33_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_33_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_33 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_34 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_34_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_34 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_34_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_34_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_34 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_35 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_35_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_35 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_35_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_35_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_35 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_36 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_36_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_36 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_36_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_36_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_36 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_37 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_37_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_37 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_37_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_37_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_37 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_38 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_38_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_38 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_38_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_38_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_38 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_39 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_39_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_39 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_39_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_39_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_39 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_40 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_40_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_40 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_40_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_40_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_40 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_41 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_41_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_41 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_41_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_41_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_41 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_42 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_42_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_42 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_42_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_42_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_42 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_43 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_43_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_43 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_43_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_43_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_43 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_44 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_44_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_44 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_44_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_44_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_44 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_45 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_45_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_45 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_45_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_45_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_45 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_46 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_46_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_46 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_46_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_46_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_46 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_47 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_47_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_47 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_47_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_47_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_47 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_48 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_48_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_48 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_48_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_48_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_48 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_49 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_49_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_49 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_49_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_49_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_49 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_50 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_50_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_50 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_50_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_50_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_50 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_51 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_51_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_51 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_51_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_51_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_51 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_52 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_52_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_52 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_52_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_52_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_52 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_53 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_53_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_53 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_53_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_53_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_53 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_54 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_54_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_54 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_54_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_54_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_54 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_55 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_55_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_55 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_55_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_55_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_55 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_56 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_56_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_56 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_56_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_56_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_56 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_57 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_57_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_57 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_57_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_57_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_57 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_58 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_58_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_58 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_58_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_58_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_58 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_59 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_59_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_59 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_59_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_59_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_59 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_60 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_60_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_60 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_60_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_60_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_60 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_61 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_61_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_61 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_61_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_61_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_61 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_62 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_62_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_62 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_62_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_62_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_62 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_63 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_63_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_63 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_63_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_63_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_63 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_64 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_64_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_64 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_64_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_64_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_64 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_65 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_65_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_65 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_65_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_65_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_65 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_66 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_66_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_66 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_66_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_66_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_66 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam'...
# # CREATE TABLE bam.alignments_67 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_67_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_67 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_67_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_67_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_67 (virtual_offset) 
# 	);
# # <bam_loader> Creating alignment tables for file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam'...
# # CREATE TABLE bam.alignments_68 ( 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		qname						 STRING	  NOT NULL, 
# 		flag						  SMALLINT	NOT NULL, 
# 		rname						 STRING	  NOT NULL, 
# 		pos						   INT		 NOT NULL, 
# 		mapq						  SMALLINT	NOT NULL, 
# 		cigar						 STRING	  NOT NULL, 
# 		rnext						 STRING	  NOT NULL, 
# 		pnext						 INT		 NOT NULL, 
# 		tlen						  INT		 NOT NULL, 
# 		seq						   STRING	  NOT NULL, 
# 		qual						  STRING	  NOT NULL, 
# 		CONSTRAINT alignments_68_pkey_virtual_offset PRIMARY KEY (virtual_offset) 
# 	); 
# 	
# 	CREATE TABLE bam.alignments_extra_68 ( 
# 		tag						   CHAR(2)	 NOT NULL, 
# 		virtual_offset				BIGINT	  NOT NULL, 
# 		type						  CHAR(1)	 NOT NULL, 
# 		value						 STRING, 
# 		CONSTRAINT alignments_extra_68_pkey_tag_virtual_offset PRIMARY KEY (tag, virtual_offset), 
# 		CONSTRAINT alignments_extra_68_fkey_virtual_offset FOREIGN KEY (virtual_offset) 
# 			REFERENCES bam.alignments_68 (virtual_offset) 
# 	);
# # <bam_loader> Creating reader threads...
# # <Thread 1> Starting on next file...
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 10)...
# # <Thread 2> Starting on next file...
# # <Thread 2> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 11)...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 9)...
# # <bam_loader> Waiting for reader threads to finish...
# # <Thread 0> Starting on next file...
# # <Thread 0> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 12)...
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 9) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 13)...
# # <Thread 2> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 11) processed!
# # <Thread 2> Starting on next file...
# # <Thread 2> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 14)...
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 13) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 15)...
# # <Thread 0> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 12) processed!
# # <Thread 0> Starting on next file...
# # <Thread 0> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 16)...
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 15) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 17)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 10) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 18)...
# # <Thread 0> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 16) processed!
# # <Thread 2> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 14) processed!
# # <Thread 0> Starting on next file...
# # <Thread 0> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 19)...
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 17) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 20)...
# # <Thread 2> Starting on next file...
# # <Thread 2> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 21)...
# # <Thread 0> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 19) processed!
# # <Thread 0> Starting on next file...
# # <Thread 0> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 22)...
# # <Thread 2> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 21) processed!
# # <Thread 2> Starting on next file...
# # <Thread 2> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 23)...
# # <Thread 2> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 23) processed!
# # <Thread 2> Starting on next file...
# # <Thread 2> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 24)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 18) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 25)...
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 20) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 26)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 25) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 27)...
# # <Thread 0> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 22) processed!
# # <Thread 0> Starting on next file...
# # <Thread 0> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 28)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 27) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 29)...
# # <Thread 2> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 24) processed!
# # <Thread 2> Starting on next file...
# # <Thread 2> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 30)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 29) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 31)...
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 26) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 32)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 31) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 33)...
# # <Thread 0> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 28) processed!
# # <Thread 0> Starting on next file...
# # <Thread 0> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 34)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 33) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 35)...
# # <Thread 2> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 30) processed!
# # <Thread 2> Starting on next file...
# # <Thread 2> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 36)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 35) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 37)...
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 32) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 38)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 37) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 39)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 39) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 40)...
# # <Thread 0> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 34) processed!
# # <Thread 0> Starting on next file...
# # <Thread 0> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 41)...
# # <Thread 2> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 36) processed!
# # <Thread 2> Starting on next file...
# # <Thread 2> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 42)...
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 38) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 43)...
# # <Thread 0> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 41) processed!
# # <Thread 0> Starting on next file...
# # <Thread 0> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 44)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 40) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 45)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 45) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 46)...
# # <Thread 2> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 42) processed!
# # <Thread 2> Starting on next file...
# # <Thread 2> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 47)...
# # <Thread 2> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 47) processed!
# # <Thread 2> Starting on next file...
# # <Thread 2> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 48)...
# # <Thread 0> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 44) processed!
# # <Thread 0> Starting on next file...
# # <Thread 0> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 49)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 46) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 50)...
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 43) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 51)...
# # <Thread 0> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 49) processed!
# # <Thread 0> Starting on next file...
# # <Thread 0> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 52)...
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 51) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 53)...
# # <Thread 2> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 48) processed!
# # <Thread 2> Starting on next file...
# # <Thread 2> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 54)...
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 53) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 55)...
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 55) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 56)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 50) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 57)...
# # <Thread 0> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 52) processed!
# # <Thread 0> Starting on next file...
# # <Thread 0> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 58)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 57) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 59)...
# # <Thread 2> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 54) processed!
# # <Thread 2> Starting on next file...
# # <Thread 2> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 60)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 59) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 61)...
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 56) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 62)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 61) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 63)...
# # <Thread 0> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 58) processed!
# # <Thread 0> Starting on next file...
# # <Thread 0> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 64)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 63) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 65)...
# # <Thread 2> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 60) processed!
# # <Thread 2> Starting on next file...
# # <Thread 2> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 66)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 65) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 67)...
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file1.bam' (file id 67) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> Processing alignments of file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 68)...
# # <Thread 1> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 62) processed!
# # <Thread 1> Starting on next file...
# # <Thread 1> No files left to work on; thread done
# # <Thread 0> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 64) processed!
# # <Thread 0> Starting on next file...
# # <Thread 0> No files left to work on; thread done
# # <Thread 2> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 66) processed!
# # <Thread 2> Starting on next file...
# # <Thread 2> No files left to work on; thread done
# # <Thread 3> All alignments in file '/home/robin/MonetDB/SOURCE/sql/backends/monet5/vaults/bam/Tests/files/file2.sam' (file id 68) processed!
# # <Thread 3> Starting on next file...
# # <Thread 3> No files left to work on; thread done
# # <bam_loader> Copying data into DB...
# # COPY BINARY INTO bam.files FROM ('bam_binaries/9/files_0', 'bam_binaries/9/files_1', 'bam_binaries/9/files_2', 'bam_binaries/9/files_3', 'bam_binaries/9/files_4', 'bam_binaries/9/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/9/sq_0', 'bam_binaries/9/sq_1', 'bam_binaries/9/sq_2', 'bam_binaries/9/sq_3', 'bam_binaries/9/sq_4', 'bam_binaries/9/sq_5', 'bam_binaries/9/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/9/pg_0', 'bam_binaries/9/pg_1', 'bam_binaries/9/pg_2', 'bam_binaries/9/pg_3', 'bam_binaries/9/pg_4', 'bam_binaries/9/pg_5');
# COPY BINARY INTO bam.alignments_9 FROM 	('bam_binaries/9/alignments_0', 'bam_binaries/9/alignments_1', 'bam_binaries/9/alignments_2', 'bam_binaries/9/alignments_3', 'bam_binaries/9/alignments_4', 'bam_binaries/9/alignments_5', 'bam_binaries/9/alignments_6', 'bam_binaries/9/alignments_7', 'bam_binaries/9/alignments_8', 'bam_binaries/9/alignments_9', 'bam_binaries/9/alignments_10', 'bam_binaries/9/alignments_11');
# COPY BINARY INTO bam.alignments_extra_9 FROM ('bam_binaries/9/alignments_extra_0', 'bam_binaries/9/alignments_extra_1', 'bam_binaries/9/alignments_extra_2', 'bam_binaries/9/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/10/files_0', 'bam_binaries/10/files_1', 'bam_binaries/10/files_2', 'bam_binaries/10/files_3', 'bam_binaries/10/files_4', 'bam_binaries/10/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/10/sq_0', 'bam_binaries/10/sq_1', 'bam_binaries/10/sq_2', 'bam_binaries/10/sq_3', 'bam_binaries/10/sq_4', 'bam_binaries/10/sq_5', 'bam_binaries/10/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/10/pg_0', 'bam_binaries/10/pg_1', 'bam_binaries/10/pg_2', 'bam_binaries/10/pg_3', 'bam_binaries/10/pg_4', 'bam_binaries/10/pg_5');
# COPY BINARY INTO bam.alignments_10 FROM 	('bam_binaries/10/alignments_0', 'bam_binaries/10/alignments_1', 'bam_binaries/10/alignments_2', 'bam_binaries/10/alignments_3', 'bam_binaries/10/alignments_4', 'bam_binaries/10/alignments_5', 'bam_binaries/10/alignments_6', 'bam_binaries/10/alignments_7', 'bam_binaries/10/alignments_8', 'bam_binaries/10/alignments_9', 'bam_binaries/10/alignments_10', 'bam_binaries/10/alignments_11');
# COPY BINARY INTO bam.alignments_extra_10 FROM ('bam_binaries/10/alignments_extra_0', 'bam_binaries/10/alignments_extra_1', 'bam_binaries/10/alignments_extra_2', 'bam_binaries/10/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/11/files_0', 'bam_binaries/11/files_1', 'bam_binaries/11/files_2', 'bam_binaries/11/files_3', 'bam_binaries/11/files_4', 'bam_binaries/11/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/11/sq_0', 'bam_binaries/11/sq_1', 'bam_binaries/11/sq_2', 'bam_binaries/11/sq_3', 'bam_binaries/11/sq_4', 'bam_binaries/11/sq_5', 'bam_binaries/11/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/11/pg_0', 'bam_binaries/11/pg_1', 'bam_binaries/11/pg_2', 'bam_binaries/11/pg_3', 'bam_binaries/11/pg_4', 'bam_binaries/11/pg_5');
# COPY BINARY INTO bam.alignments_11 FROM 	('bam_binaries/11/alignments_0', 'bam_binaries/11/alignments_1', 'bam_binaries/11/alignments_2', 'bam_binaries/11/alignments_3', 'bam_binaries/11/alignments_4', 'bam_binaries/11/alignments_5', 'bam_binaries/11/alignments_6', 'bam_binaries/11/alignments_7', 'bam_binaries/11/alignments_8', 'bam_binaries/11/alignments_9', 'bam_binaries/11/alignments_10', 'bam_binaries/11/alignments_11');
# COPY BINARY INTO bam.alignments_extra_11 FROM ('bam_binaries/11/alignments_extra_0', 'bam_binaries/11/alignments_extra_1', 'bam_binaries/11/alignments_extra_2', 'bam_binaries/11/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/12/files_0', 'bam_binaries/12/files_1', 'bam_binaries/12/files_2', 'bam_binaries/12/files_3', 'bam_binaries/12/files_4', 'bam_binaries/12/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/12/sq_0', 'bam_binaries/12/sq_1', 'bam_binaries/12/sq_2', 'bam_binaries/12/sq_3', 'bam_binaries/12/sq_4', 'bam_binaries/12/sq_5', 'bam_binaries/12/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/12/pg_0', 'bam_binaries/12/pg_1', 'bam_binaries/12/pg_2', 'bam_binaries/12/pg_3', 'bam_binaries/12/pg_4', 'bam_binaries/12/pg_5');
# COPY BINARY INTO bam.alignments_12 FROM 	('bam_binaries/12/alignments_0', 'bam_binaries/12/alignments_1', 'bam_binaries/12/alignments_2', 'bam_binaries/12/alignments_3', 'bam_binaries/12/alignments_4', 'bam_binaries/12/alignments_5', 'bam_binaries/12/alignments_6', 'bam_binaries/12/alignments_7', 'bam_binaries/12/alignments_8', 'bam_binaries/12/alignments_9', 'bam_binaries/12/alignments_10', 'bam_binaries/12/alignments_11');
# COPY BINARY INTO bam.alignments_extra_12 FROM ('bam_binaries/12/alignments_extra_0', 'bam_binaries/12/alignments_extra_1', 'bam_binaries/12/alignments_extra_2', 'bam_binaries/12/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/13/files_0', 'bam_binaries/13/files_1', 'bam_binaries/13/files_2', 'bam_binaries/13/files_3', 'bam_binaries/13/files_4', 'bam_binaries/13/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/13/sq_0', 'bam_binaries/13/sq_1', 'bam_binaries/13/sq_2', 'bam_binaries/13/sq_3', 'bam_binaries/13/sq_4', 'bam_binaries/13/sq_5', 'bam_binaries/13/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/13/pg_0', 'bam_binaries/13/pg_1', 'bam_binaries/13/pg_2', 'bam_binaries/13/pg_3', 'bam_binaries/13/pg_4', 'bam_binaries/13/pg_5');
# COPY BINARY INTO bam.alignments_13 FROM 	('bam_binaries/13/alignments_0', 'bam_binaries/13/alignments_1', 'bam_binaries/13/alignments_2', 'bam_binaries/13/alignments_3', 'bam_binaries/13/alignments_4', 'bam_binaries/13/alignments_5', 'bam_binaries/13/alignments_6', 'bam_binaries/13/alignments_7', 'bam_binaries/13/alignments_8', 'bam_binaries/13/alignments_9', 'bam_binaries/13/alignments_10', 'bam_binaries/13/alignments_11');
# COPY BINARY INTO bam.alignments_extra_13 FROM ('bam_binaries/13/alignments_extra_0', 'bam_binaries/13/alignments_extra_1', 'bam_binaries/13/alignments_extra_2', 'bam_binaries/13/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/14/files_0', 'bam_binaries/14/files_1', 'bam_binaries/14/files_2', 'bam_binaries/14/files_3', 'bam_binaries/14/files_4', 'bam_binaries/14/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/14/sq_0', 'bam_binaries/14/sq_1', 'bam_binaries/14/sq_2', 'bam_binaries/14/sq_3', 'bam_binaries/14/sq_4', 'bam_binaries/14/sq_5', 'bam_binaries/14/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/14/pg_0', 'bam_binaries/14/pg_1', 'bam_binaries/14/pg_2', 'bam_binaries/14/pg_3', 'bam_binaries/14/pg_4', 'bam_binaries/14/pg_5');
# COPY BINARY INTO bam.alignments_14 FROM 	('bam_binaries/14/alignments_0', 'bam_binaries/14/alignments_1', 'bam_binaries/14/alignments_2', 'bam_binaries/14/alignments_3', 'bam_binaries/14/alignments_4', 'bam_binaries/14/alignments_5', 'bam_binaries/14/alignments_6', 'bam_binaries/14/alignments_7', 'bam_binaries/14/alignments_8', 'bam_binaries/14/alignments_9', 'bam_binaries/14/alignments_10', 'bam_binaries/14/alignments_11');
# COPY BINARY INTO bam.alignments_extra_14 FROM ('bam_binaries/14/alignments_extra_0', 'bam_binaries/14/alignments_extra_1', 'bam_binaries/14/alignments_extra_2', 'bam_binaries/14/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/15/files_0', 'bam_binaries/15/files_1', 'bam_binaries/15/files_2', 'bam_binaries/15/files_3', 'bam_binaries/15/files_4', 'bam_binaries/15/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/15/sq_0', 'bam_binaries/15/sq_1', 'bam_binaries/15/sq_2', 'bam_binaries/15/sq_3', 'bam_binaries/15/sq_4', 'bam_binaries/15/sq_5', 'bam_binaries/15/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/15/pg_0', 'bam_binaries/15/pg_1', 'bam_binaries/15/pg_2', 'bam_binaries/15/pg_3', 'bam_binaries/15/pg_4', 'bam_binaries/15/pg_5');
# COPY BINARY INTO bam.alignments_15 FROM 	('bam_binaries/15/alignments_0', 'bam_binaries/15/alignments_1', 'bam_binaries/15/alignments_2', 'bam_binaries/15/alignments_3', 'bam_binaries/15/alignments_4', 'bam_binaries/15/alignments_5', 'bam_binaries/15/alignments_6', 'bam_binaries/15/alignments_7', 'bam_binaries/15/alignments_8', 'bam_binaries/15/alignments_9', 'bam_binaries/15/alignments_10', 'bam_binaries/15/alignments_11');
# COPY BINARY INTO bam.alignments_extra_15 FROM ('bam_binaries/15/alignments_extra_0', 'bam_binaries/15/alignments_extra_1', 'bam_binaries/15/alignments_extra_2', 'bam_binaries/15/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/16/files_0', 'bam_binaries/16/files_1', 'bam_binaries/16/files_2', 'bam_binaries/16/files_3', 'bam_binaries/16/files_4', 'bam_binaries/16/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/16/sq_0', 'bam_binaries/16/sq_1', 'bam_binaries/16/sq_2', 'bam_binaries/16/sq_3', 'bam_binaries/16/sq_4', 'bam_binaries/16/sq_5', 'bam_binaries/16/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/16/pg_0', 'bam_binaries/16/pg_1', 'bam_binaries/16/pg_2', 'bam_binaries/16/pg_3', 'bam_binaries/16/pg_4', 'bam_binaries/16/pg_5');
# COPY BINARY INTO bam.alignments_16 FROM 	('bam_binaries/16/alignments_0', 'bam_binaries/16/alignments_1', 'bam_binaries/16/alignments_2', 'bam_binaries/16/alignments_3', 'bam_binaries/16/alignments_4', 'bam_binaries/16/alignments_5', 'bam_binaries/16/alignments_6', 'bam_binaries/16/alignments_7', 'bam_binaries/16/alignments_8', 'bam_binaries/16/alignments_9', 'bam_binaries/16/alignments_10', 'bam_binaries/16/alignments_11');
# COPY BINARY INTO bam.alignments_extra_16 FROM ('bam_binaries/16/alignments_extra_0', 'bam_binaries/16/alignments_extra_1', 'bam_binaries/16/alignments_extra_2', 'bam_binaries/16/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/17/files_0', 'bam_binaries/17/files_1', 'bam_binaries/17/files_2', 'bam_binaries/17/files_3', 'bam_binaries/17/files_4', 'bam_binaries/17/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/17/sq_0', 'bam_binaries/17/sq_1', 'bam_binaries/17/sq_2', 'bam_binaries/17/sq_3', 'bam_binaries/17/sq_4', 'bam_binaries/17/sq_5', 'bam_binaries/17/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/17/pg_0', 'bam_binaries/17/pg_1', 'bam_binaries/17/pg_2', 'bam_binaries/17/pg_3', 'bam_binaries/17/pg_4', 'bam_binaries/17/pg_5');
# COPY BINARY INTO bam.alignments_17 FROM 	('bam_binaries/17/alignments_0', 'bam_binaries/17/alignments_1', 'bam_binaries/17/alignments_2', 'bam_binaries/17/alignments_3', 'bam_binaries/17/alignments_4', 'bam_binaries/17/alignments_5', 'bam_binaries/17/alignments_6', 'bam_binaries/17/alignments_7', 'bam_binaries/17/alignments_8', 'bam_binaries/17/alignments_9', 'bam_binaries/17/alignments_10', 'bam_binaries/17/alignments_11');
# COPY BINARY INTO bam.alignments_extra_17 FROM ('bam_binaries/17/alignments_extra_0', 'bam_binaries/17/alignments_extra_1', 'bam_binaries/17/alignments_extra_2', 'bam_binaries/17/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/18/files_0', 'bam_binaries/18/files_1', 'bam_binaries/18/files_2', 'bam_binaries/18/files_3', 'bam_binaries/18/files_4', 'bam_binaries/18/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/18/sq_0', 'bam_binaries/18/sq_1', 'bam_binaries/18/sq_2', 'bam_binaries/18/sq_3', 'bam_binaries/18/sq_4', 'bam_binaries/18/sq_5', 'bam_binaries/18/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/18/pg_0', 'bam_binaries/18/pg_1', 'bam_binaries/18/pg_2', 'bam_binaries/18/pg_3', 'bam_binaries/18/pg_4', 'bam_binaries/18/pg_5');
# COPY BINARY INTO bam.alignments_18 FROM 	('bam_binaries/18/alignments_0', 'bam_binaries/18/alignments_1', 'bam_binaries/18/alignments_2', 'bam_binaries/18/alignments_3', 'bam_binaries/18/alignments_4', 'bam_binaries/18/alignments_5', 'bam_binaries/18/alignments_6', 'bam_binaries/18/alignments_7', 'bam_binaries/18/alignments_8', 'bam_binaries/18/alignments_9', 'bam_binaries/18/alignments_10', 'bam_binaries/18/alignments_11');
# COPY BINARY INTO bam.alignments_extra_18 FROM ('bam_binaries/18/alignments_extra_0', 'bam_binaries/18/alignments_extra_1', 'bam_binaries/18/alignments_extra_2', 'bam_binaries/18/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/19/files_0', 'bam_binaries/19/files_1', 'bam_binaries/19/files_2', 'bam_binaries/19/files_3', 'bam_binaries/19/files_4', 'bam_binaries/19/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/19/sq_0', 'bam_binaries/19/sq_1', 'bam_binaries/19/sq_2', 'bam_binaries/19/sq_3', 'bam_binaries/19/sq_4', 'bam_binaries/19/sq_5', 'bam_binaries/19/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/19/pg_0', 'bam_binaries/19/pg_1', 'bam_binaries/19/pg_2', 'bam_binaries/19/pg_3', 'bam_binaries/19/pg_4', 'bam_binaries/19/pg_5');
# COPY BINARY INTO bam.alignments_19 FROM 	('bam_binaries/19/alignments_0', 'bam_binaries/19/alignments_1', 'bam_binaries/19/alignments_2', 'bam_binaries/19/alignments_3', 'bam_binaries/19/alignments_4', 'bam_binaries/19/alignments_5', 'bam_binaries/19/alignments_6', 'bam_binaries/19/alignments_7', 'bam_binaries/19/alignments_8', 'bam_binaries/19/alignments_9', 'bam_binaries/19/alignments_10', 'bam_binaries/19/alignments_11');
# COPY BINARY INTO bam.alignments_extra_19 FROM ('bam_binaries/19/alignments_extra_0', 'bam_binaries/19/alignments_extra_1', 'bam_binaries/19/alignments_extra_2', 'bam_binaries/19/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/20/files_0', 'bam_binaries/20/files_1', 'bam_binaries/20/files_2', 'bam_binaries/20/files_3', 'bam_binaries/20/files_4', 'bam_binaries/20/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/20/sq_0', 'bam_binaries/20/sq_1', 'bam_binaries/20/sq_2', 'bam_binaries/20/sq_3', 'bam_binaries/20/sq_4', 'bam_binaries/20/sq_5', 'bam_binaries/20/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/20/pg_0', 'bam_binaries/20/pg_1', 'bam_binaries/20/pg_2', 'bam_binaries/20/pg_3', 'bam_binaries/20/pg_4', 'bam_binaries/20/pg_5');
# COPY BINARY INTO bam.alignments_20 FROM 	('bam_binaries/20/alignments_0', 'bam_binaries/20/alignments_1', 'bam_binaries/20/alignments_2', 'bam_binaries/20/alignments_3', 'bam_binaries/20/alignments_4', 'bam_binaries/20/alignments_5', 'bam_binaries/20/alignments_6', 'bam_binaries/20/alignments_7', 'bam_binaries/20/alignments_8', 'bam_binaries/20/alignments_9', 'bam_binaries/20/alignments_10', 'bam_binaries/20/alignments_11');
# COPY BINARY INTO bam.alignments_extra_20 FROM ('bam_binaries/20/alignments_extra_0', 'bam_binaries/20/alignments_extra_1', 'bam_binaries/20/alignments_extra_2', 'bam_binaries/20/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/21/files_0', 'bam_binaries/21/files_1', 'bam_binaries/21/files_2', 'bam_binaries/21/files_3', 'bam_binaries/21/files_4', 'bam_binaries/21/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/21/sq_0', 'bam_binaries/21/sq_1', 'bam_binaries/21/sq_2', 'bam_binaries/21/sq_3', 'bam_binaries/21/sq_4', 'bam_binaries/21/sq_5', 'bam_binaries/21/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/21/pg_0', 'bam_binaries/21/pg_1', 'bam_binaries/21/pg_2', 'bam_binaries/21/pg_3', 'bam_binaries/21/pg_4', 'bam_binaries/21/pg_5');
# COPY BINARY INTO bam.alignments_21 FROM 	('bam_binaries/21/alignments_0', 'bam_binaries/21/alignments_1', 'bam_binaries/21/alignments_2', 'bam_binaries/21/alignments_3', 'bam_binaries/21/alignments_4', 'bam_binaries/21/alignments_5', 'bam_binaries/21/alignments_6', 'bam_binaries/21/alignments_7', 'bam_binaries/21/alignments_8', 'bam_binaries/21/alignments_9', 'bam_binaries/21/alignments_10', 'bam_binaries/21/alignments_11');
# COPY BINARY INTO bam.alignments_extra_21 FROM ('bam_binaries/21/alignments_extra_0', 'bam_binaries/21/alignments_extra_1', 'bam_binaries/21/alignments_extra_2', 'bam_binaries/21/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/22/files_0', 'bam_binaries/22/files_1', 'bam_binaries/22/files_2', 'bam_binaries/22/files_3', 'bam_binaries/22/files_4', 'bam_binaries/22/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/22/sq_0', 'bam_binaries/22/sq_1', 'bam_binaries/22/sq_2', 'bam_binaries/22/sq_3', 'bam_binaries/22/sq_4', 'bam_binaries/22/sq_5', 'bam_binaries/22/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/22/pg_0', 'bam_binaries/22/pg_1', 'bam_binaries/22/pg_2', 'bam_binaries/22/pg_3', 'bam_binaries/22/pg_4', 'bam_binaries/22/pg_5');
# COPY BINARY INTO bam.alignments_22 FROM 	('bam_binaries/22/alignments_0', 'bam_binaries/22/alignments_1', 'bam_binaries/22/alignments_2', 'bam_binaries/22/alignments_3', 'bam_binaries/22/alignments_4', 'bam_binaries/22/alignments_5', 'bam_binaries/22/alignments_6', 'bam_binaries/22/alignments_7', 'bam_binaries/22/alignments_8', 'bam_binaries/22/alignments_9', 'bam_binaries/22/alignments_10', 'bam_binaries/22/alignments_11');
# COPY BINARY INTO bam.alignments_extra_22 FROM ('bam_binaries/22/alignments_extra_0', 'bam_binaries/22/alignments_extra_1', 'bam_binaries/22/alignments_extra_2', 'bam_binaries/22/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/23/files_0', 'bam_binaries/23/files_1', 'bam_binaries/23/files_2', 'bam_binaries/23/files_3', 'bam_binaries/23/files_4', 'bam_binaries/23/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/23/sq_0', 'bam_binaries/23/sq_1', 'bam_binaries/23/sq_2', 'bam_binaries/23/sq_3', 'bam_binaries/23/sq_4', 'bam_binaries/23/sq_5', 'bam_binaries/23/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/23/pg_0', 'bam_binaries/23/pg_1', 'bam_binaries/23/pg_2', 'bam_binaries/23/pg_3', 'bam_binaries/23/pg_4', 'bam_binaries/23/pg_5');
# COPY BINARY INTO bam.alignments_23 FROM 	('bam_binaries/23/alignments_0', 'bam_binaries/23/alignments_1', 'bam_binaries/23/alignments_2', 'bam_binaries/23/alignments_3', 'bam_binaries/23/alignments_4', 'bam_binaries/23/alignments_5', 'bam_binaries/23/alignments_6', 'bam_binaries/23/alignments_7', 'bam_binaries/23/alignments_8', 'bam_binaries/23/alignments_9', 'bam_binaries/23/alignments_10', 'bam_binaries/23/alignments_11');
# COPY BINARY INTO bam.alignments_extra_23 FROM ('bam_binaries/23/alignments_extra_0', 'bam_binaries/23/alignments_extra_1', 'bam_binaries/23/alignments_extra_2', 'bam_binaries/23/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/24/files_0', 'bam_binaries/24/files_1', 'bam_binaries/24/files_2', 'bam_binaries/24/files_3', 'bam_binaries/24/files_4', 'bam_binaries/24/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/24/sq_0', 'bam_binaries/24/sq_1', 'bam_binaries/24/sq_2', 'bam_binaries/24/sq_3', 'bam_binaries/24/sq_4', 'bam_binaries/24/sq_5', 'bam_binaries/24/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/24/pg_0', 'bam_binaries/24/pg_1', 'bam_binaries/24/pg_2', 'bam_binaries/24/pg_3', 'bam_binaries/24/pg_4', 'bam_binaries/24/pg_5');
# COPY BINARY INTO bam.alignments_24 FROM 	('bam_binaries/24/alignments_0', 'bam_binaries/24/alignments_1', 'bam_binaries/24/alignments_2', 'bam_binaries/24/alignments_3', 'bam_binaries/24/alignments_4', 'bam_binaries/24/alignments_5', 'bam_binaries/24/alignments_6', 'bam_binaries/24/alignments_7', 'bam_binaries/24/alignments_8', 'bam_binaries/24/alignments_9', 'bam_binaries/24/alignments_10', 'bam_binaries/24/alignments_11');
# COPY BINARY INTO bam.alignments_extra_24 FROM ('bam_binaries/24/alignments_extra_0', 'bam_binaries/24/alignments_extra_1', 'bam_binaries/24/alignments_extra_2', 'bam_binaries/24/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/25/files_0', 'bam_binaries/25/files_1', 'bam_binaries/25/files_2', 'bam_binaries/25/files_3', 'bam_binaries/25/files_4', 'bam_binaries/25/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/25/sq_0', 'bam_binaries/25/sq_1', 'bam_binaries/25/sq_2', 'bam_binaries/25/sq_3', 'bam_binaries/25/sq_4', 'bam_binaries/25/sq_5', 'bam_binaries/25/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/25/pg_0', 'bam_binaries/25/pg_1', 'bam_binaries/25/pg_2', 'bam_binaries/25/pg_3', 'bam_binaries/25/pg_4', 'bam_binaries/25/pg_5');
# COPY BINARY INTO bam.alignments_25 FROM 	('bam_binaries/25/alignments_0', 'bam_binaries/25/alignments_1', 'bam_binaries/25/alignments_2', 'bam_binaries/25/alignments_3', 'bam_binaries/25/alignments_4', 'bam_binaries/25/alignments_5', 'bam_binaries/25/alignments_6', 'bam_binaries/25/alignments_7', 'bam_binaries/25/alignments_8', 'bam_binaries/25/alignments_9', 'bam_binaries/25/alignments_10', 'bam_binaries/25/alignments_11');
# COPY BINARY INTO bam.alignments_extra_25 FROM ('bam_binaries/25/alignments_extra_0', 'bam_binaries/25/alignments_extra_1', 'bam_binaries/25/alignments_extra_2', 'bam_binaries/25/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/26/files_0', 'bam_binaries/26/files_1', 'bam_binaries/26/files_2', 'bam_binaries/26/files_3', 'bam_binaries/26/files_4', 'bam_binaries/26/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/26/sq_0', 'bam_binaries/26/sq_1', 'bam_binaries/26/sq_2', 'bam_binaries/26/sq_3', 'bam_binaries/26/sq_4', 'bam_binaries/26/sq_5', 'bam_binaries/26/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/26/pg_0', 'bam_binaries/26/pg_1', 'bam_binaries/26/pg_2', 'bam_binaries/26/pg_3', 'bam_binaries/26/pg_4', 'bam_binaries/26/pg_5');
# COPY BINARY INTO bam.alignments_26 FROM 	('bam_binaries/26/alignments_0', 'bam_binaries/26/alignments_1', 'bam_binaries/26/alignments_2', 'bam_binaries/26/alignments_3', 'bam_binaries/26/alignments_4', 'bam_binaries/26/alignments_5', 'bam_binaries/26/alignments_6', 'bam_binaries/26/alignments_7', 'bam_binaries/26/alignments_8', 'bam_binaries/26/alignments_9', 'bam_binaries/26/alignments_10', 'bam_binaries/26/alignments_11');
# COPY BINARY INTO bam.alignments_extra_26 FROM ('bam_binaries/26/alignments_extra_0', 'bam_binaries/26/alignments_extra_1', 'bam_binaries/26/alignments_extra_2', 'bam_binaries/26/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/27/files_0', 'bam_binaries/27/files_1', 'bam_binaries/27/files_2', 'bam_binaries/27/files_3', 'bam_binaries/27/files_4', 'bam_binaries/27/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/27/sq_0', 'bam_binaries/27/sq_1', 'bam_binaries/27/sq_2', 'bam_binaries/27/sq_3', 'bam_binaries/27/sq_4', 'bam_binaries/27/sq_5', 'bam_binaries/27/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/27/pg_0', 'bam_binaries/27/pg_1', 'bam_binaries/27/pg_2', 'bam_binaries/27/pg_3', 'bam_binaries/27/pg_4', 'bam_binaries/27/pg_5');
# COPY BINARY INTO bam.alignments_27 FROM 	('bam_binaries/27/alignments_0', 'bam_binaries/27/alignments_1', 'bam_binaries/27/alignments_2', 'bam_binaries/27/alignments_3', 'bam_binaries/27/alignments_4', 'bam_binaries/27/alignments_5', 'bam_binaries/27/alignments_6', 'bam_binaries/27/alignments_7', 'bam_binaries/27/alignments_8', 'bam_binaries/27/alignments_9', 'bam_binaries/27/alignments_10', 'bam_binaries/27/alignments_11');
# COPY BINARY INTO bam.alignments_extra_27 FROM ('bam_binaries/27/alignments_extra_0', 'bam_binaries/27/alignments_extra_1', 'bam_binaries/27/alignments_extra_2', 'bam_binaries/27/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/28/files_0', 'bam_binaries/28/files_1', 'bam_binaries/28/files_2', 'bam_binaries/28/files_3', 'bam_binaries/28/files_4', 'bam_binaries/28/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/28/sq_0', 'bam_binaries/28/sq_1', 'bam_binaries/28/sq_2', 'bam_binaries/28/sq_3', 'bam_binaries/28/sq_4', 'bam_binaries/28/sq_5', 'bam_binaries/28/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/28/pg_0', 'bam_binaries/28/pg_1', 'bam_binaries/28/pg_2', 'bam_binaries/28/pg_3', 'bam_binaries/28/pg_4', 'bam_binaries/28/pg_5');
# COPY BINARY INTO bam.alignments_28 FROM 	('bam_binaries/28/alignments_0', 'bam_binaries/28/alignments_1', 'bam_binaries/28/alignments_2', 'bam_binaries/28/alignments_3', 'bam_binaries/28/alignments_4', 'bam_binaries/28/alignments_5', 'bam_binaries/28/alignments_6', 'bam_binaries/28/alignments_7', 'bam_binaries/28/alignments_8', 'bam_binaries/28/alignments_9', 'bam_binaries/28/alignments_10', 'bam_binaries/28/alignments_11');
# COPY BINARY INTO bam.alignments_extra_28 FROM ('bam_binaries/28/alignments_extra_0', 'bam_binaries/28/alignments_extra_1', 'bam_binaries/28/alignments_extra_2', 'bam_binaries/28/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/29/files_0', 'bam_binaries/29/files_1', 'bam_binaries/29/files_2', 'bam_binaries/29/files_3', 'bam_binaries/29/files_4', 'bam_binaries/29/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/29/sq_0', 'bam_binaries/29/sq_1', 'bam_binaries/29/sq_2', 'bam_binaries/29/sq_3', 'bam_binaries/29/sq_4', 'bam_binaries/29/sq_5', 'bam_binaries/29/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/29/pg_0', 'bam_binaries/29/pg_1', 'bam_binaries/29/pg_2', 'bam_binaries/29/pg_3', 'bam_binaries/29/pg_4', 'bam_binaries/29/pg_5');
# COPY BINARY INTO bam.alignments_29 FROM 	('bam_binaries/29/alignments_0', 'bam_binaries/29/alignments_1', 'bam_binaries/29/alignments_2', 'bam_binaries/29/alignments_3', 'bam_binaries/29/alignments_4', 'bam_binaries/29/alignments_5', 'bam_binaries/29/alignments_6', 'bam_binaries/29/alignments_7', 'bam_binaries/29/alignments_8', 'bam_binaries/29/alignments_9', 'bam_binaries/29/alignments_10', 'bam_binaries/29/alignments_11');
# COPY BINARY INTO bam.alignments_extra_29 FROM ('bam_binaries/29/alignments_extra_0', 'bam_binaries/29/alignments_extra_1', 'bam_binaries/29/alignments_extra_2', 'bam_binaries/29/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/30/files_0', 'bam_binaries/30/files_1', 'bam_binaries/30/files_2', 'bam_binaries/30/files_3', 'bam_binaries/30/files_4', 'bam_binaries/30/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/30/sq_0', 'bam_binaries/30/sq_1', 'bam_binaries/30/sq_2', 'bam_binaries/30/sq_3', 'bam_binaries/30/sq_4', 'bam_binaries/30/sq_5', 'bam_binaries/30/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/30/pg_0', 'bam_binaries/30/pg_1', 'bam_binaries/30/pg_2', 'bam_binaries/30/pg_3', 'bam_binaries/30/pg_4', 'bam_binaries/30/pg_5');
# COPY BINARY INTO bam.alignments_30 FROM 	('bam_binaries/30/alignments_0', 'bam_binaries/30/alignments_1', 'bam_binaries/30/alignments_2', 'bam_binaries/30/alignments_3', 'bam_binaries/30/alignments_4', 'bam_binaries/30/alignments_5', 'bam_binaries/30/alignments_6', 'bam_binaries/30/alignments_7', 'bam_binaries/30/alignments_8', 'bam_binaries/30/alignments_9', 'bam_binaries/30/alignments_10', 'bam_binaries/30/alignments_11');
# COPY BINARY INTO bam.alignments_extra_30 FROM ('bam_binaries/30/alignments_extra_0', 'bam_binaries/30/alignments_extra_1', 'bam_binaries/30/alignments_extra_2', 'bam_binaries/30/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/31/files_0', 'bam_binaries/31/files_1', 'bam_binaries/31/files_2', 'bam_binaries/31/files_3', 'bam_binaries/31/files_4', 'bam_binaries/31/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/31/sq_0', 'bam_binaries/31/sq_1', 'bam_binaries/31/sq_2', 'bam_binaries/31/sq_3', 'bam_binaries/31/sq_4', 'bam_binaries/31/sq_5', 'bam_binaries/31/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/31/pg_0', 'bam_binaries/31/pg_1', 'bam_binaries/31/pg_2', 'bam_binaries/31/pg_3', 'bam_binaries/31/pg_4', 'bam_binaries/31/pg_5');
# COPY BINARY INTO bam.alignments_31 FROM 	('bam_binaries/31/alignments_0', 'bam_binaries/31/alignments_1', 'bam_binaries/31/alignments_2', 'bam_binaries/31/alignments_3', 'bam_binaries/31/alignments_4', 'bam_binaries/31/alignments_5', 'bam_binaries/31/alignments_6', 'bam_binaries/31/alignments_7', 'bam_binaries/31/alignments_8', 'bam_binaries/31/alignments_9', 'bam_binaries/31/alignments_10', 'bam_binaries/31/alignments_11');
# COPY BINARY INTO bam.alignments_extra_31 FROM ('bam_binaries/31/alignments_extra_0', 'bam_binaries/31/alignments_extra_1', 'bam_binaries/31/alignments_extra_2', 'bam_binaries/31/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/32/files_0', 'bam_binaries/32/files_1', 'bam_binaries/32/files_2', 'bam_binaries/32/files_3', 'bam_binaries/32/files_4', 'bam_binaries/32/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/32/sq_0', 'bam_binaries/32/sq_1', 'bam_binaries/32/sq_2', 'bam_binaries/32/sq_3', 'bam_binaries/32/sq_4', 'bam_binaries/32/sq_5', 'bam_binaries/32/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/32/pg_0', 'bam_binaries/32/pg_1', 'bam_binaries/32/pg_2', 'bam_binaries/32/pg_3', 'bam_binaries/32/pg_4', 'bam_binaries/32/pg_5');
# COPY BINARY INTO bam.alignments_32 FROM 	('bam_binaries/32/alignments_0', 'bam_binaries/32/alignments_1', 'bam_binaries/32/alignments_2', 'bam_binaries/32/alignments_3', 'bam_binaries/32/alignments_4', 'bam_binaries/32/alignments_5', 'bam_binaries/32/alignments_6', 'bam_binaries/32/alignments_7', 'bam_binaries/32/alignments_8', 'bam_binaries/32/alignments_9', 'bam_binaries/32/alignments_10', 'bam_binaries/32/alignments_11');
# COPY BINARY INTO bam.alignments_extra_32 FROM ('bam_binaries/32/alignments_extra_0', 'bam_binaries/32/alignments_extra_1', 'bam_binaries/32/alignments_extra_2', 'bam_binaries/32/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/33/files_0', 'bam_binaries/33/files_1', 'bam_binaries/33/files_2', 'bam_binaries/33/files_3', 'bam_binaries/33/files_4', 'bam_binaries/33/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/33/sq_0', 'bam_binaries/33/sq_1', 'bam_binaries/33/sq_2', 'bam_binaries/33/sq_3', 'bam_binaries/33/sq_4', 'bam_binaries/33/sq_5', 'bam_binaries/33/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/33/pg_0', 'bam_binaries/33/pg_1', 'bam_binaries/33/pg_2', 'bam_binaries/33/pg_3', 'bam_binaries/33/pg_4', 'bam_binaries/33/pg_5');
# COPY BINARY INTO bam.alignments_33 FROM 	('bam_binaries/33/alignments_0', 'bam_binaries/33/alignments_1', 'bam_binaries/33/alignments_2', 'bam_binaries/33/alignments_3', 'bam_binaries/33/alignments_4', 'bam_binaries/33/alignments_5', 'bam_binaries/33/alignments_6', 'bam_binaries/33/alignments_7', 'bam_binaries/33/alignments_8', 'bam_binaries/33/alignments_9', 'bam_binaries/33/alignments_10', 'bam_binaries/33/alignments_11');
# COPY BINARY INTO bam.alignments_extra_33 FROM ('bam_binaries/33/alignments_extra_0', 'bam_binaries/33/alignments_extra_1', 'bam_binaries/33/alignments_extra_2', 'bam_binaries/33/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/34/files_0', 'bam_binaries/34/files_1', 'bam_binaries/34/files_2', 'bam_binaries/34/files_3', 'bam_binaries/34/files_4', 'bam_binaries/34/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/34/sq_0', 'bam_binaries/34/sq_1', 'bam_binaries/34/sq_2', 'bam_binaries/34/sq_3', 'bam_binaries/34/sq_4', 'bam_binaries/34/sq_5', 'bam_binaries/34/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/34/pg_0', 'bam_binaries/34/pg_1', 'bam_binaries/34/pg_2', 'bam_binaries/34/pg_3', 'bam_binaries/34/pg_4', 'bam_binaries/34/pg_5');
# COPY BINARY INTO bam.alignments_34 FROM 	('bam_binaries/34/alignments_0', 'bam_binaries/34/alignments_1', 'bam_binaries/34/alignments_2', 'bam_binaries/34/alignments_3', 'bam_binaries/34/alignments_4', 'bam_binaries/34/alignments_5', 'bam_binaries/34/alignments_6', 'bam_binaries/34/alignments_7', 'bam_binaries/34/alignments_8', 'bam_binaries/34/alignments_9', 'bam_binaries/34/alignments_10', 'bam_binaries/34/alignments_11');
# COPY BINARY INTO bam.alignments_extra_34 FROM ('bam_binaries/34/alignments_extra_0', 'bam_binaries/34/alignments_extra_1', 'bam_binaries/34/alignments_extra_2', 'bam_binaries/34/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/35/files_0', 'bam_binaries/35/files_1', 'bam_binaries/35/files_2', 'bam_binaries/35/files_3', 'bam_binaries/35/files_4', 'bam_binaries/35/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/35/sq_0', 'bam_binaries/35/sq_1', 'bam_binaries/35/sq_2', 'bam_binaries/35/sq_3', 'bam_binaries/35/sq_4', 'bam_binaries/35/sq_5', 'bam_binaries/35/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/35/pg_0', 'bam_binaries/35/pg_1', 'bam_binaries/35/pg_2', 'bam_binaries/35/pg_3', 'bam_binaries/35/pg_4', 'bam_binaries/35/pg_5');
# COPY BINARY INTO bam.alignments_35 FROM 	('bam_binaries/35/alignments_0', 'bam_binaries/35/alignments_1', 'bam_binaries/35/alignments_2', 'bam_binaries/35/alignments_3', 'bam_binaries/35/alignments_4', 'bam_binaries/35/alignments_5', 'bam_binaries/35/alignments_6', 'bam_binaries/35/alignments_7', 'bam_binaries/35/alignments_8', 'bam_binaries/35/alignments_9', 'bam_binaries/35/alignments_10', 'bam_binaries/35/alignments_11');
# COPY BINARY INTO bam.alignments_extra_35 FROM ('bam_binaries/35/alignments_extra_0', 'bam_binaries/35/alignments_extra_1', 'bam_binaries/35/alignments_extra_2', 'bam_binaries/35/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/36/files_0', 'bam_binaries/36/files_1', 'bam_binaries/36/files_2', 'bam_binaries/36/files_3', 'bam_binaries/36/files_4', 'bam_binaries/36/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/36/sq_0', 'bam_binaries/36/sq_1', 'bam_binaries/36/sq_2', 'bam_binaries/36/sq_3', 'bam_binaries/36/sq_4', 'bam_binaries/36/sq_5', 'bam_binaries/36/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/36/pg_0', 'bam_binaries/36/pg_1', 'bam_binaries/36/pg_2', 'bam_binaries/36/pg_3', 'bam_binaries/36/pg_4', 'bam_binaries/36/pg_5');
# COPY BINARY INTO bam.alignments_36 FROM 	('bam_binaries/36/alignments_0', 'bam_binaries/36/alignments_1', 'bam_binaries/36/alignments_2', 'bam_binaries/36/alignments_3', 'bam_binaries/36/alignments_4', 'bam_binaries/36/alignments_5', 'bam_binaries/36/alignments_6', 'bam_binaries/36/alignments_7', 'bam_binaries/36/alignments_8', 'bam_binaries/36/alignments_9', 'bam_binaries/36/alignments_10', 'bam_binaries/36/alignments_11');
# COPY BINARY INTO bam.alignments_extra_36 FROM ('bam_binaries/36/alignments_extra_0', 'bam_binaries/36/alignments_extra_1', 'bam_binaries/36/alignments_extra_2', 'bam_binaries/36/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/37/files_0', 'bam_binaries/37/files_1', 'bam_binaries/37/files_2', 'bam_binaries/37/files_3', 'bam_binaries/37/files_4', 'bam_binaries/37/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/37/sq_0', 'bam_binaries/37/sq_1', 'bam_binaries/37/sq_2', 'bam_binaries/37/sq_3', 'bam_binaries/37/sq_4', 'bam_binaries/37/sq_5', 'bam_binaries/37/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/37/pg_0', 'bam_binaries/37/pg_1', 'bam_binaries/37/pg_2', 'bam_binaries/37/pg_3', 'bam_binaries/37/pg_4', 'bam_binaries/37/pg_5');
# COPY BINARY INTO bam.alignments_37 FROM 	('bam_binaries/37/alignments_0', 'bam_binaries/37/alignments_1', 'bam_binaries/37/alignments_2', 'bam_binaries/37/alignments_3', 'bam_binaries/37/alignments_4', 'bam_binaries/37/alignments_5', 'bam_binaries/37/alignments_6', 'bam_binaries/37/alignments_7', 'bam_binaries/37/alignments_8', 'bam_binaries/37/alignments_9', 'bam_binaries/37/alignments_10', 'bam_binaries/37/alignments_11');
# COPY BINARY INTO bam.alignments_extra_37 FROM ('bam_binaries/37/alignments_extra_0', 'bam_binaries/37/alignments_extra_1', 'bam_binaries/37/alignments_extra_2', 'bam_binaries/37/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/38/files_0', 'bam_binaries/38/files_1', 'bam_binaries/38/files_2', 'bam_binaries/38/files_3', 'bam_binaries/38/files_4', 'bam_binaries/38/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/38/sq_0', 'bam_binaries/38/sq_1', 'bam_binaries/38/sq_2', 'bam_binaries/38/sq_3', 'bam_binaries/38/sq_4', 'bam_binaries/38/sq_5', 'bam_binaries/38/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/38/pg_0', 'bam_binaries/38/pg_1', 'bam_binaries/38/pg_2', 'bam_binaries/38/pg_3', 'bam_binaries/38/pg_4', 'bam_binaries/38/pg_5');
# COPY BINARY INTO bam.alignments_38 FROM 	('bam_binaries/38/alignments_0', 'bam_binaries/38/alignments_1', 'bam_binaries/38/alignments_2', 'bam_binaries/38/alignments_3', 'bam_binaries/38/alignments_4', 'bam_binaries/38/alignments_5', 'bam_binaries/38/alignments_6', 'bam_binaries/38/alignments_7', 'bam_binaries/38/alignments_8', 'bam_binaries/38/alignments_9', 'bam_binaries/38/alignments_10', 'bam_binaries/38/alignments_11');
# COPY BINARY INTO bam.alignments_extra_38 FROM ('bam_binaries/38/alignments_extra_0', 'bam_binaries/38/alignments_extra_1', 'bam_binaries/38/alignments_extra_2', 'bam_binaries/38/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/39/files_0', 'bam_binaries/39/files_1', 'bam_binaries/39/files_2', 'bam_binaries/39/files_3', 'bam_binaries/39/files_4', 'bam_binaries/39/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/39/sq_0', 'bam_binaries/39/sq_1', 'bam_binaries/39/sq_2', 'bam_binaries/39/sq_3', 'bam_binaries/39/sq_4', 'bam_binaries/39/sq_5', 'bam_binaries/39/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/39/pg_0', 'bam_binaries/39/pg_1', 'bam_binaries/39/pg_2', 'bam_binaries/39/pg_3', 'bam_binaries/39/pg_4', 'bam_binaries/39/pg_5');
# COPY BINARY INTO bam.alignments_39 FROM 	('bam_binaries/39/alignments_0', 'bam_binaries/39/alignments_1', 'bam_binaries/39/alignments_2', 'bam_binaries/39/alignments_3', 'bam_binaries/39/alignments_4', 'bam_binaries/39/alignments_5', 'bam_binaries/39/alignments_6', 'bam_binaries/39/alignments_7', 'bam_binaries/39/alignments_8', 'bam_binaries/39/alignments_9', 'bam_binaries/39/alignments_10', 'bam_binaries/39/alignments_11');
# COPY BINARY INTO bam.alignments_extra_39 FROM ('bam_binaries/39/alignments_extra_0', 'bam_binaries/39/alignments_extra_1', 'bam_binaries/39/alignments_extra_2', 'bam_binaries/39/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/40/files_0', 'bam_binaries/40/files_1', 'bam_binaries/40/files_2', 'bam_binaries/40/files_3', 'bam_binaries/40/files_4', 'bam_binaries/40/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/40/sq_0', 'bam_binaries/40/sq_1', 'bam_binaries/40/sq_2', 'bam_binaries/40/sq_3', 'bam_binaries/40/sq_4', 'bam_binaries/40/sq_5', 'bam_binaries/40/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/40/pg_0', 'bam_binaries/40/pg_1', 'bam_binaries/40/pg_2', 'bam_binaries/40/pg_3', 'bam_binaries/40/pg_4', 'bam_binaries/40/pg_5');
# COPY BINARY INTO bam.alignments_40 FROM 	('bam_binaries/40/alignments_0', 'bam_binaries/40/alignments_1', 'bam_binaries/40/alignments_2', 'bam_binaries/40/alignments_3', 'bam_binaries/40/alignments_4', 'bam_binaries/40/alignments_5', 'bam_binaries/40/alignments_6', 'bam_binaries/40/alignments_7', 'bam_binaries/40/alignments_8', 'bam_binaries/40/alignments_9', 'bam_binaries/40/alignments_10', 'bam_binaries/40/alignments_11');
# COPY BINARY INTO bam.alignments_extra_40 FROM ('bam_binaries/40/alignments_extra_0', 'bam_binaries/40/alignments_extra_1', 'bam_binaries/40/alignments_extra_2', 'bam_binaries/40/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/41/files_0', 'bam_binaries/41/files_1', 'bam_binaries/41/files_2', 'bam_binaries/41/files_3', 'bam_binaries/41/files_4', 'bam_binaries/41/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/41/sq_0', 'bam_binaries/41/sq_1', 'bam_binaries/41/sq_2', 'bam_binaries/41/sq_3', 'bam_binaries/41/sq_4', 'bam_binaries/41/sq_5', 'bam_binaries/41/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/41/pg_0', 'bam_binaries/41/pg_1', 'bam_binaries/41/pg_2', 'bam_binaries/41/pg_3', 'bam_binaries/41/pg_4', 'bam_binaries/41/pg_5');
# COPY BINARY INTO bam.alignments_41 FROM 	('bam_binaries/41/alignments_0', 'bam_binaries/41/alignments_1', 'bam_binaries/41/alignments_2', 'bam_binaries/41/alignments_3', 'bam_binaries/41/alignments_4', 'bam_binaries/41/alignments_5', 'bam_binaries/41/alignments_6', 'bam_binaries/41/alignments_7', 'bam_binaries/41/alignments_8', 'bam_binaries/41/alignments_9', 'bam_binaries/41/alignments_10', 'bam_binaries/41/alignments_11');
# COPY BINARY INTO bam.alignments_extra_41 FROM ('bam_binaries/41/alignments_extra_0', 'bam_binaries/41/alignments_extra_1', 'bam_binaries/41/alignments_extra_2', 'bam_binaries/41/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/42/files_0', 'bam_binaries/42/files_1', 'bam_binaries/42/files_2', 'bam_binaries/42/files_3', 'bam_binaries/42/files_4', 'bam_binaries/42/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/42/sq_0', 'bam_binaries/42/sq_1', 'bam_binaries/42/sq_2', 'bam_binaries/42/sq_3', 'bam_binaries/42/sq_4', 'bam_binaries/42/sq_5', 'bam_binaries/42/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/42/pg_0', 'bam_binaries/42/pg_1', 'bam_binaries/42/pg_2', 'bam_binaries/42/pg_3', 'bam_binaries/42/pg_4', 'bam_binaries/42/pg_5');
# COPY BINARY INTO bam.alignments_42 FROM 	('bam_binaries/42/alignments_0', 'bam_binaries/42/alignments_1', 'bam_binaries/42/alignments_2', 'bam_binaries/42/alignments_3', 'bam_binaries/42/alignments_4', 'bam_binaries/42/alignments_5', 'bam_binaries/42/alignments_6', 'bam_binaries/42/alignments_7', 'bam_binaries/42/alignments_8', 'bam_binaries/42/alignments_9', 'bam_binaries/42/alignments_10', 'bam_binaries/42/alignments_11');
# COPY BINARY INTO bam.alignments_extra_42 FROM ('bam_binaries/42/alignments_extra_0', 'bam_binaries/42/alignments_extra_1', 'bam_binaries/42/alignments_extra_2', 'bam_binaries/42/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/43/files_0', 'bam_binaries/43/files_1', 'bam_binaries/43/files_2', 'bam_binaries/43/files_3', 'bam_binaries/43/files_4', 'bam_binaries/43/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/43/sq_0', 'bam_binaries/43/sq_1', 'bam_binaries/43/sq_2', 'bam_binaries/43/sq_3', 'bam_binaries/43/sq_4', 'bam_binaries/43/sq_5', 'bam_binaries/43/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/43/pg_0', 'bam_binaries/43/pg_1', 'bam_binaries/43/pg_2', 'bam_binaries/43/pg_3', 'bam_binaries/43/pg_4', 'bam_binaries/43/pg_5');
# COPY BINARY INTO bam.alignments_43 FROM 	('bam_binaries/43/alignments_0', 'bam_binaries/43/alignments_1', 'bam_binaries/43/alignments_2', 'bam_binaries/43/alignments_3', 'bam_binaries/43/alignments_4', 'bam_binaries/43/alignments_5', 'bam_binaries/43/alignments_6', 'bam_binaries/43/alignments_7', 'bam_binaries/43/alignments_8', 'bam_binaries/43/alignments_9', 'bam_binaries/43/alignments_10', 'bam_binaries/43/alignments_11');
# COPY BINARY INTO bam.alignments_extra_43 FROM ('bam_binaries/43/alignments_extra_0', 'bam_binaries/43/alignments_extra_1', 'bam_binaries/43/alignments_extra_2', 'bam_binaries/43/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/44/files_0', 'bam_binaries/44/files_1', 'bam_binaries/44/files_2', 'bam_binaries/44/files_3', 'bam_binaries/44/files_4', 'bam_binaries/44/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/44/sq_0', 'bam_binaries/44/sq_1', 'bam_binaries/44/sq_2', 'bam_binaries/44/sq_3', 'bam_binaries/44/sq_4', 'bam_binaries/44/sq_5', 'bam_binaries/44/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/44/pg_0', 'bam_binaries/44/pg_1', 'bam_binaries/44/pg_2', 'bam_binaries/44/pg_3', 'bam_binaries/44/pg_4', 'bam_binaries/44/pg_5');
# COPY BINARY INTO bam.alignments_44 FROM 	('bam_binaries/44/alignments_0', 'bam_binaries/44/alignments_1', 'bam_binaries/44/alignments_2', 'bam_binaries/44/alignments_3', 'bam_binaries/44/alignments_4', 'bam_binaries/44/alignments_5', 'bam_binaries/44/alignments_6', 'bam_binaries/44/alignments_7', 'bam_binaries/44/alignments_8', 'bam_binaries/44/alignments_9', 'bam_binaries/44/alignments_10', 'bam_binaries/44/alignments_11');
# COPY BINARY INTO bam.alignments_extra_44 FROM ('bam_binaries/44/alignments_extra_0', 'bam_binaries/44/alignments_extra_1', 'bam_binaries/44/alignments_extra_2', 'bam_binaries/44/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/45/files_0', 'bam_binaries/45/files_1', 'bam_binaries/45/files_2', 'bam_binaries/45/files_3', 'bam_binaries/45/files_4', 'bam_binaries/45/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/45/sq_0', 'bam_binaries/45/sq_1', 'bam_binaries/45/sq_2', 'bam_binaries/45/sq_3', 'bam_binaries/45/sq_4', 'bam_binaries/45/sq_5', 'bam_binaries/45/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/45/pg_0', 'bam_binaries/45/pg_1', 'bam_binaries/45/pg_2', 'bam_binaries/45/pg_3', 'bam_binaries/45/pg_4', 'bam_binaries/45/pg_5');
# COPY BINARY INTO bam.alignments_45 FROM 	('bam_binaries/45/alignments_0', 'bam_binaries/45/alignments_1', 'bam_binaries/45/alignments_2', 'bam_binaries/45/alignments_3', 'bam_binaries/45/alignments_4', 'bam_binaries/45/alignments_5', 'bam_binaries/45/alignments_6', 'bam_binaries/45/alignments_7', 'bam_binaries/45/alignments_8', 'bam_binaries/45/alignments_9', 'bam_binaries/45/alignments_10', 'bam_binaries/45/alignments_11');
# COPY BINARY INTO bam.alignments_extra_45 FROM ('bam_binaries/45/alignments_extra_0', 'bam_binaries/45/alignments_extra_1', 'bam_binaries/45/alignments_extra_2', 'bam_binaries/45/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/46/files_0', 'bam_binaries/46/files_1', 'bam_binaries/46/files_2', 'bam_binaries/46/files_3', 'bam_binaries/46/files_4', 'bam_binaries/46/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/46/sq_0', 'bam_binaries/46/sq_1', 'bam_binaries/46/sq_2', 'bam_binaries/46/sq_3', 'bam_binaries/46/sq_4', 'bam_binaries/46/sq_5', 'bam_binaries/46/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/46/pg_0', 'bam_binaries/46/pg_1', 'bam_binaries/46/pg_2', 'bam_binaries/46/pg_3', 'bam_binaries/46/pg_4', 'bam_binaries/46/pg_5');
# COPY BINARY INTO bam.alignments_46 FROM 	('bam_binaries/46/alignments_0', 'bam_binaries/46/alignments_1', 'bam_binaries/46/alignments_2', 'bam_binaries/46/alignments_3', 'bam_binaries/46/alignments_4', 'bam_binaries/46/alignments_5', 'bam_binaries/46/alignments_6', 'bam_binaries/46/alignments_7', 'bam_binaries/46/alignments_8', 'bam_binaries/46/alignments_9', 'bam_binaries/46/alignments_10', 'bam_binaries/46/alignments_11');
# COPY BINARY INTO bam.alignments_extra_46 FROM ('bam_binaries/46/alignments_extra_0', 'bam_binaries/46/alignments_extra_1', 'bam_binaries/46/alignments_extra_2', 'bam_binaries/46/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/47/files_0', 'bam_binaries/47/files_1', 'bam_binaries/47/files_2', 'bam_binaries/47/files_3', 'bam_binaries/47/files_4', 'bam_binaries/47/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/47/sq_0', 'bam_binaries/47/sq_1', 'bam_binaries/47/sq_2', 'bam_binaries/47/sq_3', 'bam_binaries/47/sq_4', 'bam_binaries/47/sq_5', 'bam_binaries/47/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/47/pg_0', 'bam_binaries/47/pg_1', 'bam_binaries/47/pg_2', 'bam_binaries/47/pg_3', 'bam_binaries/47/pg_4', 'bam_binaries/47/pg_5');
# COPY BINARY INTO bam.alignments_47 FROM 	('bam_binaries/47/alignments_0', 'bam_binaries/47/alignments_1', 'bam_binaries/47/alignments_2', 'bam_binaries/47/alignments_3', 'bam_binaries/47/alignments_4', 'bam_binaries/47/alignments_5', 'bam_binaries/47/alignments_6', 'bam_binaries/47/alignments_7', 'bam_binaries/47/alignments_8', 'bam_binaries/47/alignments_9', 'bam_binaries/47/alignments_10', 'bam_binaries/47/alignments_11');
# COPY BINARY INTO bam.alignments_extra_47 FROM ('bam_binaries/47/alignments_extra_0', 'bam_binaries/47/alignments_extra_1', 'bam_binaries/47/alignments_extra_2', 'bam_binaries/47/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/48/files_0', 'bam_binaries/48/files_1', 'bam_binaries/48/files_2', 'bam_binaries/48/files_3', 'bam_binaries/48/files_4', 'bam_binaries/48/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/48/sq_0', 'bam_binaries/48/sq_1', 'bam_binaries/48/sq_2', 'bam_binaries/48/sq_3', 'bam_binaries/48/sq_4', 'bam_binaries/48/sq_5', 'bam_binaries/48/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/48/pg_0', 'bam_binaries/48/pg_1', 'bam_binaries/48/pg_2', 'bam_binaries/48/pg_3', 'bam_binaries/48/pg_4', 'bam_binaries/48/pg_5');
# COPY BINARY INTO bam.alignments_48 FROM 	('bam_binaries/48/alignments_0', 'bam_binaries/48/alignments_1', 'bam_binaries/48/alignments_2', 'bam_binaries/48/alignments_3', 'bam_binaries/48/alignments_4', 'bam_binaries/48/alignments_5', 'bam_binaries/48/alignments_6', 'bam_binaries/48/alignments_7', 'bam_binaries/48/alignments_8', 'bam_binaries/48/alignments_9', 'bam_binaries/48/alignments_10', 'bam_binaries/48/alignments_11');
# COPY BINARY INTO bam.alignments_extra_48 FROM ('bam_binaries/48/alignments_extra_0', 'bam_binaries/48/alignments_extra_1', 'bam_binaries/48/alignments_extra_2', 'bam_binaries/48/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/49/files_0', 'bam_binaries/49/files_1', 'bam_binaries/49/files_2', 'bam_binaries/49/files_3', 'bam_binaries/49/files_4', 'bam_binaries/49/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/49/sq_0', 'bam_binaries/49/sq_1', 'bam_binaries/49/sq_2', 'bam_binaries/49/sq_3', 'bam_binaries/49/sq_4', 'bam_binaries/49/sq_5', 'bam_binaries/49/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/49/pg_0', 'bam_binaries/49/pg_1', 'bam_binaries/49/pg_2', 'bam_binaries/49/pg_3', 'bam_binaries/49/pg_4', 'bam_binaries/49/pg_5');
# COPY BINARY INTO bam.alignments_49 FROM 	('bam_binaries/49/alignments_0', 'bam_binaries/49/alignments_1', 'bam_binaries/49/alignments_2', 'bam_binaries/49/alignments_3', 'bam_binaries/49/alignments_4', 'bam_binaries/49/alignments_5', 'bam_binaries/49/alignments_6', 'bam_binaries/49/alignments_7', 'bam_binaries/49/alignments_8', 'bam_binaries/49/alignments_9', 'bam_binaries/49/alignments_10', 'bam_binaries/49/alignments_11');
# COPY BINARY INTO bam.alignments_extra_49 FROM ('bam_binaries/49/alignments_extra_0', 'bam_binaries/49/alignments_extra_1', 'bam_binaries/49/alignments_extra_2', 'bam_binaries/49/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/50/files_0', 'bam_binaries/50/files_1', 'bam_binaries/50/files_2', 'bam_binaries/50/files_3', 'bam_binaries/50/files_4', 'bam_binaries/50/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/50/sq_0', 'bam_binaries/50/sq_1', 'bam_binaries/50/sq_2', 'bam_binaries/50/sq_3', 'bam_binaries/50/sq_4', 'bam_binaries/50/sq_5', 'bam_binaries/50/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/50/pg_0', 'bam_binaries/50/pg_1', 'bam_binaries/50/pg_2', 'bam_binaries/50/pg_3', 'bam_binaries/50/pg_4', 'bam_binaries/50/pg_5');
# COPY BINARY INTO bam.alignments_50 FROM 	('bam_binaries/50/alignments_0', 'bam_binaries/50/alignments_1', 'bam_binaries/50/alignments_2', 'bam_binaries/50/alignments_3', 'bam_binaries/50/alignments_4', 'bam_binaries/50/alignments_5', 'bam_binaries/50/alignments_6', 'bam_binaries/50/alignments_7', 'bam_binaries/50/alignments_8', 'bam_binaries/50/alignments_9', 'bam_binaries/50/alignments_10', 'bam_binaries/50/alignments_11');
# COPY BINARY INTO bam.alignments_extra_50 FROM ('bam_binaries/50/alignments_extra_0', 'bam_binaries/50/alignments_extra_1', 'bam_binaries/50/alignments_extra_2', 'bam_binaries/50/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/51/files_0', 'bam_binaries/51/files_1', 'bam_binaries/51/files_2', 'bam_binaries/51/files_3', 'bam_binaries/51/files_4', 'bam_binaries/51/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/51/sq_0', 'bam_binaries/51/sq_1', 'bam_binaries/51/sq_2', 'bam_binaries/51/sq_3', 'bam_binaries/51/sq_4', 'bam_binaries/51/sq_5', 'bam_binaries/51/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/51/pg_0', 'bam_binaries/51/pg_1', 'bam_binaries/51/pg_2', 'bam_binaries/51/pg_3', 'bam_binaries/51/pg_4', 'bam_binaries/51/pg_5');
# COPY BINARY INTO bam.alignments_51 FROM 	('bam_binaries/51/alignments_0', 'bam_binaries/51/alignments_1', 'bam_binaries/51/alignments_2', 'bam_binaries/51/alignments_3', 'bam_binaries/51/alignments_4', 'bam_binaries/51/alignments_5', 'bam_binaries/51/alignments_6', 'bam_binaries/51/alignments_7', 'bam_binaries/51/alignments_8', 'bam_binaries/51/alignments_9', 'bam_binaries/51/alignments_10', 'bam_binaries/51/alignments_11');
# COPY BINARY INTO bam.alignments_extra_51 FROM ('bam_binaries/51/alignments_extra_0', 'bam_binaries/51/alignments_extra_1', 'bam_binaries/51/alignments_extra_2', 'bam_binaries/51/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/52/files_0', 'bam_binaries/52/files_1', 'bam_binaries/52/files_2', 'bam_binaries/52/files_3', 'bam_binaries/52/files_4', 'bam_binaries/52/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/52/sq_0', 'bam_binaries/52/sq_1', 'bam_binaries/52/sq_2', 'bam_binaries/52/sq_3', 'bam_binaries/52/sq_4', 'bam_binaries/52/sq_5', 'bam_binaries/52/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/52/pg_0', 'bam_binaries/52/pg_1', 'bam_binaries/52/pg_2', 'bam_binaries/52/pg_3', 'bam_binaries/52/pg_4', 'bam_binaries/52/pg_5');
# COPY BINARY INTO bam.alignments_52 FROM 	('bam_binaries/52/alignments_0', 'bam_binaries/52/alignments_1', 'bam_binaries/52/alignments_2', 'bam_binaries/52/alignments_3', 'bam_binaries/52/alignments_4', 'bam_binaries/52/alignments_5', 'bam_binaries/52/alignments_6', 'bam_binaries/52/alignments_7', 'bam_binaries/52/alignments_8', 'bam_binaries/52/alignments_9', 'bam_binaries/52/alignments_10', 'bam_binaries/52/alignments_11');
# COPY BINARY INTO bam.alignments_extra_52 FROM ('bam_binaries/52/alignments_extra_0', 'bam_binaries/52/alignments_extra_1', 'bam_binaries/52/alignments_extra_2', 'bam_binaries/52/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/53/files_0', 'bam_binaries/53/files_1', 'bam_binaries/53/files_2', 'bam_binaries/53/files_3', 'bam_binaries/53/files_4', 'bam_binaries/53/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/53/sq_0', 'bam_binaries/53/sq_1', 'bam_binaries/53/sq_2', 'bam_binaries/53/sq_3', 'bam_binaries/53/sq_4', 'bam_binaries/53/sq_5', 'bam_binaries/53/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/53/pg_0', 'bam_binaries/53/pg_1', 'bam_binaries/53/pg_2', 'bam_binaries/53/pg_3', 'bam_binaries/53/pg_4', 'bam_binaries/53/pg_5');
# COPY BINARY INTO bam.alignments_53 FROM 	('bam_binaries/53/alignments_0', 'bam_binaries/53/alignments_1', 'bam_binaries/53/alignments_2', 'bam_binaries/53/alignments_3', 'bam_binaries/53/alignments_4', 'bam_binaries/53/alignments_5', 'bam_binaries/53/alignments_6', 'bam_binaries/53/alignments_7', 'bam_binaries/53/alignments_8', 'bam_binaries/53/alignments_9', 'bam_binaries/53/alignments_10', 'bam_binaries/53/alignments_11');
# COPY BINARY INTO bam.alignments_extra_53 FROM ('bam_binaries/53/alignments_extra_0', 'bam_binaries/53/alignments_extra_1', 'bam_binaries/53/alignments_extra_2', 'bam_binaries/53/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/54/files_0', 'bam_binaries/54/files_1', 'bam_binaries/54/files_2', 'bam_binaries/54/files_3', 'bam_binaries/54/files_4', 'bam_binaries/54/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/54/sq_0', 'bam_binaries/54/sq_1', 'bam_binaries/54/sq_2', 'bam_binaries/54/sq_3', 'bam_binaries/54/sq_4', 'bam_binaries/54/sq_5', 'bam_binaries/54/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/54/pg_0', 'bam_binaries/54/pg_1', 'bam_binaries/54/pg_2', 'bam_binaries/54/pg_3', 'bam_binaries/54/pg_4', 'bam_binaries/54/pg_5');
# COPY BINARY INTO bam.alignments_54 FROM 	('bam_binaries/54/alignments_0', 'bam_binaries/54/alignments_1', 'bam_binaries/54/alignments_2', 'bam_binaries/54/alignments_3', 'bam_binaries/54/alignments_4', 'bam_binaries/54/alignments_5', 'bam_binaries/54/alignments_6', 'bam_binaries/54/alignments_7', 'bam_binaries/54/alignments_8', 'bam_binaries/54/alignments_9', 'bam_binaries/54/alignments_10', 'bam_binaries/54/alignments_11');
# COPY BINARY INTO bam.alignments_extra_54 FROM ('bam_binaries/54/alignments_extra_0', 'bam_binaries/54/alignments_extra_1', 'bam_binaries/54/alignments_extra_2', 'bam_binaries/54/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/55/files_0', 'bam_binaries/55/files_1', 'bam_binaries/55/files_2', 'bam_binaries/55/files_3', 'bam_binaries/55/files_4', 'bam_binaries/55/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/55/sq_0', 'bam_binaries/55/sq_1', 'bam_binaries/55/sq_2', 'bam_binaries/55/sq_3', 'bam_binaries/55/sq_4', 'bam_binaries/55/sq_5', 'bam_binaries/55/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/55/pg_0', 'bam_binaries/55/pg_1', 'bam_binaries/55/pg_2', 'bam_binaries/55/pg_3', 'bam_binaries/55/pg_4', 'bam_binaries/55/pg_5');
# COPY BINARY INTO bam.alignments_55 FROM 	('bam_binaries/55/alignments_0', 'bam_binaries/55/alignments_1', 'bam_binaries/55/alignments_2', 'bam_binaries/55/alignments_3', 'bam_binaries/55/alignments_4', 'bam_binaries/55/alignments_5', 'bam_binaries/55/alignments_6', 'bam_binaries/55/alignments_7', 'bam_binaries/55/alignments_8', 'bam_binaries/55/alignments_9', 'bam_binaries/55/alignments_10', 'bam_binaries/55/alignments_11');
# COPY BINARY INTO bam.alignments_extra_55 FROM ('bam_binaries/55/alignments_extra_0', 'bam_binaries/55/alignments_extra_1', 'bam_binaries/55/alignments_extra_2', 'bam_binaries/55/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/56/files_0', 'bam_binaries/56/files_1', 'bam_binaries/56/files_2', 'bam_binaries/56/files_3', 'bam_binaries/56/files_4', 'bam_binaries/56/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/56/sq_0', 'bam_binaries/56/sq_1', 'bam_binaries/56/sq_2', 'bam_binaries/56/sq_3', 'bam_binaries/56/sq_4', 'bam_binaries/56/sq_5', 'bam_binaries/56/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/56/pg_0', 'bam_binaries/56/pg_1', 'bam_binaries/56/pg_2', 'bam_binaries/56/pg_3', 'bam_binaries/56/pg_4', 'bam_binaries/56/pg_5');
# COPY BINARY INTO bam.alignments_56 FROM 	('bam_binaries/56/alignments_0', 'bam_binaries/56/alignments_1', 'bam_binaries/56/alignments_2', 'bam_binaries/56/alignments_3', 'bam_binaries/56/alignments_4', 'bam_binaries/56/alignments_5', 'bam_binaries/56/alignments_6', 'bam_binaries/56/alignments_7', 'bam_binaries/56/alignments_8', 'bam_binaries/56/alignments_9', 'bam_binaries/56/alignments_10', 'bam_binaries/56/alignments_11');
# COPY BINARY INTO bam.alignments_extra_56 FROM ('bam_binaries/56/alignments_extra_0', 'bam_binaries/56/alignments_extra_1', 'bam_binaries/56/alignments_extra_2', 'bam_binaries/56/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/57/files_0', 'bam_binaries/57/files_1', 'bam_binaries/57/files_2', 'bam_binaries/57/files_3', 'bam_binaries/57/files_4', 'bam_binaries/57/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/57/sq_0', 'bam_binaries/57/sq_1', 'bam_binaries/57/sq_2', 'bam_binaries/57/sq_3', 'bam_binaries/57/sq_4', 'bam_binaries/57/sq_5', 'bam_binaries/57/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/57/pg_0', 'bam_binaries/57/pg_1', 'bam_binaries/57/pg_2', 'bam_binaries/57/pg_3', 'bam_binaries/57/pg_4', 'bam_binaries/57/pg_5');
# COPY BINARY INTO bam.alignments_57 FROM 	('bam_binaries/57/alignments_0', 'bam_binaries/57/alignments_1', 'bam_binaries/57/alignments_2', 'bam_binaries/57/alignments_3', 'bam_binaries/57/alignments_4', 'bam_binaries/57/alignments_5', 'bam_binaries/57/alignments_6', 'bam_binaries/57/alignments_7', 'bam_binaries/57/alignments_8', 'bam_binaries/57/alignments_9', 'bam_binaries/57/alignments_10', 'bam_binaries/57/alignments_11');
# COPY BINARY INTO bam.alignments_extra_57 FROM ('bam_binaries/57/alignments_extra_0', 'bam_binaries/57/alignments_extra_1', 'bam_binaries/57/alignments_extra_2', 'bam_binaries/57/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/58/files_0', 'bam_binaries/58/files_1', 'bam_binaries/58/files_2', 'bam_binaries/58/files_3', 'bam_binaries/58/files_4', 'bam_binaries/58/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/58/sq_0', 'bam_binaries/58/sq_1', 'bam_binaries/58/sq_2', 'bam_binaries/58/sq_3', 'bam_binaries/58/sq_4', 'bam_binaries/58/sq_5', 'bam_binaries/58/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/58/pg_0', 'bam_binaries/58/pg_1', 'bam_binaries/58/pg_2', 'bam_binaries/58/pg_3', 'bam_binaries/58/pg_4', 'bam_binaries/58/pg_5');
# COPY BINARY INTO bam.alignments_58 FROM 	('bam_binaries/58/alignments_0', 'bam_binaries/58/alignments_1', 'bam_binaries/58/alignments_2', 'bam_binaries/58/alignments_3', 'bam_binaries/58/alignments_4', 'bam_binaries/58/alignments_5', 'bam_binaries/58/alignments_6', 'bam_binaries/58/alignments_7', 'bam_binaries/58/alignments_8', 'bam_binaries/58/alignments_9', 'bam_binaries/58/alignments_10', 'bam_binaries/58/alignments_11');
# COPY BINARY INTO bam.alignments_extra_58 FROM ('bam_binaries/58/alignments_extra_0', 'bam_binaries/58/alignments_extra_1', 'bam_binaries/58/alignments_extra_2', 'bam_binaries/58/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/59/files_0', 'bam_binaries/59/files_1', 'bam_binaries/59/files_2', 'bam_binaries/59/files_3', 'bam_binaries/59/files_4', 'bam_binaries/59/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/59/sq_0', 'bam_binaries/59/sq_1', 'bam_binaries/59/sq_2', 'bam_binaries/59/sq_3', 'bam_binaries/59/sq_4', 'bam_binaries/59/sq_5', 'bam_binaries/59/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/59/pg_0', 'bam_binaries/59/pg_1', 'bam_binaries/59/pg_2', 'bam_binaries/59/pg_3', 'bam_binaries/59/pg_4', 'bam_binaries/59/pg_5');
# COPY BINARY INTO bam.alignments_59 FROM 	('bam_binaries/59/alignments_0', 'bam_binaries/59/alignments_1', 'bam_binaries/59/alignments_2', 'bam_binaries/59/alignments_3', 'bam_binaries/59/alignments_4', 'bam_binaries/59/alignments_5', 'bam_binaries/59/alignments_6', 'bam_binaries/59/alignments_7', 'bam_binaries/59/alignments_8', 'bam_binaries/59/alignments_9', 'bam_binaries/59/alignments_10', 'bam_binaries/59/alignments_11');
# COPY BINARY INTO bam.alignments_extra_59 FROM ('bam_binaries/59/alignments_extra_0', 'bam_binaries/59/alignments_extra_1', 'bam_binaries/59/alignments_extra_2', 'bam_binaries/59/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/60/files_0', 'bam_binaries/60/files_1', 'bam_binaries/60/files_2', 'bam_binaries/60/files_3', 'bam_binaries/60/files_4', 'bam_binaries/60/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/60/sq_0', 'bam_binaries/60/sq_1', 'bam_binaries/60/sq_2', 'bam_binaries/60/sq_3', 'bam_binaries/60/sq_4', 'bam_binaries/60/sq_5', 'bam_binaries/60/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/60/pg_0', 'bam_binaries/60/pg_1', 'bam_binaries/60/pg_2', 'bam_binaries/60/pg_3', 'bam_binaries/60/pg_4', 'bam_binaries/60/pg_5');
# COPY BINARY INTO bam.alignments_60 FROM 	('bam_binaries/60/alignments_0', 'bam_binaries/60/alignments_1', 'bam_binaries/60/alignments_2', 'bam_binaries/60/alignments_3', 'bam_binaries/60/alignments_4', 'bam_binaries/60/alignments_5', 'bam_binaries/60/alignments_6', 'bam_binaries/60/alignments_7', 'bam_binaries/60/alignments_8', 'bam_binaries/60/alignments_9', 'bam_binaries/60/alignments_10', 'bam_binaries/60/alignments_11');
# COPY BINARY INTO bam.alignments_extra_60 FROM ('bam_binaries/60/alignments_extra_0', 'bam_binaries/60/alignments_extra_1', 'bam_binaries/60/alignments_extra_2', 'bam_binaries/60/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/61/files_0', 'bam_binaries/61/files_1', 'bam_binaries/61/files_2', 'bam_binaries/61/files_3', 'bam_binaries/61/files_4', 'bam_binaries/61/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/61/sq_0', 'bam_binaries/61/sq_1', 'bam_binaries/61/sq_2', 'bam_binaries/61/sq_3', 'bam_binaries/61/sq_4', 'bam_binaries/61/sq_5', 'bam_binaries/61/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/61/pg_0', 'bam_binaries/61/pg_1', 'bam_binaries/61/pg_2', 'bam_binaries/61/pg_3', 'bam_binaries/61/pg_4', 'bam_binaries/61/pg_5');
# COPY BINARY INTO bam.alignments_61 FROM 	('bam_binaries/61/alignments_0', 'bam_binaries/61/alignments_1', 'bam_binaries/61/alignments_2', 'bam_binaries/61/alignments_3', 'bam_binaries/61/alignments_4', 'bam_binaries/61/alignments_5', 'bam_binaries/61/alignments_6', 'bam_binaries/61/alignments_7', 'bam_binaries/61/alignments_8', 'bam_binaries/61/alignments_9', 'bam_binaries/61/alignments_10', 'bam_binaries/61/alignments_11');
# COPY BINARY INTO bam.alignments_extra_61 FROM ('bam_binaries/61/alignments_extra_0', 'bam_binaries/61/alignments_extra_1', 'bam_binaries/61/alignments_extra_2', 'bam_binaries/61/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/62/files_0', 'bam_binaries/62/files_1', 'bam_binaries/62/files_2', 'bam_binaries/62/files_3', 'bam_binaries/62/files_4', 'bam_binaries/62/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/62/sq_0', 'bam_binaries/62/sq_1', 'bam_binaries/62/sq_2', 'bam_binaries/62/sq_3', 'bam_binaries/62/sq_4', 'bam_binaries/62/sq_5', 'bam_binaries/62/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/62/pg_0', 'bam_binaries/62/pg_1', 'bam_binaries/62/pg_2', 'bam_binaries/62/pg_3', 'bam_binaries/62/pg_4', 'bam_binaries/62/pg_5');
# COPY BINARY INTO bam.alignments_62 FROM 	('bam_binaries/62/alignments_0', 'bam_binaries/62/alignments_1', 'bam_binaries/62/alignments_2', 'bam_binaries/62/alignments_3', 'bam_binaries/62/alignments_4', 'bam_binaries/62/alignments_5', 'bam_binaries/62/alignments_6', 'bam_binaries/62/alignments_7', 'bam_binaries/62/alignments_8', 'bam_binaries/62/alignments_9', 'bam_binaries/62/alignments_10', 'bam_binaries/62/alignments_11');
# COPY BINARY INTO bam.alignments_extra_62 FROM ('bam_binaries/62/alignments_extra_0', 'bam_binaries/62/alignments_extra_1', 'bam_binaries/62/alignments_extra_2', 'bam_binaries/62/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/63/files_0', 'bam_binaries/63/files_1', 'bam_binaries/63/files_2', 'bam_binaries/63/files_3', 'bam_binaries/63/files_4', 'bam_binaries/63/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/63/sq_0', 'bam_binaries/63/sq_1', 'bam_binaries/63/sq_2', 'bam_binaries/63/sq_3', 'bam_binaries/63/sq_4', 'bam_binaries/63/sq_5', 'bam_binaries/63/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/63/pg_0', 'bam_binaries/63/pg_1', 'bam_binaries/63/pg_2', 'bam_binaries/63/pg_3', 'bam_binaries/63/pg_4', 'bam_binaries/63/pg_5');
# COPY BINARY INTO bam.alignments_63 FROM 	('bam_binaries/63/alignments_0', 'bam_binaries/63/alignments_1', 'bam_binaries/63/alignments_2', 'bam_binaries/63/alignments_3', 'bam_binaries/63/alignments_4', 'bam_binaries/63/alignments_5', 'bam_binaries/63/alignments_6', 'bam_binaries/63/alignments_7', 'bam_binaries/63/alignments_8', 'bam_binaries/63/alignments_9', 'bam_binaries/63/alignments_10', 'bam_binaries/63/alignments_11');
# COPY BINARY INTO bam.alignments_extra_63 FROM ('bam_binaries/63/alignments_extra_0', 'bam_binaries/63/alignments_extra_1', 'bam_binaries/63/alignments_extra_2', 'bam_binaries/63/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/64/files_0', 'bam_binaries/64/files_1', 'bam_binaries/64/files_2', 'bam_binaries/64/files_3', 'bam_binaries/64/files_4', 'bam_binaries/64/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/64/sq_0', 'bam_binaries/64/sq_1', 'bam_binaries/64/sq_2', 'bam_binaries/64/sq_3', 'bam_binaries/64/sq_4', 'bam_binaries/64/sq_5', 'bam_binaries/64/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/64/pg_0', 'bam_binaries/64/pg_1', 'bam_binaries/64/pg_2', 'bam_binaries/64/pg_3', 'bam_binaries/64/pg_4', 'bam_binaries/64/pg_5');
# COPY BINARY INTO bam.alignments_64 FROM 	('bam_binaries/64/alignments_0', 'bam_binaries/64/alignments_1', 'bam_binaries/64/alignments_2', 'bam_binaries/64/alignments_3', 'bam_binaries/64/alignments_4', 'bam_binaries/64/alignments_5', 'bam_binaries/64/alignments_6', 'bam_binaries/64/alignments_7', 'bam_binaries/64/alignments_8', 'bam_binaries/64/alignments_9', 'bam_binaries/64/alignments_10', 'bam_binaries/64/alignments_11');
# COPY BINARY INTO bam.alignments_extra_64 FROM ('bam_binaries/64/alignments_extra_0', 'bam_binaries/64/alignments_extra_1', 'bam_binaries/64/alignments_extra_2', 'bam_binaries/64/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/65/files_0', 'bam_binaries/65/files_1', 'bam_binaries/65/files_2', 'bam_binaries/65/files_3', 'bam_binaries/65/files_4', 'bam_binaries/65/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/65/sq_0', 'bam_binaries/65/sq_1', 'bam_binaries/65/sq_2', 'bam_binaries/65/sq_3', 'bam_binaries/65/sq_4', 'bam_binaries/65/sq_5', 'bam_binaries/65/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/65/pg_0', 'bam_binaries/65/pg_1', 'bam_binaries/65/pg_2', 'bam_binaries/65/pg_3', 'bam_binaries/65/pg_4', 'bam_binaries/65/pg_5');
# COPY BINARY INTO bam.alignments_65 FROM 	('bam_binaries/65/alignments_0', 'bam_binaries/65/alignments_1', 'bam_binaries/65/alignments_2', 'bam_binaries/65/alignments_3', 'bam_binaries/65/alignments_4', 'bam_binaries/65/alignments_5', 'bam_binaries/65/alignments_6', 'bam_binaries/65/alignments_7', 'bam_binaries/65/alignments_8', 'bam_binaries/65/alignments_9', 'bam_binaries/65/alignments_10', 'bam_binaries/65/alignments_11');
# COPY BINARY INTO bam.alignments_extra_65 FROM ('bam_binaries/65/alignments_extra_0', 'bam_binaries/65/alignments_extra_1', 'bam_binaries/65/alignments_extra_2', 'bam_binaries/65/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/66/files_0', 'bam_binaries/66/files_1', 'bam_binaries/66/files_2', 'bam_binaries/66/files_3', 'bam_binaries/66/files_4', 'bam_binaries/66/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/66/sq_0', 'bam_binaries/66/sq_1', 'bam_binaries/66/sq_2', 'bam_binaries/66/sq_3', 'bam_binaries/66/sq_4', 'bam_binaries/66/sq_5', 'bam_binaries/66/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/66/pg_0', 'bam_binaries/66/pg_1', 'bam_binaries/66/pg_2', 'bam_binaries/66/pg_3', 'bam_binaries/66/pg_4', 'bam_binaries/66/pg_5');
# COPY BINARY INTO bam.alignments_66 FROM 	('bam_binaries/66/alignments_0', 'bam_binaries/66/alignments_1', 'bam_binaries/66/alignments_2', 'bam_binaries/66/alignments_3', 'bam_binaries/66/alignments_4', 'bam_binaries/66/alignments_5', 'bam_binaries/66/alignments_6', 'bam_binaries/66/alignments_7', 'bam_binaries/66/alignments_8', 'bam_binaries/66/alignments_9', 'bam_binaries/66/alignments_10', 'bam_binaries/66/alignments_11');
# COPY BINARY INTO bam.alignments_extra_66 FROM ('bam_binaries/66/alignments_extra_0', 'bam_binaries/66/alignments_extra_1', 'bam_binaries/66/alignments_extra_2', 'bam_binaries/66/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/67/files_0', 'bam_binaries/67/files_1', 'bam_binaries/67/files_2', 'bam_binaries/67/files_3', 'bam_binaries/67/files_4', 'bam_binaries/67/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/67/sq_0', 'bam_binaries/67/sq_1', 'bam_binaries/67/sq_2', 'bam_binaries/67/sq_3', 'bam_binaries/67/sq_4', 'bam_binaries/67/sq_5', 'bam_binaries/67/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/67/pg_0', 'bam_binaries/67/pg_1', 'bam_binaries/67/pg_2', 'bam_binaries/67/pg_3', 'bam_binaries/67/pg_4', 'bam_binaries/67/pg_5');
# COPY BINARY INTO bam.alignments_67 FROM 	('bam_binaries/67/alignments_0', 'bam_binaries/67/alignments_1', 'bam_binaries/67/alignments_2', 'bam_binaries/67/alignments_3', 'bam_binaries/67/alignments_4', 'bam_binaries/67/alignments_5', 'bam_binaries/67/alignments_6', 'bam_binaries/67/alignments_7', 'bam_binaries/67/alignments_8', 'bam_binaries/67/alignments_9', 'bam_binaries/67/alignments_10', 'bam_binaries/67/alignments_11');
# COPY BINARY INTO bam.alignments_extra_67 FROM ('bam_binaries/67/alignments_extra_0', 'bam_binaries/67/alignments_extra_1', 'bam_binaries/67/alignments_extra_2', 'bam_binaries/67/alignments_extra_3');
# 
# # COPY BINARY INTO bam.files FROM ('bam_binaries/68/files_0', 'bam_binaries/68/files_1', 'bam_binaries/68/files_2', 'bam_binaries/68/files_3', 'bam_binaries/68/files_4', 'bam_binaries/68/files_5');
# COPY BINARY INTO bam.sq	FROM ('bam_binaries/68/sq_0', 'bam_binaries/68/sq_1', 'bam_binaries/68/sq_2', 'bam_binaries/68/sq_3', 'bam_binaries/68/sq_4', 'bam_binaries/68/sq_5', 'bam_binaries/68/sq_6');
# COPY BINARY INTO bam.pg	FROM ('bam_binaries/68/pg_0', 'bam_binaries/68/pg_1', 'bam_binaries/68/pg_2', 'bam_binaries/68/pg_3', 'bam_binaries/68/pg_4', 'bam_binaries/68/pg_5');
# COPY BINARY INTO bam.alignments_68 FROM 	('bam_binaries/68/alignments_0', 'bam_binaries/68/alignments_1', 'bam_binaries/68/alignments_2', 'bam_binaries/68/alignments_3', 'bam_binaries/68/alignments_4', 'bam_binaries/68/alignments_5', 'bam_binaries/68/alignments_6', 'bam_binaries/68/alignments_7', 'bam_binaries/68/alignments_8', 'bam_binaries/68/alignments_9', 'bam_binaries/68/alignments_10', 'bam_binaries/68/alignments_11');
# COPY BINARY INTO bam.alignments_extra_68 FROM ('bam_binaries/68/alignments_extra_0', 'bam_binaries/68/alignments_extra_1', 'bam_binaries/68/alignments_extra_2', 'bam_binaries/68/alignments_extra_3');
# 
# # <bam_loader>: Loader finished processing 60 BAM files...
# 
# 10:49:55 >  
# 10:49:55 >  "/usr/bin/python2" "bam_loader_files.SQL.py" "bam_loader_files"
# 10:49:55 >  


# 10:49:56 >  
# 10:49:56 >  "Done."
# 10:49:56 >  
