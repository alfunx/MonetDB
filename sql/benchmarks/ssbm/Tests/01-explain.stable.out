stdout of test '01-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:45 >  
# 23:10:45 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:45 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:45 >  
# 23:10:45 >  "/usr/bin/python2" "01-explain.SQL.py" "01-explain"
# 23:10:45 >  

#set optimizer = 'sequential_pipe';
#explain
#select sum(lo_extendedprice*lo_discount) as revenue
#	from lineorder, dwdate
#	where lo_orderdate = d_datekey
#		and d_year = 1993
#		and lo_discount between 1 and 3
#		and lo_quantity < 25;
% .explain # table_name
% mal # name
% clob # type
% 254 # length
function user.s2_1(A0:int,A1:int,A2:int,A3:int):void;
    X_63:void := querylog.define("explain\nselect sum(lo_extendedprice*lo_discount) as revenue\n from lineorder, dwdate\n where lo_orderdate = d_datekey\n and d_year = 1993\n and lo_discount between 1 and 3\n and lo_quantity < 25;","sequential_pipe",43);
    X_5 := sql.mvc();
    X_9:bat[:int] := sql.bind(X_5,"sys","lineorder","lo_quantity",0);
    X_17:bat[:int] := sql.bind(X_5,"sys","lineorder","lo_discount",0);
    C_6:bat[:oid] := sql.tid(X_5,"sys","lineorder");
    C_72 := algebra.subselect(X_17,C_6,A1,A2,true,true,false);
    (C_19,r1_22) := sql.bind(X_5,"sys","lineorder","lo_discount",2);
    C_73 := algebra.subselect(r1_22,nil:bat[:oid],A1,A2,true,true,false);
    X_21:bat[:int] := sql.bind(X_5,"sys","lineorder","lo_discount",1);
    C_75 := algebra.subselect(X_21,C_6,A1,A2,true,true,false);
    C_22 := sql.subdelta(C_72,C_6,C_19,C_73,C_75);
    C_76 := algebra.thetasubselect(X_9,C_22,A3,"<");
    (C_12,r1_12) := sql.bind(X_5,"sys","lineorder","lo_quantity",2);
    C_77 := algebra.thetasubselect(r1_12,nil:bat[:oid],A3,"<");
    X_15:bat[:int] := sql.bind(X_5,"sys","lineorder","lo_quantity",1);
    C_78 := algebra.thetasubselect(X_15,C_22,A3,"<");
    C_25 := sql.subdelta(C_76,C_22,C_12,C_77,C_78);
    X_27:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_29,r1_37) := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_31:bat[:oid] := sql.bind_idxbat(X_5,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_32 := sql.projectdelta(C_25,X_27,X_29,r1_37,X_31);
    X_35:bat[:int] := sql.bind(X_5,"sys","dwdate","d_year",0);
    C_33:bat[:oid] := sql.tid(X_5,"sys","dwdate");
    C_79 := algebra.subselect(X_35,C_33,A0,A0,true,false,false);
    (C_37,r1_47) := sql.bind(X_5,"sys","dwdate","d_year",2);
    C_80 := algebra.subselect(r1_47,nil:bat[:oid],A0,A0,true,false,false);
    X_39:bat[:int] := sql.bind(X_5,"sys","dwdate","d_year",1);
    C_81 := algebra.subselect(X_39,C_33,A0,A0,true,false,false);
    C_40 := sql.subdelta(C_79,C_33,C_37,C_80,C_81);
    (X_41,r1_55) := algebra.subjoin(X_32,C_40,nil:BAT,nil:BAT,false,nil:lng);
    X_45:bat[:int] := sql.bind(X_5,"sys","lineorder","lo_extendedprice",0);
    (C_47,r1_62) := sql.bind(X_5,"sys","lineorder","lo_extendedprice",2);
    X_49:bat[:int] := sql.bind(X_5,"sys","lineorder","lo_extendedprice",1);
    X_50 := sql.projectdelta(C_25,X_45,C_47,r1_62,X_49);
    X_51 := algebra.projection(X_41,X_50);
    X_52 := batcalc.lng(X_51);
    X_53 := sql.projectdelta(C_25,X_17,C_19,r1_22,X_21);
    X_54 := algebra.projection(X_41,X_53);
    X_55:bat[:lng] := batcalc.*(X_52,X_54);
    X_56:lng := aggr.sum(X_55);
    sql.resultSet("sys.L1","revenue","bigint",64,0,7,X_56);
end user.s2_1;

# 23:10:45 >  
# 23:10:45 >  "Done."
# 23:10:45 >  

