stdout of test '09-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:47 >  
# 23:10:47 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:47 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:47 >  
# 23:10:47 >  "/usr/bin/python2" "09-explain.SQL.py" "09-explain"
# 23:10:47 >  

#set optimizer = 'sequential_pipe';
#explain
#select c_city, s_city, d_year, sum(lo_revenue) as revenue
#	from customer, lineorder, supplier, dwdate
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_orderdate = d_datekey
#		and c_nation = 'UNITED KINGDOM'
#		and (c_city='UNITED KI1' or c_city='UNITED KI5')
#		and (s_city='UNITED KI1' or s_city='UNITED KI5')
#		and s_nation = 'UNITED KINGDOM'
#		and d_year >= 1992 and d_year <= 1997
#	group by c_city, s_city, d_year
#	order by d_year asc, revenue desc;
% .explain # table_name
% mal # name
% clob # type
% 567 # length
function user.s2_1(A0:str,A1:str,A2:str,A3:str,A4:str,A5:str,A6:int,A7:int):void;
    X_159:void := querylog.define("explain\nselect c_city, s_city, d_year, sum(lo_revenue) as revenue\n from customer, lineorder, supplier, dwdate\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_orderdate = d_datekey\n and c_nation = \\'UNITED KINGDOM\\'\n and (c_city=\\'UNITED KI1\\' or c_city=\\'UNITED KI5\\')\n and (s_city=\\'UNITED KI1\\' or s_city=\\'UNITED KI5\\')\n and s_nation = \\'UNITED KINGDOM\\'\n and d_year >= 1992 and d_year <= 1997\n group by c_city, s_city, d_year\n order by d_year asc, revenue desc;","sequential_pipe",118);
    X_121 := bat.new(nil:oid,nil:str);
    X_129 := bat.append(X_121,"sys.customer");
    X_136 := bat.append(X_129,"sys.supplier");
    X_142 := bat.append(X_136,"sys.dwdate");
    X_150 := bat.append(X_142,"sys.L1");
    X_124 := bat.new(nil:oid,nil:str);
    X_131 := bat.append(X_124,"c_city");
    X_138 := bat.append(X_131,"s_city");
    X_144 := bat.append(X_138,"d_year");
    X_152 := bat.append(X_144,"revenue");
    X_125 := bat.new(nil:oid,nil:str);
    X_132 := bat.append(X_125,"clob");
    X_139 := bat.append(X_132,"clob");
    X_145 := bat.append(X_139,"int");
    X_154 := bat.append(X_145,"hugeint");
    X_126 := bat.new(nil:oid,nil:int);
    X_134 := bat.append(X_126,0);
    X_140 := bat.append(X_134,0);
    X_147 := bat.append(X_140,32);
    X_156 := bat.append(X_147,128);
    X_128 := bat.new(nil:oid,nil:int);
    X_135 := bat.append(X_128,0);
    X_141 := bat.append(X_135,0);
    X_149 := bat.append(X_141,0);
    X_158 := bat.append(X_149,0);
    X_9 := sql.mvc();
    C_10:bat[:oid] := sql.tid(X_9,"sys","lineorder");
    X_13:bat[:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_16,r1_16) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_19:bat[:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_21 := sql.projectdelta(C_10,X_13,X_16,r1_16,X_19);
    X_24:bat[:str] := sql.bind(X_9,"sys","customer","c_city",0);
    X_29:bat[:str] := sql.bind(X_9,"sys","customer","c_nation",0);
    C_22:bat[:oid] := sql.tid(X_9,"sys","customer");
    C_168 := algebra.subselect(X_29,C_22,A0,A0,true,false,false);
    (C_31,r1_35) := sql.bind(X_9,"sys","customer","c_nation",2);
    C_169 := algebra.subselect(r1_35,nil:bat[:oid],A0,A0,true,false,false);
    X_33:bat[:str] := sql.bind(X_9,"sys","customer","c_nation",1);
    C_171 := algebra.subselect(X_33,C_22,A0,A0,true,false,false);
    C_34 := sql.subdelta(C_168,C_22,C_31,C_169,C_171);
    C_172 := algebra.subselect(X_24,C_34,A1,A1,true,false,false);
    (C_26,r1_27) := sql.bind(X_9,"sys","customer","c_city",2);
    C_173 := algebra.subselect(r1_27,nil:bat[:oid],A1,A1,true,false,false);
    X_28:bat[:str] := sql.bind(X_9,"sys","customer","c_city",1);
    C_174 := algebra.subselect(X_28,C_34,A1,A1,true,false,false);
    C_37 := sql.subdelta(C_172,C_34,C_26,C_173,C_174);
    C_175 := algebra.subselect(X_24,C_34,A2,A2,true,false,false);
    C_176 := algebra.subselect(r1_27,nil:bat[:oid],A2,A2,true,false,false);
    C_177 := algebra.subselect(X_28,C_34,A2,A2,true,false,false);
    C_38 := sql.subdelta(C_175,C_34,C_26,C_176,C_177);
    X_39 := bat.mergecand(C_37,C_38);
    (X_40,r1_50) := algebra.subjoin(X_21,X_39,nil:BAT,nil:BAT,false,nil:lng);
    X_44:bat[:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_46,r1_57) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_48:bat[:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_49 := sql.projectdelta(C_10,X_44,X_46,r1_57,X_48);
    X_50 := algebra.projection(X_40,X_49);
    X_53:bat[:str] := sql.bind(X_9,"sys","supplier","s_city",0);
    X_58:bat[:str] := sql.bind(X_9,"sys","supplier","s_nation",0);
    C_51:bat[:oid] := sql.tid(X_9,"sys","supplier");
    C_178 := algebra.subselect(X_58,C_51,A5,A5,true,false,false);
    (C_60,r1_75) := sql.bind(X_9,"sys","supplier","s_nation",2);
    C_179 := algebra.subselect(r1_75,nil:bat[:oid],A5,A5,true,false,false);
    X_62:bat[:str] := sql.bind(X_9,"sys","supplier","s_nation",1);
    C_180 := algebra.subselect(X_62,C_51,A5,A5,true,false,false);
    C_63 := sql.subdelta(C_178,C_51,C_60,C_179,C_180);
    C_181 := algebra.subselect(X_53,C_63,A3,A3,true,false,false);
    (C_55,r1_67) := sql.bind(X_9,"sys","supplier","s_city",2);
    C_182 := algebra.subselect(r1_67,nil:bat[:oid],A3,A3,true,false,false);
    X_57:bat[:str] := sql.bind(X_9,"sys","supplier","s_city",1);
    C_183 := algebra.subselect(X_57,C_63,A3,A3,true,false,false);
    C_64 := sql.subdelta(C_181,C_63,C_55,C_182,C_183);
    C_184 := algebra.subselect(X_53,C_63,A4,A4,true,false,false);
    C_185 := algebra.subselect(r1_67,nil:bat[:oid],A4,A4,true,false,false);
    C_186 := algebra.subselect(X_57,C_63,A4,A4,true,false,false);
    C_65 := sql.subdelta(C_184,C_63,C_55,C_185,C_186);
    X_66 := bat.mergecand(C_64,C_65);
    (X_67,r1_90) := algebra.subjoin(X_50,X_66,nil:BAT,nil:BAT,false,nil:lng);
    X_69:bat[:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_71,r1_97) := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_73:bat[:oid] := sql.bind_idxbat(X_9,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_74 := sql.projectdelta(C_10,X_69,X_71,r1_97,X_73);
    X_75:bat[:oid] := algebra.projectionpath(X_67,X_40,X_74);
    X_78:bat[:int] := sql.bind(X_9,"sys","dwdate","d_year",0);
    C_76:bat[:oid] := sql.tid(X_9,"sys","dwdate");
    C_187 := algebra.subselect(X_78,C_76,A6,A7,true,true,false);
    (C_80,r1_108) := sql.bind(X_9,"sys","dwdate","d_year",2);
    C_188 := algebra.subselect(r1_108,nil:bat[:oid],A6,A7,true,true,false);
    X_82:bat[:int] := sql.bind(X_9,"sys","dwdate","d_year",1);
    C_189 := algebra.subselect(X_82,C_76,A6,A7,true,true,false);
    C_83 := sql.subdelta(C_187,C_76,C_80,C_188,C_189);
    (X_84,r1_120) := algebra.subjoin(X_75,C_83,nil:BAT,nil:BAT,false,nil:lng);
    X_86:bat[:int] := sql.bind(X_9,"sys","lineorder","lo_revenue",0);
    (C_88,r1_124) := sql.bind(X_9,"sys","lineorder","lo_revenue",2);
    X_90:bat[:int] := sql.bind(X_9,"sys","lineorder","lo_revenue",1);
    X_91 := sql.projectdelta(C_10,X_86,C_88,r1_124,X_90);
    X_92:bat[:int] := algebra.projectionpath(X_84,X_67,X_40,X_91);
    X_93 := sql.projectdelta(X_66,X_53,C_55,r1_67,X_57);
    X_94:bat[:str] := algebra.projectionpath(X_84,r1_90,X_93);
    X_95 := sql.projectdelta(X_39,X_24,C_26,r1_27,X_28);
    X_96:bat[:str] := algebra.projectionpath(X_84,X_67,r1_50,X_95);
    X_97 := sql.projectdelta(C_83,X_78,C_80,r1_108,X_82);
    X_98 := algebra.projection(r1_120,X_97);
    (X_99,r1_141,r2_141) := group.subgroup(X_98);
    (X_102,r1_144,r2_144) := group.subgroup(X_96,X_99);
    (X_105,r1_147,r2_147) := group.subgroupdone(X_94,X_102);
    X_108:bat[:hge] := aggr.subsum(X_92,X_105,r1_147,true,true);
    X_109 := algebra.projection(r1_147,X_98);
    (X_110,r1_154,r2_154) := algebra.subsort(X_109,false,false);
    (X_113,r1_159,r2_159) := algebra.subsort(X_108,r1_154,r2_154,true,false);
    X_116:bat[:str] := algebra.projectionpath(r1_159,r1_147,X_96);
    X_117:bat[:str] := algebra.projectionpath(r1_159,r1_147,X_94);
    X_118 := algebra.projection(r1_159,X_109);
    X_119 := algebra.projection(r1_159,X_108);
    sql.resultSet(X_150,X_152,X_154,X_156,X_158,X_116,X_117,X_118,X_119);
end user.s2_1;

# 23:10:47 >  
# 23:10:47 >  "Done."
# 23:10:47 >  

