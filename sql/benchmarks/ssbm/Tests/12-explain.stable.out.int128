stdout of test '12-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "12-explain.SQL.py" "12-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_region = 'AMERICA'
#		and (d_year = 1997 or d_year = 1998)
#		and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
#	group by d_year, s_nation, p_category
#	order by d_year, s_nation, p_category;
% .explain # table_name
% mal # name
% clob # type
% 554 # length
function user.s2_1(A0:str,A1:str,A2:int,A3:int,A4:str,A5:str):void;
    X_199:void := querylog.define("explain\nselect d_year, s_nation, p_category, sum(lo_revenue-lo_supplycost) as profit1\n from dwdate, customer, supplier, part, lineorder\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_partkey = p_partkey\n and lo_orderdate = d_datekey\n and c_region = \\'AMERICA\\'\n and s_region = \\'AMERICA\\'\n and (d_year = 1997 or d_year = 1998)\n and (p_mfgr = \\'MFGR#1\\' or p_mfgr = \\'MFGR#2\\')\n group by d_year, s_nation, p_category\n order by d_year, s_nation, p_category;","sequential_pipe",129);
    X_161 := bat.new(nil:oid,nil:str);
    X_169 := bat.append(X_161,"sys.dwdate");
    X_177 := bat.append(X_169,"sys.supplier");
    X_184 := bat.append(X_177,"sys.part");
    X_190 := bat.append(X_184,"sys.L1");
    X_164 := bat.new(nil:oid,nil:str);
    X_171 := bat.append(X_164,"d_year");
    X_179 := bat.append(X_171,"s_nation");
    X_186 := bat.append(X_179,"p_category");
    X_192 := bat.append(X_186,"profit1");
    X_165 := bat.new(nil:oid,nil:str);
    X_172 := bat.append(X_165,"int");
    X_180 := bat.append(X_172,"clob");
    X_187 := bat.append(X_180,"clob");
    X_194 := bat.append(X_187,"hugeint");
    X_166 := bat.new(nil:oid,nil:int);
    X_174 := bat.append(X_166,32);
    X_182 := bat.append(X_174,0);
    X_188 := bat.append(X_182,0);
    X_196 := bat.append(X_188,128);
    X_168 := bat.new(nil:oid,nil:int);
    X_176 := bat.append(X_168,0);
    X_183 := bat.append(X_176,0);
    X_189 := bat.append(X_183,0);
    X_198 := bat.append(X_189,0);
    X_7 := sql.mvc();
    C_8:bat[:oid] := sql.tid(X_7,"sys","lineorder");
    X_11:bat[:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_14,r1_14) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_17:bat[:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_19 := sql.delta(X_11,X_14,r1_14,X_17);
    X_20 := algebra.projection(C_8,X_19);
    C_21:bat[:oid] := sql.tid(X_7,"sys","dwdate");
    X_23:bat[:int] := sql.bind(X_7,"sys","dwdate","d_year",0);
    (C_25,r1_25) := sql.bind(X_7,"sys","dwdate","d_year",2);
    X_27:bat[:int] := sql.bind(X_7,"sys","dwdate","d_year",1);
    X_28 := sql.delta(X_23,C_25,r1_25,X_27);
    X_29 := algebra.projection(C_21,X_28);
    C_30 := algebra.subselect(X_29,A2,A2,true,false,false);
    C_33 := algebra.subselect(X_29,A3,A3,true,false,false);
    X_34 := bat.mergecand(C_30,C_33);
    X_35 := algebra.projection(X_34,C_21);
    (X_36,r1_39) := algebra.subjoin(X_20,X_35,nil:BAT,nil:BAT,false,nil:lng);
    X_40:bat[:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_42,r1_46) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_44:bat[:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_45 := sql.delta(X_40,X_42,r1_46,X_44);
    X_46:bat[:oid] := algebra.projectionpath(X_36,C_8,X_45);
    C_47:bat[:oid] := sql.tid(X_7,"sys","part");
    X_49:bat[:str] := sql.bind(X_7,"sys","part","p_mfgr",0);
    (C_51,r1_56) := sql.bind(X_7,"sys","part","p_mfgr",2);
    X_53:bat[:str] := sql.bind(X_7,"sys","part","p_mfgr",1);
    X_54 := sql.delta(X_49,C_51,r1_56,X_53);
    X_55 := algebra.projection(C_47,X_54);
    C_56 := algebra.subselect(X_55,A4,A4,true,false,false);
    C_57 := algebra.subselect(X_55,A5,A5,true,false,false);
    X_58 := bat.mergecand(C_56,C_57);
    X_59 := algebra.projection(X_58,C_47);
    (X_60,r1_68) := algebra.subjoin(X_46,X_59,nil:BAT,nil:BAT,false,nil:lng);
    X_62:bat[:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_64,r1_73) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_66:bat[:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_67 := sql.delta(X_62,X_64,r1_73,X_66);
    X_68:bat[:oid] := algebra.projectionpath(X_60,X_36,C_8,X_67);
    C_69:bat[:oid] := sql.tid(X_7,"sys","supplier");
    X_71:bat[:str] := sql.bind(X_7,"sys","supplier","s_region",0);
    (C_73,r1_84) := sql.bind(X_7,"sys","supplier","s_region",2);
    X_75:bat[:str] := sql.bind(X_7,"sys","supplier","s_region",1);
    X_76 := sql.delta(X_71,C_73,r1_84,X_75);
    X_77 := algebra.projection(C_69,X_76);
    C_78 := algebra.subselect(X_77,A1,A1,true,false,false);
    X_79 := algebra.projection(C_78,C_69);
    (X_80,r1_92) := algebra.subjoin(X_68,X_79,nil:BAT,nil:BAT,false,nil:lng);
    X_82:bat[:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_84,r1_99) := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_86:bat[:oid] := sql.bind_idxbat(X_7,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_87 := sql.delta(X_82,X_84,r1_99,X_86);
    X_88:bat[:oid] := algebra.projectionpath(X_80,X_60,X_36,C_8,X_87);
    C_89:bat[:oid] := sql.tid(X_7,"sys","customer");
    X_91:bat[:str] := sql.bind(X_7,"sys","customer","c_region",0);
    (C_93,r1_111) := sql.bind(X_7,"sys","customer","c_region",2);
    X_95:bat[:str] := sql.bind(X_7,"sys","customer","c_region",1);
    X_96 := sql.delta(X_91,C_93,r1_111,X_95);
    X_97 := algebra.projection(C_89,X_96);
    C_98 := algebra.subselect(X_97,A0,A0,true,false,false);
    X_99 := algebra.projection(C_98,C_89);
    (X_100,r1_122) := algebra.subjoin(X_88,X_99,nil:BAT,nil:BAT,false,nil:lng);
    X_102:bat[:str] := sql.bind(X_7,"sys","part","p_category",0);
    (C_104,r1_126) := sql.bind(X_7,"sys","part","p_category",2);
    X_106:bat[:str] := sql.bind(X_7,"sys","part","p_category",1);
    X_107 := sql.delta(X_102,C_104,r1_126,X_106);
    X_108:bat[:str] := algebra.projectionpath(X_100,X_80,r1_68,X_58,C_47,X_107);
    X_109:bat[:str] := sql.bind(X_7,"sys","supplier","s_nation",0);
    (C_111,r1_137) := sql.bind(X_7,"sys","supplier","s_nation",2);
    X_113:bat[:str] := sql.bind(X_7,"sys","supplier","s_nation",1);
    X_114 := sql.delta(X_109,C_111,r1_137,X_113);
    X_115:bat[:str] := algebra.projectionpath(X_100,r1_92,C_78,C_69,X_114);
    X_116:bat[:int] := algebra.projectionpath(X_100,X_80,X_60,r1_39,X_34,X_29);
    (X_117,r1_150,r2_150) := group.subgroup(X_116);
    (X_120,r1_153,r2_153) := group.subgroup(X_115,X_117);
    (X_123,r1_156,r2_156) := group.subgroupdone(X_108,X_120);
    X_126 := algebra.projection(r1_156,X_108);
    X_127 := algebra.projection(r1_156,X_115);
    X_128 := algebra.projection(r1_156,X_116);
    X_141:bat[:int] := sql.bind(X_7,"sys","lineorder","lo_revenue",0);
    (C_143,r1_178) := sql.bind(X_7,"sys","lineorder","lo_revenue",2);
    X_145:bat[:int] := sql.bind(X_7,"sys","lineorder","lo_revenue",1);
    X_146 := sql.delta(X_141,C_143,r1_178,X_145);
    X_147:bat[:int] := algebra.projectionpath(X_100,X_80,X_60,X_36,C_8,X_146);
    X_148 := batcalc.lng(X_147);
    X_149:bat[:int] := sql.bind(X_7,"sys","lineorder","lo_supplycost",0);
    (C_151,r1_190) := sql.bind(X_7,"sys","lineorder","lo_supplycost",2);
    X_153:bat[:int] := sql.bind(X_7,"sys","lineorder","lo_supplycost",1);
    X_154 := sql.delta(X_149,C_151,r1_190,X_153);
    X_155:bat[:int] := algebra.projectionpath(X_100,X_80,X_60,X_36,C_8,X_154);
    X_156 := batcalc.lng(X_155);
    X_157:bat[:lng] := batcalc.-(X_148,X_156);
    X_158:bat[:hge] := aggr.subsum(X_157,X_123,r1_156,true,true);
    (X_129,r1_162,r2_162) := algebra.subsort(X_128,false,false);
    (X_132,r1_167,r2_167) := algebra.subsort(X_127,r1_162,r2_162,false,false);
    (X_135,r1_170,r2_170) := algebra.subsort(X_126,r1_167,r2_167,false,false);
    X_138 := algebra.projection(r1_170,X_128);
    X_139 := algebra.projection(r1_170,X_127);
    X_140 := algebra.projection(r1_170,X_126);
    X_159 := algebra.projection(r1_170,X_158);
    sql.resultSet(X_190,X_192,X_194,X_196,X_198,X_138,X_139,X_140,X_159);
end user.s2_1;

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

