stdout of test '13-explain` in directory 'sql/benchmarks/ssbm` itself:


# 23:10:48 >  
# 23:10:48 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35257" "--set" "mapi_usock=/var/tmp/mtest-17595/.s.monetdb.35257" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_ssbm" "--set" "mal_listing=0"
# 23:10:48 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_ssbm', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:35257/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17595/.s.monetdb.35257
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 23:10:48 >  
# 23:10:48 >  "/usr/bin/python2" "13-explain.SQL.py" "13-explain"
# 23:10:48 >  

#set optimizer = 'sequential_pipe';
#explain
#select d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1
#	from dwdate, customer, supplier, part, lineorder
#	where lo_custkey = c_custkey
#		and lo_suppkey = s_suppkey
#		and lo_partkey = p_partkey
#		and lo_orderdate = d_datekey
#		and c_region = 'AMERICA'
#		and s_nation = 'UNITED STATES'
#		and (d_year = 1997 or d_year = 1998)
#		and p_category = 'MFGR#14'
#	group by d_year, s_city, p_brand1
#	order by d_year, s_city, p_brand1;
% .explain # table_name
% mal # name
% clob # type
% 526 # length
function user.s2_1(A0:str,A1:str,A2:int,A3:int,A4:str):void;
    X_196:void := querylog.define("explain\nselect d_year, s_city, p_brand1, sum(lo_revenue-lo_supplycost) as profit1\n from dwdate, customer, supplier, part, lineorder\n where lo_custkey = c_custkey\n and lo_suppkey = s_suppkey\n and lo_partkey = p_partkey\n and lo_orderdate = d_datekey\n and c_region = \\'AMERICA\\'\n and s_nation = \\'UNITED STATES\\'\n and (d_year = 1997 or d_year = 1998)\n and p_category = \\'MFGR#14\\'\n group by d_year, s_city, p_brand1\n order by d_year, s_city, p_brand1;","sequential_pipe",127);
    X_158 := bat.new(nil:oid,nil:str);
    X_166 := bat.append(X_158,"sys.dwdate");
    X_174 := bat.append(X_166,"sys.supplier");
    X_181 := bat.append(X_174,"sys.part");
    X_187 := bat.append(X_181,"sys.L1");
    X_161 := bat.new(nil:oid,nil:str);
    X_168 := bat.append(X_161,"d_year");
    X_176 := bat.append(X_168,"s_city");
    X_183 := bat.append(X_176,"p_brand1");
    X_189 := bat.append(X_183,"profit1");
    X_162 := bat.new(nil:oid,nil:str);
    X_169 := bat.append(X_162,"int");
    X_177 := bat.append(X_169,"clob");
    X_184 := bat.append(X_177,"clob");
    X_191 := bat.append(X_184,"bigint");
    X_163 := bat.new(nil:oid,nil:int);
    X_171 := bat.append(X_163,32);
    X_179 := bat.append(X_171,0);
    X_185 := bat.append(X_179,0);
    X_193 := bat.append(X_185,64);
    X_165 := bat.new(nil:oid,nil:int);
    X_173 := bat.append(X_165,0);
    X_180 := bat.append(X_173,0);
    X_186 := bat.append(X_180,0);
    X_195 := bat.append(X_186,0);
    X_6 := sql.mvc();
    C_7:bat[:oid] := sql.tid(X_6,"sys","lineorder");
    X_10:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",0);
    (X_13,r1_13) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",2);
    X_16:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_orderdate_fkey",1);
    X_18 := sql.delta(X_10,X_13,r1_13,X_16);
    X_19 := algebra.projection(C_7,X_18);
    C_20:bat[:oid] := sql.tid(X_6,"sys","dwdate");
    X_22:bat[:int] := sql.bind(X_6,"sys","dwdate","d_year",0);
    (C_24,r1_24) := sql.bind(X_6,"sys","dwdate","d_year",2);
    X_26:bat[:int] := sql.bind(X_6,"sys","dwdate","d_year",1);
    X_27 := sql.delta(X_22,C_24,r1_24,X_26);
    X_28 := algebra.projection(C_20,X_27);
    C_29 := algebra.subselect(X_28,A2,A2,true,false,false);
    C_32 := algebra.subselect(X_28,A3,A3,true,false,false);
    X_33 := bat.mergecand(C_29,C_32);
    X_34 := algebra.projection(X_33,C_20);
    (X_35,r1_38) := algebra.subjoin(X_19,X_34,nil:BAT,nil:BAT,false,nil:lng);
    X_39:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",0);
    (X_41,r1_45) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",2);
    X_43:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_partkey_fkey",1);
    X_44 := sql.delta(X_39,X_41,r1_45,X_43);
    X_45:bat[:oid] := algebra.projectionpath(X_35,C_7,X_44);
    C_46:bat[:oid] := sql.tid(X_6,"sys","part");
    X_48:bat[:str] := sql.bind(X_6,"sys","part","p_category",0);
    (C_50,r1_55) := sql.bind(X_6,"sys","part","p_category",2);
    X_52:bat[:str] := sql.bind(X_6,"sys","part","p_category",1);
    X_53 := sql.delta(X_48,C_50,r1_55,X_52);
    X_54 := algebra.projection(C_46,X_53);
    C_55 := algebra.subselect(X_54,A4,A4,true,false,false);
    X_56 := algebra.projection(C_55,C_46);
    (X_57,r1_63) := algebra.subjoin(X_45,X_56,nil:BAT,nil:BAT,false,nil:lng);
    X_59:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",0);
    (X_61,r1_67) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",2);
    X_63:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_suppkey_fkey",1);
    X_64 := sql.delta(X_59,X_61,r1_67,X_63);
    X_65:bat[:oid] := algebra.projectionpath(X_57,X_35,C_7,X_64);
    C_66:bat[:oid] := sql.tid(X_6,"sys","supplier");
    X_68:bat[:str] := sql.bind(X_6,"sys","supplier","s_nation",0);
    (C_70,r1_78) := sql.bind(X_6,"sys","supplier","s_nation",2);
    X_72:bat[:str] := sql.bind(X_6,"sys","supplier","s_nation",1);
    X_73 := sql.delta(X_68,C_70,r1_78,X_72);
    X_74 := algebra.projection(C_66,X_73);
    C_75 := algebra.subselect(X_74,A1,A1,true,false,false);
    X_76 := algebra.projection(C_75,C_66);
    (X_77,r1_89) := algebra.subjoin(X_65,X_76,nil:BAT,nil:BAT,false,nil:lng);
    X_79:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",0);
    (X_81,r1_96) := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",2);
    X_83:bat[:oid] := sql.bind_idxbat(X_6,"sys","lineorder","lineorder_lo_custkey_fkey",1);
    X_84 := sql.delta(X_79,X_81,r1_96,X_83);
    X_85:bat[:oid] := algebra.projectionpath(X_77,X_57,X_35,C_7,X_84);
    C_86:bat[:oid] := sql.tid(X_6,"sys","customer");
    X_88:bat[:str] := sql.bind(X_6,"sys","customer","c_region",0);
    (C_90,r1_108) := sql.bind(X_6,"sys","customer","c_region",2);
    X_92:bat[:str] := sql.bind(X_6,"sys","customer","c_region",1);
    X_93 := sql.delta(X_88,C_90,r1_108,X_92);
    X_94 := algebra.projection(C_86,X_93);
    C_95 := algebra.subselect(X_94,A0,A0,true,false,false);
    X_96 := algebra.projection(C_95,C_86);
    (X_97,r1_116) := algebra.subjoin(X_85,X_96,nil:BAT,nil:BAT,false,nil:lng);
    X_99:bat[:str] := sql.bind(X_6,"sys","part","p_brand1",0);
    (C_101,r1_120) := sql.bind(X_6,"sys","part","p_brand1",2);
    X_103:bat[:str] := sql.bind(X_6,"sys","part","p_brand1",1);
    X_104 := sql.delta(X_99,C_101,r1_120,X_103);
    X_105:bat[:str] := algebra.projectionpath(X_97,X_77,r1_63,C_55,C_46,X_104);
    X_106:bat[:str] := sql.bind(X_6,"sys","supplier","s_city",0);
    (C_108,r1_131) := sql.bind(X_6,"sys","supplier","s_city",2);
    X_110:bat[:str] := sql.bind(X_6,"sys","supplier","s_city",1);
    X_111 := sql.delta(X_106,C_108,r1_131,X_110);
    X_112:bat[:str] := algebra.projectionpath(X_97,r1_89,C_75,C_66,X_111);
    X_113:bat[:int] := algebra.projectionpath(X_97,X_77,X_57,r1_38,X_33,X_28);
    (X_114,r1_144,r2_144) := group.subgroup(X_113);
    (X_117,r1_147,r2_147) := group.subgroup(X_112,X_114);
    (X_120,r1_150,r2_150) := group.subgroupdone(X_105,X_117);
    X_123 := algebra.projection(r1_150,X_105);
    X_124 := algebra.projection(r1_150,X_112);
    X_125 := algebra.projection(r1_150,X_113);
    X_138:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_revenue",0);
    (C_140,r1_172) := sql.bind(X_6,"sys","lineorder","lo_revenue",2);
    X_142:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_revenue",1);
    X_143 := sql.delta(X_138,C_140,r1_172,X_142);
    X_144:bat[:int] := algebra.projectionpath(X_97,X_77,X_57,X_35,C_7,X_143);
    X_145 := batcalc.lng(X_144);
    X_146:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_supplycost",0);
    (C_148,r1_184) := sql.bind(X_6,"sys","lineorder","lo_supplycost",2);
    X_150:bat[:int] := sql.bind(X_6,"sys","lineorder","lo_supplycost",1);
    X_151 := sql.delta(X_146,C_148,r1_184,X_150);
    X_152:bat[:int] := algebra.projectionpath(X_97,X_77,X_57,X_35,C_7,X_151);
    X_153 := batcalc.lng(X_152);
    X_154:bat[:lng] := batcalc.-(X_145,X_153);
    X_155:bat[:lng] := aggr.subsum(X_154,X_120,r1_150,true,true);
    (X_126,r1_156,r2_156) := algebra.subsort(X_125,false,false);
    (X_129,r1_161,r2_161) := algebra.subsort(X_124,r1_156,r2_156,false,false);
    (X_132,r1_164,r2_164) := algebra.subsort(X_123,r1_161,r2_161,false,false);
    X_135 := algebra.projection(r1_164,X_125);
    X_136 := algebra.projection(r1_164,X_124);
    X_137 := algebra.projection(r1_164,X_123);
    X_156 := algebra.projection(r1_164,X_155);
    sql.resultSet(X_187,X_189,X_191,X_193,X_195,X_135,X_136,X_137,X_156);
end user.s2_1;

# 23:10:48 >  
# 23:10:48 >  "Done."
# 23:10:48 >  

