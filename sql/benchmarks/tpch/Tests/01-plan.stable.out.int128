stdout of test '01-plan` in directory 'sql/benchmarks/tpch` itself:


# 22:46:28 >  
# 22:46:28 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=31690" "--set" "mapi_usock=/var/tmp/mtest-6004/.s.monetdb.31690" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:46:28 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:31690/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-6004/.s.monetdb.31690
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:46:28 >  
# 22:46:28 >  "/usr/bin/python2" "01-plan.SQL.py" "01-plan"
# 22:46:28 >  

#plan select
#	l_returnflag,
#	l_linestatus,
#	sum(l_quantity) as sum_qty,
#	sum(l_extendedprice) as sum_base_price,
#	sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,
#	sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,
#	avg(l_quantity) as avg_qty,
#	avg(l_extendedprice) as avg_price,
#	avg(l_discount) as avg_disc,
#	count(*) as count_order
#from
#	lineitem
#where
#	l_shipdate <= date '1998-12-01' - interval '90' day (3)
#group by
#	l_returnflag,
#	l_linestatus
#order by
#	l_returnflag,
#	l_linestatus;
% .plan # table_name
% rel # name
% clob # type
% 1031 # length
project (
| group by (
| | select (
| | | table(sys.lineitem) [ lineitem.l_quantity NOT NULL, lineitem.l_extendedprice NOT NULL, lineitem.l_discount NOT NULL, lineitem.l_tax NOT NULL, lineitem.l_returnflag NOT NULL, lineitem.l_linestatus NOT NULL, lineitem.l_shipdate NOT NULL ] COUNT 
| | ) [ lineitem.l_shipdate NOT NULL <= sys.sql_sub(date "1998-12-01", sec_interval(4) "7776000000") ]
| ) [ lineitem.l_returnflag NOT NULL, lineitem.l_linestatus NOT NULL ] [ lineitem.l_returnflag NOT NULL, lineitem.l_linestatus NOT NULL, sys.sum no nil (lineitem.l_quantity NOT NULL) NOT NULL as L1.L1, sys.sum no nil (lineitem.l_extendedprice NOT NULL) NOT NULL as L2.L2, sys.sum no nil (sys.sql_mul(decimal(33,2)[lineitem.l_extendedprice NOT NULL] as lineitem.l_extendedprice, sys.sql_sub(decimal(15,2)[tinyint "1"], lineitem.l_discount NOT NULL))) as L3.L3, sys.sum no nil (sys.sql_mul(sys.sql_mul(decimal(33,2)[lineitem.l_extendedprice NOT NULL] as lineitem.l_extendedprice, sys.sql_sub(decimal(15,2)[tinyint "1"], lineitem.l_discount NOT NULL)), sys.sql_add(decimal(15,2)[tinyint "1"], lineitem.l_tax NOT NULL))) as L4.L4, sys.avg no nil (double[lineitem.l_quantity NOT NULL] as lineitem.l_quantity) as L5.L5, sys.avg no nil (double[lineitem.l_extendedprice NOT NULL] as lineitem.l_extendedprice) as L6.L6, sys.avg no nil (double[lineitem.l_discount NOT NULL] as lineitem.l_discount) as L7.L7, sys.count() NOT NULL as L10.L10 ]
) [ lineitem.l_returnflag NOT NULL, lineitem.l_linestatus NOT NULL, L1 NOT NULL as L1.sum_qty, L2 NOT NULL as L2.sum_base_price, L3 as L3.sum_disc_price, L4 as L4.sum_charge, L5 as L5.avg_qty, L6 as L6.avg_price, L7 as L7.avg_disc, L10 NOT NULL as L10.count_order ] [ lineitem.l_returnflag ASC NOT NULL, lineitem.l_linestatus ASC NOT NULL ]

# 22:46:28 >  
# 22:46:28 >  "Done."
# 22:46:28 >  

