stdout of test '06-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:26 >  
# 22:53:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:26 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:26 >  
# 22:53:26 >  "/usr/bin/python2" "06-explain.SQL.py" "06-explain"
# 22:53:26 >  

#set optimizer = 'sequential_pipe';
#explain select
#	sum(l_extendedprice * l_discount) as revenue
#from
#	lineitem
#where
#	l_shipdate >= date '1994-01-01'
#	and l_shipdate < date '1994-01-01' + interval '1' year
#	and l_discount between 0.06 - 0.01 and 0.06 + 0.01
#	and l_quantity < 24;
% .explain # table_name
% mal # name
% clob # type
% 320 # length
function user.s2_1(A0:date,A1:date,A2:int,A3:bte,A4:sht,A5:bte,A6:sht,A7:bte):void;
    X_63:void := querylog.define("explain select\n sum(l_extendedprice * l_discount) as revenue\nfrom\n lineitem\nwhere\n l_shipdate >= date \\'1994-01-01\\'\n and l_shipdate < date \\'1994-01-01\\' + interval \\'1\\' year\n and l_discount between .06 - 0.01 and .06 + 0.01\n and l_quantity < 24;","sequential_pipe",42);
    X_9 := sql.mvc();
    X_13:bat[:lng] := sql.bind(X_9,"sys","lineitem","l_quantity",0);
    X_23:bat[:lng] := sql.bind(X_9,"sys","lineitem","l_discount",0);
    X_35:bat[:date] := sql.bind(X_9,"sys","lineitem","l_shipdate",0);
    C_10:bat[:oid] := sql.tid(X_9,"sys","lineitem");
    X_40:date := mtime.addmonths(A1,A2);
    C_72 := algebra.subselect(X_35,C_10,A0,X_40,true,false,false);
    (C_37,r1_46) := sql.bind(X_9,"sys","lineitem","l_shipdate",2);
    C_73 := algebra.subselect(r1_46,nil:bat[:oid],A0,X_40,true,false,false);
    X_39:bat[:date] := sql.bind(X_9,"sys","lineitem","l_shipdate",1);
    C_75 := algebra.subselect(X_39,C_10,A0,X_40,true,false,false);
    C_41 := sql.subdelta(C_72,C_10,C_37,C_73,C_75);
    X_28 := calc.sht(2,A3,3,2);
    X_30:sht := calc.-(X_28,A4);
    X_31 := calc.lng(2,X_30,15,2);
    X_32 := calc.sht(2,A5,3,2);
    X_33:sht := calc.+(X_32,A6);
    X_34 := calc.lng(2,X_33,15,2);
    C_76 := algebra.subselect(X_23,C_41,X_31,X_34,true,true,false);
    (C_25,r1_28) := sql.bind(X_9,"sys","lineitem","l_discount",2);
    C_77 := algebra.subselect(r1_28,nil:bat[:oid],X_31,X_34,true,true,false);
    X_27:bat[:lng] := sql.bind(X_9,"sys","lineitem","l_discount",1);
    C_78 := algebra.subselect(X_27,C_41,X_31,X_34,true,true,false);
    C_44 := sql.subdelta(C_76,C_41,C_25,C_77,C_78);
    X_21 := calc.lng(A7,15,2);
    C_79 := algebra.thetasubselect(X_13,C_44,X_21,"<");
    (C_16,r1_16) := sql.bind(X_9,"sys","lineitem","l_quantity",2);
    C_80 := algebra.thetasubselect(r1_16,nil:bat[:oid],X_21,"<");
    X_19:bat[:lng] := sql.bind(X_9,"sys","lineitem","l_quantity",1);
    C_81 := algebra.thetasubselect(X_19,C_44,X_21,"<");
    C_45 := sql.subdelta(C_79,C_44,C_16,C_80,C_81);
    X_47:bat[:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",0);
    (C_49,r1_64) := sql.bind(X_9,"sys","lineitem","l_extendedprice",2);
    X_51:bat[:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",1);
    X_52 := sql.projectdelta(C_45,X_47,C_49,r1_64,X_51);
    X_53 := sql.projectdelta(C_45,X_23,C_25,r1_28,X_27);
    X_54:bat[:lng] := batcalc.*(X_52,X_53);
    X_55:lng := aggr.sum(X_54);
    sql.resultSet("sys.L1","revenue","decimal",19,4,10,X_55);
end user.s2_1;

# 22:53:26 >  
# 22:53:26 >  "Done."
# 22:53:26 >  

