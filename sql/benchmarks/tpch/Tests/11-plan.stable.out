stdout of test '11-plan` in directory 'sql/benchmarks/tpch` itself:


# 22:46:31 >  
# 22:46:31 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=31690" "--set" "mapi_usock=/var/tmp/mtest-6004/.s.monetdb.31690" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:46:31 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:31690/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-6004/.s.monetdb.31690
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:46:31 >  
# 22:46:31 >  "/usr/bin/python2" "11-plan.SQL.py" "11-plan"
# 22:46:31 >  

#plan select
#	ps_partkey,
#	sum(ps_supplycost * ps_availqty) as value
#from
#	partsupp,
#	supplier,
#	nation
#where
#	ps_suppkey = s_suppkey
#	and s_nationkey = n_nationkey
#	and n_name = 'GERMANY'
#group by
#	ps_partkey 
#having
#	sum(ps_supplycost * ps_availqty) >
#	(
#		select
#			sum(ps_supplycost * ps_availqty) * 0.0100000000
#			-- The above constant needs to be adjusted according
#			-- to the scale factor (SF): constant = 0.0001 / SF.
#		from
#			partsupp,
#			supplier,
#			nation
#		where
#			ps_suppkey = s_suppkey
#			and s_nationkey = n_nationkey
% .plan # table_name
% rel # name
% clob # type
% 235 # length
project (
| project (
| | semijoin (
| | | project (
| | | | group by (
| | | | | join (
| | | | | | join (
| | | | | | | table(sys.supplier) [ supplier.%TID% NOT NULL, supplier.%supplier_s_nationkey_fkey NOT NULL JOINIDX sys.supplier.supplier_s_nationkey_fkey ] COUNT ,
| | | | | | | select (
| | | | | | | | table(sys.nation) [ nation.n_name NOT NULL, nation.%TID% NOT NULL ] COUNT 
| | | | | | | ) [ nation.n_name NOT NULL = char(25) "GERMANY" ]
| | | | | | ) [ supplier.%supplier_s_nationkey_fkey NOT NULL = nation.%TID% NOT NULL JOINIDX sys.supplier.supplier_s_nationkey_fkey ],
| | | | | | table(sys.partsupp) [ partsupp.ps_partkey NOT NULL HASHCOL , partsupp.ps_availqty NOT NULL, partsupp.ps_supplycost NOT NULL, partsupp.%partsupp_ps_suppkey_fkey NOT NULL JOINIDX sys.partsupp.partsupp_ps_suppkey_fkey ] COUNT 
| | | | | ) [ partsupp.%partsupp_ps_suppkey_fkey NOT NULL = supplier.%TID% NOT NULL JOINIDX sys.partsupp.partsupp_ps_suppkey_fkey ]
| | | | ) [ partsupp.ps_partkey NOT NULL HASHCOL  ] [ partsupp.ps_partkey NOT NULL HASHCOL , sys.sum no nil (sys.sql_mul(partsupp.ps_supplycost NOT NULL, partsupp.ps_availqty NOT NULL)) as L1.L1, L1.L1 as L2.L2 ]
| | | ) [ partsupp.ps_partkey NOT NULL HASHCOL , L1.L1, L2.L2, L2 as L5.L5 ],
| | | project (
| | | | group by (
| | | | | join (
| | | | | | join (
| | | | | | | table(sys.supplier) [ supplier.%TID% NOT NULL, supplier.%supplier_s_nationkey_fkey NOT NULL JOINIDX sys.supplier.supplier_s_nationkey_fkey ] COUNT ,
| | | | | | | select (
| | | | | | | | table(sys.nation) [ nation.n_name NOT NULL, nation.%TID% NOT NULL ] COUNT 
| | | | | | | ) [ nation.n_name NOT NULL = char(25) "GERMANY" ]
| | | | | | ) [ supplier.%supplier_s_nationkey_fkey NOT NULL = nation.%TID% NOT NULL JOINIDX sys.supplier.supplier_s_nationkey_fkey ],
| | | | | | table(sys.partsupp) [ partsupp.ps_availqty NOT NULL, partsupp.ps_supplycost NOT NULL, partsupp.%partsupp_ps_suppkey_fkey NOT NULL JOINIDX sys.partsupp.partsupp_ps_suppkey_fkey ] COUNT 
| | | | | ) [ partsupp.%partsupp_ps_suppkey_fkey NOT NULL = supplier.%TID% NOT NULL JOINIDX sys.partsupp.partsupp_ps_suppkey_fkey ]
| | | | ) [  ] [ sys.sum no nil (sys.sql_mul(partsupp.ps_supplycost NOT NULL, partsupp.ps_availqty NOT NULL)) as L3.L3 ]
| | | ) [ sys.sql_mul(L3, decimal(4,3) "1") as L4.L4, sys.scale_down(L4.L4, bigint "100") as L6.L6 ]
| | ) [ L5.L5 > L6.L6 ]
| ) [ partsupp.ps_partkey NOT NULL HASHCOL , L1.L1, L2.L2 ]
) [ partsupp.ps_partkey NOT NULL, L1 as L1.value ] [ L1.value ]

# 22:46:31 >  
# 22:46:31 >  "Done."
# 22:46:31 >  

