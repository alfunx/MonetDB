stdout of test '12-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:28 >  
# 22:53:28 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:28 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:28 >  
# 22:53:28 >  "/usr/bin/python2" "12-explain.SQL.py" "12-explain"
# 22:53:28 >  

#set optimizer = 'sequential_pipe';
#explain select
#	l_shipmode,
#	sum(case
#		when o_orderpriority = '1-URGENT'
#			or o_orderpriority = '2-HIGH'
#			then 1
#		else 0
#	end) as high_line_count,
#	sum(case
#		when o_orderpriority <> '1-URGENT'
#			and o_orderpriority <> '2-HIGH'
#			then 1
#		else 0
#	end) as low_line_count
#from
#	orders,
#	lineitem
#where
#	o_orderkey = l_orderkey
#	and l_shipmode in ('MAIL', 'SHIP')
#	and l_commitdate < l_receiptdate
#	and l_shipdate < l_commitdate
#	and l_receiptdate >= date '1994-01-01'
#	and l_receiptdate < date '1994-01-01' + interval '1' year
% .explain # table_name
% mal # name
% clob # type
% 684 # length
function user.s2_1(A0:str,A1:str,A2:bte,A3:bte,A4:str,A5:str,A6:bte,A7:bte,A8:str,A9:str,A10:date,A11:date,A12:int):void;
    X_134:void := querylog.define("explain select\n l_shipmode,\n sum(case\n when o_orderpriority = \\'1-URGENT\\'\n or o_orderpriority = \\'2-HIGH\\'\n then 1\n else 0\n end) as high_line_count,\n sum(case\n when o_orderpriority <> \\'1-URGENT\\'\n and o_orderpriority <> \\'2-HIGH\\'\n then 1\n else 0\n end) as low_line_count\nfrom\n orders,\n lineitem\nwhere\n o_orderkey = l_orderkey\n and l_shipmode in (\\'MAIL\\', \\'SHIP\\')\n and l_commitdate < l_receiptdate\n and l_shipdate < l_commitdate\n and l_receiptdate >= date \\'1994-01-01\\'\n and l_receiptdate < date \\'1994-01-01\\' + interval \\'1\\' year\ngroup by\n l_shipmode\norder by\n l_shipmode;","sequential_pipe",93);
    X_102 := bat.new(nil:oid,nil:str);
    X_110 := bat.append(X_102,"sys.lineitem");
    X_118 := bat.append(X_110,"sys.L1");
    X_127 := bat.append(X_118,"sys.L2");
    X_105 := bat.new(nil:oid,nil:str);
    X_112 := bat.append(X_105,"l_shipmode");
    X_120 := bat.append(X_112,"high_line_count");
    X_129 := bat.append(X_120,"low_line_count");
    X_106 := bat.new(nil:oid,nil:str);
    X_113 := bat.append(X_106,"char");
    X_122 := bat.append(X_113,"hugeint");
    X_131 := bat.append(X_122,"hugeint");
    X_107 := bat.new(nil:oid,nil:int);
    X_115 := bat.append(X_107,10);
    X_124 := bat.append(X_115,128);
    X_132 := bat.append(X_124,128);
    X_109 := bat.new(nil:oid,nil:int);
    X_117 := bat.append(X_109,0);
    X_126 := bat.append(X_117,0);
    X_133 := bat.append(X_126,0);
    X_14 := sql.mvc();
    X_18:bat[:str] := sql.bind(X_14,"sys","lineitem","l_shipmode",0);
    X_26:bat[:date] := sql.bind(X_14,"sys","lineitem","l_receiptdate",0);
    X_33:bat[:date] := sql.bind(X_14,"sys","lineitem","l_commitdate",0);
    (C_35,r1_42) := sql.bind(X_14,"sys","lineitem","l_commitdate",2);
    X_37:bat[:date] := sql.bind(X_14,"sys","lineitem","l_commitdate",1);
    X_38 := sql.delta(X_33,C_35,r1_42,X_37);
    X_39:bat[:date] := sql.bind(X_14,"sys","lineitem","l_shipdate",0);
    (C_41,r1_49) := sql.bind(X_14,"sys","lineitem","l_shipdate",2);
    X_43:bat[:date] := sql.bind(X_14,"sys","lineitem","l_shipdate",1);
    X_44 := sql.delta(X_39,C_41,r1_49,X_43);
    X_49:bat[:bit] := batcalc.>(X_38,X_44);
    (C_28,r1_31) := sql.bind(X_14,"sys","lineitem","l_receiptdate",2);
    X_30:bat[:date] := sql.bind(X_14,"sys","lineitem","l_receiptdate",1);
    X_31 := sql.delta(X_26,C_28,r1_31,X_30);
    X_45:bat[:bit] := batcalc.<(X_38,X_31);
    C_15:bat[:oid] := sql.tid(X_14,"sys","lineitem");
    C_46 := algebra.subselect(X_45,C_15,true,true,true,true,false);
    C_50 := algebra.subselect(X_49,C_46,true,true,true,true,false);
    X_32:date := mtime.addmonths(A11,A12);
    C_143 := algebra.subselect(X_26,C_50,A10,X_32,true,false,false);
    C_144 := algebra.subselect(r1_31,nil:bat[:oid],A10,X_32,true,false,false);
    C_146 := algebra.subselect(X_30,C_50,A10,X_32,true,false,false);
    C_51 := sql.subdelta(C_143,C_50,C_28,C_144,C_146);
    C_147 := algebra.subselect(X_18,C_51,A8,A8,true,false,false);
    (C_21,r1_21) := sql.bind(X_14,"sys","lineitem","l_shipmode",2);
    C_148 := algebra.subselect(r1_21,nil:bat[:oid],A8,A8,true,false,false);
    X_24:bat[:str] := sql.bind(X_14,"sys","lineitem","l_shipmode",1);
    C_149 := algebra.subselect(X_24,C_51,A8,A8,true,false,false);
    C_52 := sql.subdelta(C_147,C_51,C_21,C_148,C_149);
    C_150 := algebra.subselect(X_18,C_51,A9,A9,true,false,false);
    C_151 := algebra.subselect(r1_21,nil:bat[:oid],A9,A9,true,false,false);
    C_152 := algebra.subselect(X_24,C_51,A9,A9,true,false,false);
    C_53 := sql.subdelta(C_150,C_51,C_21,C_151,C_152);
    X_54 := bat.mergecand(C_52,C_53);
    X_55:bat[:oid] := sql.bind_idxbat(X_14,"sys","lineitem","lineitem_l_orderkey_fkey",0);
    (X_57,r1_71) := sql.bind_idxbat(X_14,"sys","lineitem","lineitem_l_orderkey_fkey",2);
    X_59:bat[:oid] := sql.bind_idxbat(X_14,"sys","lineitem","lineitem_l_orderkey_fkey",1);
    X_60 := sql.projectdelta(X_54,X_55,X_57,r1_71,X_59);
    C_61:bat[:oid] := sql.tid(X_14,"sys","orders");
    (X_63,r1_79) := algebra.subjoin(X_60,C_61,nil:BAT,nil:BAT,false,nil:lng);
    X_67 := sql.projectdelta(X_54,X_18,C_21,r1_21,X_24);
    X_68 := algebra.projection(X_63,X_67);
    (X_69,r1_86,r2_86) := group.subgroupdone(X_68);
    X_72 := algebra.projection(r1_86,X_68);
    X_78:bat[:str] := sql.bind(X_14,"sys","orders","o_orderpriority",0);
    (C_80,r1_99) := sql.bind(X_14,"sys","orders","o_orderpriority",2);
    X_82:bat[:str] := sql.bind(X_14,"sys","orders","o_orderpriority",1);
    X_83 := sql.projectdelta(C_61,X_78,C_80,r1_99,X_82);
    X_84 := algebra.projection(r1_79,X_83);
    X_85:bat[:bit] := batcalc.==(X_84,A0);
    X_86:bat[:bit] := batcalc.==(X_84,A1);
    X_87:bat[:bit] := batcalc.or(X_85,X_86);
    X_88:bat[:bit] := batcalc.isnil(X_87);
    X_89:bat[:bit] := batcalc.ifthenelse(X_88,false,X_87);
    X_90:bat[:bte] := batcalc.ifthenelse(X_89,A2,A3);
    X_91:bat[:hge] := aggr.subsum(X_90,X_69,r1_86,true,true);
    X_93:bat[:bit] := batcalc.!=(X_84,A4);
    X_94:bat[:bit] := batcalc.!=(X_84,A5);
    X_95:bat[:bit] := batcalc.and(X_93,X_94);
    X_96:bat[:bit] := batcalc.isnil(X_95);
    X_97:bat[:bit] := batcalc.ifthenelse(X_96,false,X_95);
    X_98:bat[:bte] := batcalc.ifthenelse(X_97,A6,A7);
    X_99:bat[:hge] := aggr.subsum(X_98,X_69,r1_86,true,true);
    X_73 := bat.setKey(X_72,true);
    (X_74,r1_91,r2_91) := algebra.subsort(X_73,false,false);
    X_77 := algebra.projection(r1_91,X_73);
    X_92 := algebra.projection(r1_91,X_91);
    X_100 := algebra.projection(r1_91,X_99);
    sql.resultSet(X_127,X_129,X_131,X_132,X_133,X_77,X_92,X_100);
end user.s2_1;

# 22:53:28 >  
# 22:53:28 >  "Done."
# 22:53:28 >  

