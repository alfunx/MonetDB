stdout of test '14-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:28 >  
# 22:53:28 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:28 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:28 >  
# 22:53:28 >  "/usr/bin/python2" "14-explain.SQL.py" "14-explain"
# 22:53:28 >  

#set optimizer = 'sequential_pipe';
#explain select
#	100.00 * sum(case
#		when p_type like 'PROMO%'
#			then l_extendedprice * (1 - l_discount)
#		else 0
#	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
#from
#	lineitem,
#	part
#where
#	l_partkey = p_partkey
#	and l_shipdate >= date '1995-09-01'
#	and l_shipdate < date '1995-09-01' + interval '1' month;
% .explain # table_name
% mal # name
% clob # type
% 406 # length
function user.s2_1(A0:sht,A1:str,A2:bte,A3:bte,A4:bte,A5:date,A6:date,A7:int):void;
    X_91:void := querylog.define("explain select\n 100.00 * sum(case\n when p_type like \\'PROMO%\\'\n then l_extendedprice * (1 - l_discount)\n else 0\n end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue\nfrom\n lineitem,\n part\nwhere\n l_partkey = p_partkey\n and l_shipdate >= date \\'1995-09-01\\'\n and l_shipdate < date \\'1995-09-01\\' + interval \\'1\\' month;","sequential_pipe",55);
    X_9 := sql.mvc();
    X_13:bat[:date] := sql.bind(X_9,"sys","lineitem","l_shipdate",0);
    C_10:bat[:oid] := sql.tid(X_9,"sys","lineitem");
    X_21:date := mtime.addmonths(A6,A7);
    C_100 := algebra.subselect(X_13,C_10,A5,X_21,true,false,false);
    (C_16,r1_17) := sql.bind(X_9,"sys","lineitem","l_shipdate",2);
    C_101 := algebra.subselect(r1_17,nil:bat[:oid],A5,X_21,true,false,false);
    X_19:bat[:date] := sql.bind(X_9,"sys","lineitem","l_shipdate",1);
    C_103 := algebra.subselect(X_19,C_10,A5,X_21,true,false,false);
    C_22 := sql.subdelta(C_100,C_10,C_16,C_101,C_103);
    X_25:bat[:int] := sql.bind(X_9,"sys","lineitem","l_partkey",0);
    (C_27,r1_34) := sql.bind(X_9,"sys","lineitem","l_partkey",2);
    X_29:bat[:int] := sql.bind(X_9,"sys","lineitem","l_partkey",1);
    X_30 := sql.projectdelta(C_22,X_25,C_27,r1_34,X_29);
    C_31:bat[:oid] := sql.tid(X_9,"sys","part");
    X_33:bat[:int] := sql.bind(X_9,"sys","part","p_partkey",0);
    (C_35,r1_44) := sql.bind(X_9,"sys","part","p_partkey",2);
    X_37:bat[:int] := sql.bind(X_9,"sys","part","p_partkey",1);
    X_38 := sql.projectdelta(C_31,X_33,C_35,r1_44,X_37);
    (X_39,r1_49) := algebra.subjoin(X_30,X_38,nil:BAT,nil:BAT,false,nil:lng);
    X_43:bat[:str] := sql.bind(X_9,"sys","part","p_type",0);
    (C_45,r1_56) := sql.bind(X_9,"sys","part","p_type",2);
    X_47:bat[:str] := sql.bind(X_9,"sys","part","p_type",1);
    X_48 := sql.projectdelta(C_31,X_43,C_45,r1_56,X_47);
    X_49 := algebra.projection(r1_49,X_48);
    X_50:bat[:bit] := batalgebra.like(X_49,A1);
    X_51:bat[:bit] := batcalc.isnil(X_50);
    X_52:bat[:bit] := batcalc.ifthenelse(X_51,false,X_50);
    X_53:bat[:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",0);
    (C_55,r1_77) := sql.bind(X_9,"sys","lineitem","l_extendedprice",2);
    X_57:bat[:lng] := sql.bind(X_9,"sys","lineitem","l_extendedprice",1);
    X_58 := sql.projectdelta(C_22,X_53,C_55,r1_77,X_57);
    X_59 := algebra.projection(X_39,X_58);
    X_61 := calc.lng(A2,15,2);
    X_63:bat[:lng] := sql.bind(X_9,"sys","lineitem","l_discount",0);
    (C_65,r1_93) := sql.bind(X_9,"sys","lineitem","l_discount",2);
    X_67:bat[:lng] := sql.bind(X_9,"sys","lineitem","l_discount",1);
    X_68 := sql.projectdelta(C_22,X_63,C_65,r1_93,X_67);
    X_69 := algebra.projection(X_39,X_68);
    X_70:bat[:lng] := batcalc.-(X_61,X_69);
    X_71:bat[:hge] := batcalc.*(X_59,X_70);
    X_72 := calc.hge(A3,33,4);
    X_74:bat[:hge] := batcalc.ifthenelse(X_52,X_71,X_72);
    X_75:hge := aggr.sum(X_74);
    X_76:hge := calc.*(A0,X_75);
    X_77 := calc.hge(5,X_76,39,9);
    X_81 := calc.lng(A4,15,2);
    X_82:bat[:lng] := batcalc.-(X_81,X_69);
    X_83:bat[:hge] := batcalc.*(X_59,X_82);
    X_84:hge := aggr.sum(X_83);
    X_85:hge := calc./(X_77,X_84);
    sql.resultSet(".L2","promo_revenue","decimal",39,5,10,X_85);
end user.s2_1;

# 22:53:29 >  
# 22:53:29 >  "Done."
# 22:53:29 >  

