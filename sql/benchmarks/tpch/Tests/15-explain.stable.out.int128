stdout of test '15-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:29 >  
# 22:53:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:29 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:29 >  
# 22:53:29 >  "/usr/bin/python2" "15-explain.SQL.py" "15-explain"
# 22:53:29 >  

#set optimizer = 'sequential_pipe';
#create view revenue0 (supplier_no, total_revenue) as
#	select
#		l_suppkey,
#		sum(l_extendedprice * (1 - l_discount))
#	from
#		lineitem
#	where
#		l_shipdate >= date '1996-01-01'
#		and l_shipdate < date '1996-01-01' + interval '3' month
#	group by
#		l_suppkey;
#explain select
#	s_suppkey,
#	s_name,
#	s_address,
#	s_phone,
#	total_revenue
#from
#	supplier,
#	revenue0
#where
#	s_suppkey = supplier_no
#	and total_revenue = (
#		select
#			max(total_revenue)
#		from
#			revenue0
#	)
#order by
#	s_suppkey;
% .explain # table_name
% mal # name
% clob # type
% 298 # length
function user.s3_1():void;
    X_148:void := querylog.define("explain select\n s_suppkey,\n s_name,\n s_address,\n s_phone,\n total_revenue\nfrom\n supplier,\n revenue0\nwhere\n s_suppkey = supplier_no\n and total_revenue = (\n select\n max(total_revenue)\n from\n revenue0\n )\norder by\n s_suppkey;","sequential_pipe",100);
    X_103 := bat.new(nil:oid,nil:str);
    X_111 := bat.append(X_103,"sys.supplier");
    X_119 := bat.append(X_111,"sys.supplier");
    X_126 := bat.append(X_119,"sys.supplier");
    X_133 := bat.append(X_126,"sys.supplier");
    X_138 := bat.append(X_133,"sys.revenue0");
    X_106 := bat.new(nil:oid,nil:str);
    X_113 := bat.append(X_106,"s_suppkey");
    X_120 := bat.append(X_113,"s_name");
    X_127 := bat.append(X_120,"s_address");
    X_134 := bat.append(X_127,"s_phone");
    X_140 := bat.append(X_134,"total_revenue");
    X_107 := bat.new(nil:oid,nil:str);
    X_114 := bat.append(X_107,"int");
    X_121 := bat.append(X_114,"char");
    X_128 := bat.append(X_121,"varchar");
    X_135 := bat.append(X_128,"char");
    X_142 := bat.append(X_135,"decimal");
    X_108 := bat.new(nil:oid,nil:int);
    X_116 := bat.append(X_108,32);
    X_123 := bat.append(X_116,25);
    X_130 := bat.append(X_123,40);
    X_136 := bat.append(X_130,15);
    X_144 := bat.append(X_136,39);
    X_110 := bat.new(nil:oid,nil:int);
    X_118 := bat.append(X_110,0);
    X_125 := bat.append(X_118,0);
    X_132 := bat.append(X_125,0);
    X_137 := bat.append(X_132,0);
    X_146 := bat.append(X_137,4);
    X_1 := sql.mvc();
    C_2:bat[:oid] := sql.tid(X_1,"sys","supplier");
    X_5:bat[:int] := sql.bind(X_1,"sys","supplier","s_suppkey",0);
    (C_8,r1_8) := sql.bind(X_1,"sys","supplier","s_suppkey",2);
    X_11:bat[:int] := sql.bind(X_1,"sys","supplier","s_suppkey",1);
    X_13 := sql.delta(X_5,C_8,r1_8,X_11);
    X_14 := algebra.projection(C_2,X_13);
    C_15:bat[:oid] := sql.tid(X_1,"sys","lineitem");
    X_17:bat[:date] := sql.bind(X_1,"sys","lineitem","l_shipdate",0);
    (C_19,r1_19) := sql.bind(X_1,"sys","lineitem","l_shipdate",2);
    X_21:bat[:date] := sql.bind(X_1,"sys","lineitem","l_shipdate",1);
    X_22 := sql.delta(X_17,C_19,r1_19,X_21);
    X_23 := algebra.projection(C_15,X_22);
    X_26:date := mtime.addmonths("1996-01-01",3);
    C_27 := algebra.subselect(X_23,"1996-01-01",X_26,true,false,false);
    X_30:bat[:int] := sql.bind(X_1,"sys","lineitem","l_suppkey",0);
    (C_32,r1_36) := sql.bind(X_1,"sys","lineitem","l_suppkey",2);
    X_34:bat[:int] := sql.bind(X_1,"sys","lineitem","l_suppkey",1);
    X_35 := sql.delta(X_30,C_32,r1_36,X_34);
    X_36 := algebra.projection(C_15,X_35);
    X_37 := algebra.projection(C_27,X_36);
    (X_38,r1_42,r2_42) := group.subgroupdone(X_37);
    X_41 := algebra.projection(r1_42,X_37);
    X_49:bat[:lng] := sql.bind(X_1,"sys","lineitem","l_extendedprice",0);
    (C_51,r1_56) := sql.bind(X_1,"sys","lineitem","l_extendedprice",2);
    X_53:bat[:lng] := sql.bind(X_1,"sys","lineitem","l_extendedprice",1);
    X_54 := sql.delta(X_49,C_51,r1_56,X_53);
    X_55 := algebra.projection(C_15,X_54);
    X_56 := algebra.projection(C_27,X_55);
    X_58:bat[:lng] := sql.bind(X_1,"sys","lineitem","l_discount",0);
    (C_60,r1_73) := sql.bind(X_1,"sys","lineitem","l_discount",2);
    X_62:bat[:lng] := sql.bind(X_1,"sys","lineitem","l_discount",1);
    X_63 := sql.delta(X_58,C_60,r1_73,X_62);
    X_64 := algebra.projection(C_15,X_63);
    X_65 := algebra.projection(C_27,X_64);
    X_66:bat[:lng] := batcalc.-(100:lng,X_65);
    X_67:bat[:hge] := batcalc.*(X_56,X_66);
    X_68:bat[:hge] := aggr.subsum(X_67,X_38,r1_42,true,true);
    X_42 := bat.setKey(X_41,true);
    (X_43,r1_47) := algebra.subjoin(X_14,X_42,nil:BAT,nil:BAT,false,nil:lng);
    X_47 := algebra.projection(X_43,X_14);
    X_48 := bat.mirror(X_47);
    X_69 := algebra.projection(r1_47,X_68);
    X_70 := aggr.max(X_68);
    X_71 := sql.single(X_70);
    (X_72,r1_146) := algebra.subjoin(X_69,X_71,nil:BAT,nil:BAT,false,nil:lng);
    C_74 := algebra.subinter(X_48,X_72,nil:BAT,nil:BAT,false,nil:lng);
    X_75 := algebra.projection(C_74,X_47);
    (X_76,r1_154,r2_154) := algebra.subsort(X_75,false,false);
    X_79 := algebra.projection(r1_154,X_75);
    X_80:bat[:str] := sql.bind(X_1,"sys","supplier","s_name",0);
    (C_82,r1_160) := sql.bind(X_1,"sys","supplier","s_name",2);
    X_84:bat[:str] := sql.bind(X_1,"sys","supplier","s_name",1);
    X_85 := sql.delta(X_80,C_82,r1_160,X_84);
    X_86:bat[:str] := algebra.projectionpath(r1_154,C_74,X_43,C_2,X_85);
    X_87:bat[:str] := sql.bind(X_1,"sys","supplier","s_address",0);
    (C_89,r1_170) := sql.bind(X_1,"sys","supplier","s_address",2);
    X_91:bat[:str] := sql.bind(X_1,"sys","supplier","s_address",1);
    X_92 := sql.delta(X_87,C_89,r1_170,X_91);
    X_93:bat[:str] := algebra.projectionpath(r1_154,C_74,X_43,C_2,X_92);
    X_94:bat[:str] := sql.bind(X_1,"sys","supplier","s_phone",0);
    (C_96,r1_180) := sql.bind(X_1,"sys","supplier","s_phone",2);
    X_98:bat[:str] := sql.bind(X_1,"sys","supplier","s_phone",1);
    X_99 := sql.delta(X_94,C_96,r1_180,X_98);
    X_100:bat[:str] := algebra.projectionpath(r1_154,C_74,X_43,C_2,X_99);
    X_101:bat[:hge] := algebra.projectionpath(r1_154,C_74,X_69);
    sql.resultSet(X_138,X_140,X_142,X_144,X_146,X_79,X_86,X_93,X_100,X_101);
end user.s3_1;
#drop view revenue0;

# 22:53:29 >  
# 22:53:29 >  "Done."
# 22:53:29 >  

