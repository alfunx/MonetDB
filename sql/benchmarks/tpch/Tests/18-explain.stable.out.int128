stdout of test '18-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "18-explain.SQL.py" "18-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice,
#	sum(l_quantity)
#from
#	customer,
#	orders,
#	lineitem
#where
#	o_orderkey in (
#		select
#			l_orderkey
#		from
#			lineitem
#		group by
#			l_orderkey having
#				sum(l_quantity) > 300
#	)
#	and c_custkey = o_custkey
#	and o_orderkey = l_orderkey
#group by
#	c_name,
#	c_custkey,
#	o_orderkey,
#	o_orderdate,
#	o_totalprice
#order by
#	o_totalprice desc,
#	o_orderdate
#limit 100;
% .explain # table_name
% mal # name
% clob # type
% 515 # length
function user.s2_1(A0:sht):void;
    X_179:void := querylog.define("explain select\n c_name,\n c_custkey,\n o_orderkey,\n o_orderdate,\n o_totalprice,\n sum(l_quantity)\nfrom\n customer,\n orders,\n lineitem\nwhere\n o_orderkey in (\n select\n l_orderkey\n from\n lineitem\n group by\n l_orderkey having\n sum(l_quantity) > 300\n )\n and c_custkey = o_custkey\n and o_orderkey = l_orderkey\ngroup by\n c_name,\n c_custkey,\n o_orderkey,\n o_orderdate,\n o_totalprice\norder by\n o_totalprice desc,\n o_orderdate\nlimit 100;","sequential_pipe",119);
    X_130 := bat.new(nil:oid,nil:str);
    X_138 := bat.append(X_130,"sys.customer");
    X_146 := bat.append(X_138,"sys.customer");
    X_153 := bat.append(X_146,"sys.orders");
    X_159 := bat.append(X_153,"sys.orders");
    X_165 := bat.append(X_159,"sys.orders");
    X_172 := bat.append(X_165,"sys.L6");
    X_133 := bat.new(nil:oid,nil:str);
    X_140 := bat.append(X_133,"c_name");
    X_147 := bat.append(X_140,"c_custkey");
    X_155 := bat.append(X_147,"o_orderkey");
    X_160 := bat.append(X_155,"o_orderdate");
    X_166 := bat.append(X_160,"o_totalprice");
    X_174 := bat.append(X_166,"L6");
    X_134 := bat.new(nil:oid,nil:str);
    X_141 := bat.append(X_134,"varchar");
    X_148 := bat.append(X_141,"int");
    X_156 := bat.append(X_148,"int");
    X_161 := bat.append(X_156,"date");
    X_167 := bat.append(X_161,"decimal");
    X_176 := bat.append(X_167,"decimal");
    X_135 := bat.new(nil:oid,nil:int);
    X_143 := bat.append(X_135,25);
    X_150 := bat.append(X_143,32);
    X_157 := bat.append(X_150,32);
    X_163 := bat.append(X_157,0);
    X_169 := bat.append(X_163,15);
    X_177 := bat.append(X_169,39);
    X_137 := bat.new(nil:oid,nil:int);
    X_145 := bat.append(X_137,0);
    X_152 := bat.append(X_145,0);
    X_158 := bat.append(X_152,0);
    X_164 := bat.append(X_158,0);
    X_171 := bat.append(X_164,2);
    X_178 := bat.append(X_171,2);
    X_2 := sql.mvc();
    C_3:bat[:oid] := sql.tid(X_2,"sys","orders");
    X_6:bat[:int] := sql.bind(X_2,"sys","orders","o_orderkey",0);
    (C_9,r1_9) := sql.bind(X_2,"sys","orders","o_orderkey",2);
    X_12:bat[:int] := sql.bind(X_2,"sys","orders","o_orderkey",1);
    X_14 := sql.delta(X_6,C_9,r1_9,X_12);
    X_15 := algebra.projection(C_3,X_14);
    X_16 := bat.mirror(X_15);
    C_17:bat[:oid] := sql.tid(X_2,"sys","lineitem");
    X_19:bat[:lng] := sql.bind(X_2,"sys","lineitem","l_quantity",0);
    (C_21,r1_21) := sql.bind(X_2,"sys","lineitem","l_quantity",2);
    X_23:bat[:lng] := sql.bind(X_2,"sys","lineitem","l_quantity",1);
    X_24 := sql.delta(X_19,C_21,r1_21,X_23);
    X_25 := algebra.projection(C_17,X_24);
    X_26:bat[:int] := sql.bind(X_2,"sys","lineitem","l_orderkey",0);
    (C_28,r1_28) := sql.bind(X_2,"sys","lineitem","l_orderkey",2);
    X_30:bat[:int] := sql.bind(X_2,"sys","lineitem","l_orderkey",1);
    X_31 := sql.delta(X_26,C_28,r1_28,X_30);
    X_32 := algebra.projection(C_17,X_31);
    (X_33,r1_33,r2_33) := group.subgroupdone(X_32);
    X_36:bat[:hge] := aggr.subsum(X_25,X_33,r1_33,true,true);
    X_42 := algebra.projection(r1_33,X_32);
    X_38 := calc.hge(A0,39,2);
    C_40 := algebra.thetasubselect(X_36,X_38,">");
    X_43 := bat.setKey(X_42,true);
    X_44 := algebra.projection(C_40,X_43);
    (X_45,r1_47) := algebra.subjoin(X_15,X_44,nil:BAT,nil:BAT,false,nil:lng);
    C_50 := algebra.subinter(X_16,X_45,nil:BAT,nil:BAT,false,nil:lng);
    X_51 := algebra.projection(C_50,X_15);
    (X_52,r1_63) := algebra.subjoin(X_51,X_32,nil:BAT,nil:BAT,false,nil:lng);
    X_54:bat[:oid] := sql.bind_idxbat(X_2,"sys","orders","orders_o_custkey_fkey",0);
    (X_56,r1_67) := sql.bind_idxbat(X_2,"sys","orders","orders_o_custkey_fkey",2);
    X_58:bat[:oid] := sql.bind_idxbat(X_2,"sys","orders","orders_o_custkey_fkey",1);
    X_59 := sql.delta(X_54,X_56,r1_67,X_58);
    X_60:bat[:oid] := algebra.projectionpath(X_52,C_50,C_3,X_59);
    C_61:bat[:oid] := sql.tid(X_2,"sys","customer");
    (X_63,r1_76) := algebra.subjoin(X_60,C_61,nil:BAT,nil:BAT,false,nil:lng);
    X_65:bat[:int] := sql.bind(X_2,"sys","customer","c_custkey",0);
    (C_67,r1_80) := sql.bind(X_2,"sys","customer","c_custkey",2);
    X_69:bat[:int] := sql.bind(X_2,"sys","customer","c_custkey",1);
    X_70 := sql.delta(X_65,C_67,r1_80,X_69);
    X_71 := algebra.projection(C_61,X_70);
    X_72 := algebra.projection(r1_76,X_71);
    X_73:bat[:int] := algebra.projectionpath(X_63,X_52,X_51);
    (X_74,r1_88,r2_88) := group.subgroup(X_73);
    (X_77,r1_91,r2_91) := group.subgroupdone(X_72,X_74);
    X_80 := algebra.projection(r1_91,X_72);
    (X_81,r1_102) := algebra.subjoin(X_80,X_71,nil:BAT,nil:BAT,false,nil:lng);
    X_83:bat[:int] := algebra.projectionpath(X_81,r1_91,X_73);
    X_126:bat[:lng] := algebra.projectionpath(X_63,r1_63,X_25);
    X_127:bat[:hge] := aggr.subsum(X_126,X_77,r1_91,true,true);
    (X_84,r1_118) := algebra.subjoin(X_83,X_15,nil:BAT,nil:BAT,false,nil:lng);
    X_86:bat[:date] := sql.bind(X_2,"sys","orders","o_orderdate",0);
    (C_88,r1_122) := sql.bind(X_2,"sys","orders","o_orderdate",2);
    X_90:bat[:date] := sql.bind(X_2,"sys","orders","o_orderdate",1);
    X_91 := sql.delta(X_86,C_88,r1_122,X_90);
    X_92:bat[:date] := algebra.projectionpath(r1_118,C_3,X_91);
    X_93:bat[:lng] := sql.bind(X_2,"sys","orders","o_totalprice",0);
    (C_95,r1_130) := sql.bind(X_2,"sys","orders","o_totalprice",2);
    X_97:bat[:lng] := sql.bind(X_2,"sys","orders","o_totalprice",1);
    X_98 := sql.delta(X_93,C_95,r1_130,X_97);
    X_99:bat[:lng] := algebra.projectionpath(r1_118,C_3,X_98);
    (C_102,r1_141) := algebra.firstn(X_99,100,false,false);
    C_104 := algebra.firstn(X_92,C_102,r1_141,100,true,false);
    X_105 := algebra.projection(C_104,X_92);
    X_106 := algebra.projection(C_104,X_99);
    (X_107,r1_151,r2_151) := algebra.subsort(X_106,true,false);
    (X_110,r1_154,r2_154) := algebra.subsort(X_105,r1_151,r2_151,false,false);
    X_113:bat[:str] := sql.bind(X_2,"sys","customer","c_name",0);
    (C_115,r1_159) := sql.bind(X_2,"sys","customer","c_name",2);
    X_117:bat[:str] := sql.bind(X_2,"sys","customer","c_name",1);
    X_118 := sql.delta(X_113,C_115,r1_159,X_117);
    X_119:bat[:str] := algebra.projectionpath(r1_154,C_104,X_84,r1_102,C_61,X_118);
    X_120 := algebra.subslice(X_119,0,99:wrd);
    X_121 := algebra.projection(X_120,X_119);
    X_122:bat[:int] := algebra.projectionpath(X_120,r1_154,C_104,X_84,X_81,X_80);
    X_123:bat[:int] := algebra.projectionpath(X_120,r1_154,C_104,X_84,X_83);
    X_124:bat[:date] := algebra.projectionpath(X_120,r1_154,X_105);
    X_125:bat[:lng] := algebra.projectionpath(X_120,r1_154,X_106);
    X_128:bat[:hge] := algebra.projectionpath(X_120,r1_154,C_104,X_84,X_81,X_127);
    sql.resultSet(X_172,X_174,X_176,X_177,X_178,X_121,X_122,X_123,X_124,X_125,X_128);
end user.s2_1;

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

