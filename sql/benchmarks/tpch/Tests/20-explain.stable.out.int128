stdout of test '20-explain` in directory 'sql/benchmarks/tpch` itself:


# 22:53:30 >  
# 22:53:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=34581" "--set" "mapi_usock=/var/tmp/mtest-9096/.s.monetdb.34581" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/manegold/_/Monet/HG/Feb2013/prefix/--disable-debug_--enable-assert_--enable-optimize/var/MonetDB/mTests_sql_benchmarks_tpch" "--set" "mal_listing=0"
# 22:53:30 >  

# MonetDB 5 server v11.15.12
# This is an unreleased version
# Serving database 'mTests_sql_benchmarks_tpch', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://rome.ins.cwi.nl:34581/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9096/.s.monetdb.34581
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 22:53:30 >  
# 22:53:30 >  "/usr/bin/python2" "20-explain.SQL.py" "20-explain"
# 22:53:30 >  

#set optimizer = 'sequential_pipe';
#explain select
#	s_name,
#	s_address
#from
#	supplier,
#	nation
#where
#	s_suppkey in (
#		select
#			ps_suppkey
#		from
#			partsupp
#		where
#			ps_partkey in (
#				select
#					p_partkey
#				from
#					part
#				where
#					p_name like 'forest%'
#			)
#			and ps_availqty > (
#				select
#					0.5 * sum(l_quantity)
#				from
#					lineitem
#				where
#					l_partkey = ps_partkey
#					and l_suppkey = ps_suppkey
#					and l_shipdate >= date '1994-01-01'
#					and l_shipdate < date '1994-01-01' + interval '1' year
#			)
#	)
#	and s_nationkey = n_nationkey
% .explain # table_name
% mal # name
% clob # type
% 618 # length
function user.s2_1(A0:str,A1:bte,A2:date,A3:date,A4:int,A5:str):void;
    X_211:void := querylog.define("explain select\n s_name,\n s_address\nfrom\n supplier,\n nation\nwhere\n s_suppkey in (\n select\n ps_suppkey\n from\n partsupp\n where\n ps_partkey in (\n select\n p_partkey\n from\n part\n where\n p_name like \\'forest%\\'\n )\n and ps_availqty > (\n select\n 0.5 * sum(l_quantity)\n from\n lineitem\n where\n l_partkey = ps_partkey\n and l_suppkey = ps_suppkey\n and l_shipdate >= date \\'1994-01-01\\'\n and l_shipdate < date \\'1994-01-01\\' + interval \\'1\\' year\n )\n )\n and s_nationkey = n_nationkey\n and n_name = \\'CANADA\\'\norder by\n s_name;","sequential_pipe",142);
    X_188 := bat.new(nil:oid,nil:str);
    X_196 := bat.append(X_188,"sys.supplier");
    X_204 := bat.append(X_196,"sys.supplier");
    X_191 := bat.new(nil:oid,nil:str);
    X_198 := bat.append(X_191,"s_name");
    X_205 := bat.append(X_198,"s_address");
    X_192 := bat.new(nil:oid,nil:str);
    X_199 := bat.append(X_192,"char");
    X_206 := bat.append(X_199,"varchar");
    X_193 := bat.new(nil:oid,nil:int);
    X_201 := bat.append(X_193,25);
    X_208 := bat.append(X_201,40);
    X_195 := bat.new(nil:oid,nil:int);
    X_203 := bat.append(X_195,0);
    X_210 := bat.append(X_203,0);
    X_7 := sql.mvc();
    C_8:bat[:oid] := sql.tid(X_7,"sys","supplier");
    X_11:bat[:int] := sql.bind(X_7,"sys","supplier","s_suppkey",0);
    (C_14,r1_14) := sql.bind(X_7,"sys","supplier","s_suppkey",2);
    X_17:bat[:int] := sql.bind(X_7,"sys","supplier","s_suppkey",1);
    X_19 := sql.delta(X_11,C_14,r1_14,X_17);
    X_20 := algebra.projection(C_8,X_19);
    X_21 := bat.mirror(X_20);
    C_22:bat[:oid] := sql.tid(X_7,"sys","partsupp");
    X_24:bat[:int] := sql.bind(X_7,"sys","partsupp","ps_partkey",0);
    (C_26,r1_26) := sql.bind(X_7,"sys","partsupp","ps_partkey",2);
    X_28:bat[:int] := sql.bind(X_7,"sys","partsupp","ps_partkey",1);
    X_29 := sql.delta(X_24,C_26,r1_26,X_28);
    X_30 := algebra.projection(C_22,X_29);
    X_31 := bat.mirror(X_30);
    C_32:bat[:oid] := sql.tid(X_7,"sys","part");
    X_34:bat[:str] := sql.bind(X_7,"sys","part","p_name",0);
    (C_36,r1_36) := sql.bind(X_7,"sys","part","p_name",2);
    X_38:bat[:str] := sql.bind(X_7,"sys","part","p_name",1);
    X_39 := sql.delta(X_34,C_36,r1_36,X_38);
    X_40 := algebra.projection(C_32,X_39);
    C_42 := algebra.likesubselect(X_40,nil:BAT,A0,"",false);
    X_45:bat[:int] := sql.bind(X_7,"sys","part","p_partkey",0);
    (C_47,r1_49) := sql.bind(X_7,"sys","part","p_partkey",2);
    X_49:bat[:int] := sql.bind(X_7,"sys","part","p_partkey",1);
    X_50 := sql.delta(X_45,C_47,r1_49,X_49);
    X_51:bat[:int] := algebra.projectionpath(C_42,C_32,X_50);
    (X_52,r1_55) := algebra.subjoin(X_30,X_51,nil:BAT,nil:BAT,false,nil:lng);
    C_55 := algebra.subinter(X_31,X_52,nil:BAT,nil:BAT,false,nil:lng);
    X_56:bat[:wrd] := sql.bind_idxbat(X_7,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",0);
    (X_58,r1_61) := sql.bind_idxbat(X_7,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",2);
    X_60:bat[:wrd] := sql.bind_idxbat(X_7,"sys","partsupp","partsupp_ps_partkey_ps_suppkey_pkey",1);
    X_61 := sql.delta(X_56,X_58,r1_61,X_60);
    X_62:bat[:wrd] := algebra.projectionpath(C_55,C_22,X_61);
    C_63:bat[:oid] := sql.tid(X_7,"sys","lineitem");
    X_65:bat[:date] := sql.bind(X_7,"sys","lineitem","l_shipdate",0);
    (C_67,r1_71) := sql.bind(X_7,"sys","lineitem","l_shipdate",2);
    X_69:bat[:date] := sql.bind(X_7,"sys","lineitem","l_shipdate",1);
    X_70 := sql.delta(X_65,C_67,r1_71,X_69);
    X_71 := algebra.projection(C_63,X_70);
    X_72:date := mtime.addmonths(A3,A4);
    C_73 := algebra.subselect(X_71,A2,X_72,true,false,false);
    X_75:bat[:int] := sql.bind(X_7,"sys","lineitem","l_partkey",0);
    (C_77,r1_86) := sql.bind(X_7,"sys","lineitem","l_partkey",2);
    X_79:bat[:int] := sql.bind(X_7,"sys","lineitem","l_partkey",1);
    X_80 := sql.delta(X_75,C_77,r1_86,X_79);
    X_81:bat[:int] := algebra.projectionpath(C_73,C_63,X_80);
    X_82:bat[:wrd] := batmkey.hash(X_81);
    X_84:bat[:int] := sql.bind(X_7,"sys","lineitem","l_suppkey",0);
    (C_86,r1_99) := sql.bind(X_7,"sys","lineitem","l_suppkey",2);
    X_88:bat[:int] := sql.bind(X_7,"sys","lineitem","l_suppkey",1);
    X_89 := sql.delta(X_84,C_86,r1_99,X_88);
    X_90:bat[:int] := algebra.projectionpath(C_73,C_63,X_89);
    X_91:bat[:wrd] := mkey.bulk_rotate_xor_hash(X_82,22,X_90);
    (X_92,r1_106) := algebra.subjoin(X_62,X_91,nil:BAT,nil:BAT,false,nil:lng);
    X_94 := algebra.projection(C_55,X_30);
    X_95 := algebra.projection(X_92,X_94);
    X_96 := algebra.projection(r1_106,X_81);
    X_97:bat[:bit] := batcalc.==(X_95,X_96);
    C_98 := algebra.subselect(X_97,true,true,true,false,false);
    X_99 := algebra.projection(C_98,X_92);
    X_100:bat[:int] := sql.bind(X_7,"sys","partsupp","ps_suppkey",0);
    (C_102,r1_125) := sql.bind(X_7,"sys","partsupp","ps_suppkey",2);
    X_104:bat[:int] := sql.bind(X_7,"sys","partsupp","ps_suppkey",1);
    X_105 := sql.delta(X_100,C_102,r1_125,X_104);
    X_106:bat[:int] := algebra.projectionpath(C_55,C_22,X_105);
    X_107 := algebra.projection(X_99,X_106);
    X_108 := algebra.projection(C_98,r1_106);
    X_109 := algebra.projection(X_108,X_90);
    X_110:bat[:bit] := batcalc.==(X_107,X_109);
    C_111 := algebra.subselect(X_110,true,true,true,false,false);
    X_112 := algebra.projection(C_111,X_99);
    X_113:bat[:oid] := batcalc.identity(X_94);
    X_114 := algebra.projection(X_112,X_113);
    (X_115,r1_141,r2_141) := group.subgroupdone(X_114);
    X_118:bat[:int] := sql.bind(X_7,"sys","partsupp","ps_availqty",0);
    (C_120,r1_146) := sql.bind(X_7,"sys","partsupp","ps_availqty",2);
    X_122:bat[:int] := sql.bind(X_7,"sys","partsupp","ps_availqty",1);
    X_123 := sql.delta(X_118,C_120,r1_146,X_122);
    X_124:bat[:int] := algebra.projectionpath(r1_141,X_112,C_55,C_22,X_123);
    X_128:bat[:lng] := sql.bind(X_7,"sys","lineitem","l_quantity",0);
    (C_130,r1_163) := sql.bind(X_7,"sys","lineitem","l_quantity",2);
    X_132:bat[:lng] := sql.bind(X_7,"sys","lineitem","l_quantity",1);
    X_133 := sql.delta(X_128,C_130,r1_163,X_132);
    X_134:bat[:lng] := algebra.projectionpath(C_111,X_108,C_73,C_63,X_133);
    X_135:bat[:hge] := aggr.subsum(X_134,X_115,r1_141,true,true);
    X_125:bat[:hge] := batcalc.hge(X_124,39,3);
    X_136:bat[:hge] := batcalc.*(A1,X_135);
    X_137:bat[:bit] := batcalc.>(X_125,X_136);
    C_138 := algebra.subselect(X_137,true,true,true,true,false);
    X_139:bat[:int] := algebra.projectionpath(C_138,r1_141,X_112,X_106);
    (X_140,r1_182) := algebra.subjoin(X_20,X_139,nil:BAT,nil:BAT,false,nil:lng);
    C_142 := algebra.subinter(X_21,X_140,nil:BAT,nil:BAT,false,nil:lng);
    X_143:bat[:int] := sql.bind(X_7,"sys","supplier","s_nationkey",0);
    (C_145,r1_190) := sql.bind(X_7,"sys","supplier","s_nationkey",2);
    X_147:bat[:int] := sql.bind(X_7,"sys","supplier","s_nationkey",1);
    X_148 := sql.delta(X_143,C_145,r1_190,X_147);
    X_149:bat[:int] := algebra.projectionpath(C_142,C_8,X_148);
    C_150:bat[:oid] := sql.tid(X_7,"sys","nation");
    X_152:bat[:str] := sql.bind(X_7,"sys","nation","n_name",0);
    (C_154,r1_200) := sql.bind(X_7,"sys","nation","n_name",2);
    X_156:bat[:str] := sql.bind(X_7,"sys","nation","n_name",1);
    X_157 := sql.delta(X_152,C_154,r1_200,X_156);
    X_158 := algebra.projection(C_150,X_157);
    C_159 := algebra.subselect(X_158,A5,A5,true,false,false);
    X_160:bat[:int] := sql.bind(X_7,"sys","nation","n_nationkey",0);
    (C_162,r1_210) := sql.bind(X_7,"sys","nation","n_nationkey",2);
    X_164:bat[:int] := sql.bind(X_7,"sys","nation","n_nationkey",1);
    X_165 := sql.delta(X_160,C_162,r1_210,X_164);
    X_166:bat[:int] := algebra.projectionpath(C_159,C_150,X_165);
    (X_167,r1_216) := algebra.subjoin(X_149,X_166,nil:BAT,nil:BAT,false,nil:lng);
    X_169:bat[:str] := sql.bind(X_7,"sys","supplier","s_name",0);
    (C_171,r1_224) := sql.bind(X_7,"sys","supplier","s_name",2);
    X_173:bat[:str] := sql.bind(X_7,"sys","supplier","s_name",1);
    X_174 := sql.delta(X_169,C_171,r1_224,X_173);
    X_175:bat[:str] := algebra.projectionpath(X_167,C_142,C_8,X_174);
    (X_176,r1_231,r2_231) := algebra.subsort(X_175,false,false);
    X_179 := algebra.projection(r1_231,X_175);
    X_180:bat[:str] := sql.bind(X_7,"sys","supplier","s_address",0);
    (C_182,r1_237) := sql.bind(X_7,"sys","supplier","s_address",2);
    X_184:bat[:str] := sql.bind(X_7,"sys","supplier","s_address",1);
    X_185 := sql.delta(X_180,C_182,r1_237,X_184);
    X_186:bat[:str] := algebra.projectionpath(r1_231,X_167,C_142,C_8,X_185);
    sql.resultSet(X_204,X_205,X_206,X_208,X_210,X_179,X_186);
end user.s2_1;

# 22:53:30 >  
# 22:53:30 >  "Done."
# 22:53:30 >  

