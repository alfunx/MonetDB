stdout of test 'between.Bug-3259` in directory 'sql/test/BugTracker-2013` itself:


# 20:18:30 >  
# 20:18:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=31042" "--set" "mapi_usock=/var/tmp/mtest-5226/.s.monetdb.31042" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/niels/scratch/rc-clean/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2013" "--set" "mal_listing=0"
# 20:18:30 >  

# MonetDB 5 server v11.15.4
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2013', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 3.778 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://niels.nesco.mine.nu:31042/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-5226/.s.monetdb.31042
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

Ready.

# 20:18:31 >  
# 20:18:31 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-5226" "--port=31042"
# 20:18:31 >  

#START TRANSACTION;
#CREATE TABLE treeitems (
#	    "tree"    CHARACTER LARGE OBJECT,
#	    "subject" INTEGER,
#	    "pre"     BIGINT,
#	    "post"    BIGINT,
#	    "size"    BIGINT,
#	    "level"   TINYINT,
#	    "prob"    DOUBLE        DEFAULT 1.0,
#	    CONSTRAINT "treeitems_tree_pre_unique" UNIQUE ("tree", "pre"),
#	    CONSTRAINT "treeitems_tree_post_unique" UNIQUE ("tree", "post")
#);
#explain
#SELECT t1.subject as id1, t2.subject as id2
#FROM  treeitems t1, treeitems t2
#WHERE t2.pre between t1.pre and t1.pre + t1.size;
% .explain # table_name
% mal # name
% clob # type
% 191 # length
function user.s2_1():void;
    X_49:void := querylog.define("explain\nselect t1.subject as id1, t2.subject as id2\nfrom  treeitems t1, treeitems t2\nwhere t2.pre between t1.pre and t1.pre + t1.size;","default_pipe",39);
barrier X_63 := language.dataflow();
    X_26 := bat.new(nil:oid,nil:str);
    X_34 := bat.append(X_26,"sys.L");
    X_43 := bat.append(X_34,"sys.L");
    X_29 := bat.new(nil:oid,nil:str);
    X_36 := bat.append(X_29,"id1");
    X_44 := bat.append(X_36,"id2");
    X_30 := bat.new(nil:oid,nil:str);
    X_38 := bat.append(X_30,"int");
    X_46 := bat.append(X_38,"int");
    X_31 := bat.new(nil:oid,nil:int);
    X_40 := bat.append(X_31,32);
    X_47 := bat.append(X_40,32);
    X_33 := bat.new(nil:oid,nil:int);
    X_42 := bat.append(X_33,0);
    X_48 := bat.append(X_42,0);
    X_1 := sql.mvc();
    C_2:bat[:oid] := sql.tid(X_1,"sys","treeitems");
    X_5:bat[:lng] := sql.bind(X_1,"sys","treeitems","pre",0);
    X_8 := algebra.projection(C_2,X_5);
    X_9 := batcalc.hge(X_8);
    X_10:bat[:lng] := sql.bind(X_1,"sys","treeitems","size",0);
    X_12 := algebra.projection(C_2,X_10);
    X_13 := batcalc.hge(X_12);
    X_14:bat[:hge] := batcalc.+(X_9,X_13);
    (X_15,r1_22) := algebra.subrangejoin(X_9,X_9,X_14,nil:BAT,nil:BAT,true,true,nil:lng);
    X_20:bat[:int] := sql.bind(X_1,"sys","treeitems","subject",0);
    X_22 := algebra.projection(C_2,X_20);
    X_23 := algebra.projection(r1_22,X_22);
    X_24 := algebra.projection(X_15,X_22);
    language.pass(X_9);
    language.pass(X_9);
    language.pass(C_2);
    language.pass(X_22);
exit X_63;
    sql.resultSet(X_43,X_44,X_46,X_47,X_48,X_23,X_24);
end user.s2_1;
#ROLLBACK;

# 20:18:31 >  
# 20:18:31 >  "Done."
# 20:18:31 >  

