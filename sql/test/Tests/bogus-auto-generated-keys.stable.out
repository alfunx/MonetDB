stdout of test 'bogus-auto-generated-keys` in directory 'sql/test` itself:


# 15:49:00 >  
# 15:49:00 >   mserver5 "--config=/export/scratch/stripe/fabian/monetdb/stable/program-i86pc/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/export/scratch/stripe/fabian/monetdb/stable/program-i86pc/lib/MonetDB5:/export/scratch/stripe/fabian/monetdb/stable/program-i86pc/lib/MonetDB5/lib:/export/scratch/stripe/fabian/monetdb/stable/program-i86pc/lib/MonetDB5/bin" --set "gdk_dbfarm=/export/scratch/stripe/fabian/monetdb/stable/mtest-pegasus.ins.cwi.nl/sql/dbfarm" --set "sql_logdir=/export/scratch/stripe/fabian/monetdb/stable/mtest-pegasus.ins.cwi.nl/sql/sqllog" --set "xquery_logdir=/export/scratch/stripe/fabian/monetdb/stable/mtest-pegasus.ins.cwi.nl/sql/xquerylog"  --set mapi_open=true --set xrpc_open=true --set mapi_port=37335 --set xrpc_port=46803 --set monet_prompt= --trace  "--dbname=mTests_src_test" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 15:49:00 >  

# MonetDB server v5.10.1, based on kernel v1.28.1
# Serving database 'mTests_src_test', using 1 thread
# Compiled for x86_64-pc-solaris2.11/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008- MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://pegasus.ins.cwi.nl:37335/
# MonetDB/SQL module v2.28.1 loaded

Ready.
#function user.main():void;
#    clients.quit();
#end main;


# 15:49:00 >  
# 15:49:00 >  ./bogus-auto-generated-keys.SQL.sh bogus-auto-generated-keys 
# 15:49:00 >  


# 15:49:00 >  
# 15:49:00 >  Mtimeout -timeout 60  java nl.cwi.monetdb.client.JdbcClient -h pegasus -p 37335 -d mTests_src_test -e -f "../../../../../../../../../../../net/volund.ins.cwi.nl/export/scratch1/fabian/monetdb/stable/sql/src/test/Tests/../bogus-auto-generated-keys.sql"
# 15:49:00 >  

-- generate a simple table with an auto-generated key (id)
CREATE TABLE gen_keys (
	"id" serial,
	"x" varchar(12)
);
Operation successful


-- perform an update, useless, but illustrates the bug, this time no
-- generated key is reported, which is correct
UPDATE gen_keys SET "x" = 'bla' WHERE "id" = 12;
0 affected rows


-- insert some value, should get a generated key
INSERT INTO gen_keys ("x") VALUES ('boe');
1 affected row, last generated key: 1


-- update again, we expect NO generated key, but we DO get one
UPDATE gen_keys SET "x" = 'bla' WHERE "id" = 1;
1 affected row, last generated key: 1

UPDATE gen_keys SET "x" = 'bla' WHERE "id" = 12;
0 affected rows, last generated key: 1


-- ok, cleanup a bit
DROP TABLE gen_keys;
Operation successful


# 15:49:01 >  
# 15:49:01 >  Done.
# 15:49:01 >  

