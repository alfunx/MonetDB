stdout of test 'mergequery` in directory 'sql/test/mergetables` itself:


# 16:20:23 >  
# 16:20:23 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=30678" "--set" "mapi_usock=/var/tmp/mtest-11019/.s.monetdb.30678" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/current//Linux/var/MonetDB/mTests_sql_test_mergetables" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 16:20:23 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_sql_test_mergetables', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:30678/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-11019/.s.monetdb.30678
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 16:20:23 >  
# 16:20:23 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-11019" "--port=30678"
# 16:20:23 >  

#CREATE TABLE part1 ( x double, y double, z double);
#COPY 4 RECORDS INTO part1 FROM stdin USING DELIMITERS ' ','\n';
#0.0 0.0 0.0
#1.0 0.0 0.0 
#0.0 1.0 0.0 
#1.0 1.0 0.0 
[ 4	]
#CREATE TABLE part2 ( x double, y double, z double);
#COPY 4 RECORDS INTO part2 FROM stdin USING DELIMITERS ' ','\n';
#2.0 0.0 0.0
#3.0 0.0 0.0 
#2.0 1.0 0.0 
#3.0 1.0 0.0 
[ 4	]
#CREATE MERGE TABLE complete ( x double, y double, z double);
#ALTER TABLE complete ADD TABLE part1;
#ALTER TABLE complete ADD TABLE part2;
#SELECT * FROM COMPLETE;
% .complete,	.complete,	.complete # table_name
% x,	y,	z # name
% double,	double,	double # type
% 24,	24,	24 # length
[ 0,	0,	0	]
[ 1,	0,	0	]
[ 0,	1,	0	]
[ 1,	1,	0	]
[ 2,	0,	0	]
[ 3,	0,	0	]
[ 2,	1,	0	]
[ 3,	1,	0	]
#SELECT * FROM complete where x>=0.0 AND x <=1.0;
% .complete,	.complete,	.complete # table_name
% x,	y,	z # name
% double,	double,	double # type
% 24,	24,	24 # length
[ 0,	0,	0	]
[ 1,	0,	0	]
[ 0,	1,	0	]
[ 1,	1,	0	]
#SELECT * FROM complete where x>=2.0 AND x <=3.0;
% .complete,	.complete,	.complete # table_name
% x,	y,	z # name
% double,	double,	double # type
% 24,	24,	24 # length
[ 2,	0,	0	]
[ 3,	0,	0	]
[ 2,	1,	0	]
[ 3,	1,	0	]
#SELECT * FROM complete where x>=1.0 AND x <=2.0;
% .complete,	.complete,	.complete # table_name
% x,	y,	z # name
% double,	double,	double # type
% 24,	24,	24 # length
[ 1,	0,	0	]
[ 1,	1,	0	]
[ 2,	0,	0	]
[ 2,	1,	0	]
#CREATE TABLE answ( LIKE complete);
#EXPLAIN INSERT INTO answ
#SELECT * FROM complete where x>=1.0 AND x <=2.0;
% .explain # table_name
% mal # name
% clob # type
% 130 # length
function user.s13_1(A0:dbl,A1:dbl):void;
    X_55:void := querylog.define("explain insert into answ\nselect * from complete where x>=1.0 and x <=2.0;","default_pipe",132);
barrier X_172 := language.dataflow();
    X_3 := sql.mvc();
    X_4:bat[:dbl] := bat.new(nil:oid,nil:dbl);
    X_76:bat[:dbl] := sql.bind(X_3,"sys","part1","x",0,0,4);
    X_71:bat[:oid] := sql.tid(X_3,"sys","part1",0,4);
    X_112 := algebra.subselect(X_76,X_71,A0,A1,true,true,false);
    (X_80:bat[:oid],X_81:bat[:dbl]) := sql.bind(X_3,"sys","part1","x",2,0,4);
    X_116 := algebra.subselect(X_81,nil:bat[:oid],A0,A1,true,true,false);
    X_120 := sql.subdelta(X_112,X_71,X_80,X_116);
    X_124 := sql.projectdelta(X_120,X_76,X_80,X_81);
    X_77:bat[:dbl] := sql.bind(X_3,"sys","part1","x",0,1,4);
    X_72:bat[:oid] := sql.tid(X_3,"sys","part1",1,4);
    X_113 := algebra.subselect(X_77,X_72,A0,A1,true,true,false);
    (X_82:bat[:oid],X_83:bat[:dbl]) := sql.bind(X_3,"sys","part1","x",2,1,4);
    X_117 := algebra.subselect(X_83,nil:bat[:oid],A0,A1,true,true,false);
    X_121 := sql.subdelta(X_113,X_72,X_82,X_117);
    X_125 := sql.projectdelta(X_121,X_77,X_82,X_83);
    X_78:bat[:dbl] := sql.bind(X_3,"sys","part1","x",0,2,4);
    X_73:bat[:oid] := sql.tid(X_3,"sys","part1",2,4);
    X_114 := algebra.subselect(X_78,X_73,A0,A1,true,true,false);
    (X_84:bat[:oid],X_85:bat[:dbl]) := sql.bind(X_3,"sys","part1","x",2,2,4);
    X_118 := algebra.subselect(X_85,nil:bat[:oid],A0,A1,true,true,false);
    X_122 := sql.subdelta(X_114,X_73,X_84,X_118);
    X_126 := sql.projectdelta(X_122,X_78,X_84,X_85);
    X_79:bat[:dbl] := sql.bind(X_3,"sys","part1","x",0,3,4);
    X_75:bat[:oid] := sql.tid(X_3,"sys","part1",3,4);
    X_115 := algebra.subselect(X_79,X_75,A0,A1,true,true,false);
    (X_86:bat[:oid],X_87:bat[:dbl]) := sql.bind(X_3,"sys","part1","x",2,3,4);
    X_119 := algebra.subselect(X_87,nil:bat[:oid],A0,A1,true,true,false);
    X_12:bat[:dbl] := sql.bind(X_3,"sys","part1","x",1);
    C_66 := algebra.subselect(X_12,X_75,A0,A1,true,true,false);
    X_123 := sql.subdelta(X_115,X_75,X_86,X_119,C_66);
    X_127 := sql.projectdelta(X_123,X_79,X_86,X_87,X_12);
    X_136 := mat.packIncrement(X_124,4);
    X_138 := mat.packIncrement(X_136,X_125);
    X_139 := mat.packIncrement(X_138,X_126);
    X_16 := mat.packIncrement(X_139,X_127);
    X_17 := bat.append(X_4,X_16,true);
    X_20:bat[:dbl] := sql.bind(X_3,"sys","part2","x",0);
    C_18:bat[:oid] := sql.tid(X_3,"sys","part2");
    C_67 := algebra.subselect(X_20,C_18,A0,A1,true,true,false);
    (C_21,r1_31) := sql.bind(X_3,"sys","part2","x",2);
    C_68 := algebra.subselect(r1_31,nil:bat[:oid],A0,A1,true,true,false);
    X_23:bat[:dbl] := sql.bind(X_3,"sys","part2","x",1);
    C_69 := algebra.subselect(X_23,C_18,A0,A1,true,true,false);
    C_24 := sql.subdelta(C_67,C_18,C_21,C_68,C_69);
    X_25 := sql.projectdelta(C_24,X_20,C_21,r1_31,X_23);
    X_26 := bat.append(X_17,X_25,true);
    language.pass(X_71);
    language.pass(X_76);
    language.pass(X_80);
    language.pass(X_81);
    language.pass(X_72);
    language.pass(X_77);
    language.pass(X_82);
    language.pass(X_83);
    language.pass(X_73);
    language.pass(X_78);
    language.pass(X_84);
    language.pass(X_85);
    language.pass(X_75);
    language.pass(X_79);
    language.pass(X_86);
    language.pass(X_87);
    language.pass(X_12);
    language.pass(nil:bat[:oid]);
    language.pass(C_18);
    language.pass(X_20);
    language.pass(C_21);
    language.pass(r1_31);
    language.pass(X_23);
exit X_172;
    X_27 := sql.append(X_3,"sys","answ","x",X_26);
barrier X_175 := language.dataflow();
    X_29:bat[:dbl] := bat.new(nil:oid,nil:dbl);
    X_88:bat[:dbl] := sql.bind(X_27,"sys","part1","y",0,0,4);
    (X_92:bat[:oid],X_93:bat[:dbl]) := sql.bind(X_27,"sys","part1","y",2,0,4);
    X_128 := sql.projectdelta(X_120,X_88,X_92,X_93);
    X_89:bat[:dbl] := sql.bind(X_27,"sys","part1","y",0,1,4);
    (X_94:bat[:oid],X_95:bat[:dbl]) := sql.bind(X_27,"sys","part1","y",2,1,4);
    X_129 := sql.projectdelta(X_121,X_89,X_94,X_95);
    X_90:bat[:dbl] := sql.bind(X_27,"sys","part1","y",0,2,4);
    (X_96:bat[:oid],X_97:bat[:dbl]) := sql.bind(X_27,"sys","part1","y",2,2,4);
    X_130 := sql.projectdelta(X_122,X_90,X_96,X_97);
    X_91:bat[:dbl] := sql.bind(X_27,"sys","part1","y",0,3,4);
    (X_98:bat[:oid],X_99:bat[:dbl]) := sql.bind(X_27,"sys","part1","y",2,3,4);
    X_31:bat[:dbl] := sql.bind(X_27,"sys","part1","y",1);
    X_131 := sql.projectdelta(X_123,X_91,X_98,X_99,X_31);
    X_141 := mat.packIncrement(X_128,4);
    X_142 := mat.packIncrement(X_141,X_129);
    X_143 := mat.packIncrement(X_142,X_130);
    X_32 := mat.packIncrement(X_143,X_131);
    X_33 := bat.append(X_29,X_32,true);
    X_34:bat[:dbl] := sql.bind(X_27,"sys","part2","y",0);
    (C_35,r1_59) := sql.bind(X_27,"sys","part2","y",2);
    X_37:bat[:dbl] := sql.bind(X_27,"sys","part2","y",1);
    X_38 := sql.projectdelta(C_24,X_34,C_35,r1_59,X_37);
    X_39 := bat.append(X_33,X_38,true);
exit X_175;
    X_40 := sql.append(X_27,"sys","answ","y",X_39);
barrier X_178 := language.dataflow();
    X_41:bat[:dbl] := bat.new(nil:oid,nil:dbl);
    X_100:bat[:dbl] := sql.bind(X_40,"sys","part1","z",0,0,4);
    (X_104:bat[:oid],X_105:bat[:dbl]) := sql.bind(X_40,"sys","part1","z",2,0,4);
    X_132 := sql.projectdelta(X_120,X_100,X_104,X_105);
    X_101:bat[:dbl] := sql.bind(X_40,"sys","part1","z",0,1,4);
    (X_106:bat[:oid],X_107:bat[:dbl]) := sql.bind(X_40,"sys","part1","z",2,1,4);
    X_133 := sql.projectdelta(X_121,X_101,X_106,X_107);
    X_102:bat[:dbl] := sql.bind(X_40,"sys","part1","z",0,2,4);
    (X_108:bat[:oid],X_109:bat[:dbl]) := sql.bind(X_40,"sys","part1","z",2,2,4);
    X_134 := sql.projectdelta(X_122,X_102,X_108,X_109);
    X_103:bat[:dbl] := sql.bind(X_40,"sys","part1","z",0,3,4);
    (X_110:bat[:oid],X_111:bat[:dbl]) := sql.bind(X_40,"sys","part1","z",2,3,4);
    X_43:bat[:dbl] := sql.bind(X_40,"sys","part1","z",1);
    X_135 := sql.projectdelta(X_123,X_103,X_110,X_111,X_43);
    X_145 := mat.packIncrement(X_132,4);
    X_146 := mat.packIncrement(X_145,X_133);
    X_147 := mat.packIncrement(X_146,X_134);
    X_44 := mat.packIncrement(X_147,X_135);
    X_45 := bat.append(X_41,X_44,true);
    X_46:bat[:dbl] := sql.bind(X_40,"sys","part2","z",0);
    (C_47,r1_79) := sql.bind(X_40,"sys","part2","z",2);
    X_49:bat[:dbl] := sql.bind(X_40,"sys","part2","z",1);
    X_50 := sql.projectdelta(C_24,X_46,C_47,r1_79,X_49);
    X_51 := bat.append(X_45,X_50,true);
exit X_178;
    X_52 := sql.append(X_40,"sys","answ","z",X_51);
    X_53 := aggr.count(X_51);
    sql.affectedRows(X_52,X_53);
end user.s13_1;
#INSERT INTO answ
#SELECT * FROM complete where x>=1.0 AND x <=2.0;
[ 4	]
#EXPLAIN INSERT INTO answ
#SELECT * FROM complete
#WHERE x BETWEEN 0 AND 2 AND Y BETWEEN 0 AND 2;
% .explain # table_name
% mal # name
% clob # type
% 152 # length
function user.s14_1(A0:dbl,A1:dbl,A2:dbl,A3:dbl):void;
    X_58:void := querylog.define("explain insert into answ\nselect * from complete\nwhere x between 0 and 2 and y between 0 and 2;","default_pipe",154);
barrier X_196 := language.dataflow();
    X_5 := sql.mvc();
    X_6:bat[:dbl] := bat.new(nil:oid,nil:dbl);
    X_83:bat[:dbl] := sql.bind(X_5,"sys","part1","x",0,0,4);
    X_95:bat[:dbl] := sql.bind(X_5,"sys","part1","y",0,0,4);
    X_78:bat[:oid] := sql.tid(X_5,"sys","part1",0,4);
    X_119 := algebra.subselect(X_95,X_78,A2,A3,true,true,false);
    (X_99:bat[:oid],X_100:bat[:dbl]) := sql.bind(X_5,"sys","part1","y",2,0,4);
    X_123 := algebra.subselect(X_100,nil:bat[:oid],A2,A3,true,true,false);
    X_127 := sql.subdelta(X_119,X_78,X_99,X_123);
    X_131 := algebra.subselect(X_83,X_127,A0,A1,true,true,false);
    (X_87:bat[:oid],X_88:bat[:dbl]) := sql.bind(X_5,"sys","part1","x",2,0,4);
    X_135 := algebra.subselect(X_88,nil:bat[:oid],A0,A1,true,true,false);
    X_139 := sql.subdelta(X_131,X_127,X_87,X_135);
    X_143 := sql.projectdelta(X_139,X_83,X_87,X_88);
    X_84:bat[:dbl] := sql.bind(X_5,"sys","part1","x",0,1,4);
    X_96:bat[:dbl] := sql.bind(X_5,"sys","part1","y",0,1,4);
    X_79:bat[:oid] := sql.tid(X_5,"sys","part1",1,4);
    X_120 := algebra.subselect(X_96,X_79,A2,A3,true,true,false);
    (X_101:bat[:oid],X_102:bat[:dbl]) := sql.bind(X_5,"sys","part1","y",2,1,4);
    X_124 := algebra.subselect(X_102,nil:bat[:oid],A2,A3,true,true,false);
    X_128 := sql.subdelta(X_120,X_79,X_101,X_124);
    X_132 := algebra.subselect(X_84,X_128,A0,A1,true,true,false);
    (X_89:bat[:oid],X_90:bat[:dbl]) := sql.bind(X_5,"sys","part1","x",2,1,4);
    X_136 := algebra.subselect(X_90,nil:bat[:oid],A0,A1,true,true,false);
    X_140 := sql.subdelta(X_132,X_128,X_89,X_136);
    X_144 := sql.projectdelta(X_140,X_84,X_89,X_90);
    X_85:bat[:dbl] := sql.bind(X_5,"sys","part1","x",0,2,4);
    X_97:bat[:dbl] := sql.bind(X_5,"sys","part1","y",0,2,4);
    X_80:bat[:oid] := sql.tid(X_5,"sys","part1",2,4);
    X_121 := algebra.subselect(X_97,X_80,A2,A3,true,true,false);
    (X_103:bat[:oid],X_104:bat[:dbl]) := sql.bind(X_5,"sys","part1","y",2,2,4);
    X_125 := algebra.subselect(X_104,nil:bat[:oid],A2,A3,true,true,false);
    X_129 := sql.subdelta(X_121,X_80,X_103,X_125);
    X_133 := algebra.subselect(X_85,X_129,A0,A1,true,true,false);
    (X_91:bat[:oid],X_92:bat[:dbl]) := sql.bind(X_5,"sys","part1","x",2,2,4);
    X_137 := algebra.subselect(X_92,nil:bat[:oid],A0,A1,true,true,false);
    X_141 := sql.subdelta(X_133,X_129,X_91,X_137);
    X_145 := sql.projectdelta(X_141,X_85,X_91,X_92);
    X_86:bat[:dbl] := sql.bind(X_5,"sys","part1","x",0,3,4);
    X_98:bat[:dbl] := sql.bind(X_5,"sys","part1","y",0,3,4);
    X_82:bat[:oid] := sql.tid(X_5,"sys","part1",3,4);
    X_122 := algebra.subselect(X_98,X_82,A2,A3,true,true,false);
    (X_105:bat[:oid],X_106:bat[:dbl]) := sql.bind(X_5,"sys","part1","y",2,3,4);
    X_126 := algebra.subselect(X_106,nil:bat[:oid],A2,A3,true,true,false);
    X_17:bat[:dbl] := sql.bind(X_5,"sys","part1","y",1);
    C_69 := algebra.subselect(X_17,X_82,A2,A3,true,true,false);
    X_130 := sql.subdelta(X_122,X_82,X_105,X_126,C_69);
    X_134 := algebra.subselect(X_86,X_130,A0,A1,true,true,false);
    (X_93:bat[:oid],X_94:bat[:dbl]) := sql.bind(X_5,"sys","part1","x",2,3,4);
    X_138 := algebra.subselect(X_94,nil:bat[:oid],A0,A1,true,true,false);
    X_14:bat[:dbl] := sql.bind(X_5,"sys","part1","x",1);
    C_70 := algebra.subselect(X_14,X_130,A0,A1,true,true,false);
    X_142 := sql.subdelta(X_134,X_130,X_93,X_138,C_70);
    X_146 := sql.projectdelta(X_142,X_86,X_93,X_94,X_14);
    X_155 := mat.packIncrement(X_143,4);
    X_157 := mat.packIncrement(X_155,X_144);
    X_158 := mat.packIncrement(X_157,X_145);
    X_20 := mat.packIncrement(X_158,X_146);
    X_21 := bat.append(X_6,X_20,true);
    X_24:bat[:dbl] := sql.bind(X_5,"sys","part2","x",0);
    X_28:bat[:dbl] := sql.bind(X_5,"sys","part2","y",0);
    C_22:bat[:oid] := sql.tid(X_5,"sys","part2");
    C_71 := algebra.subselect(X_28,C_22,A2,A3,true,true,false);
    (C_29,r1_51) := sql.bind(X_5,"sys","part2","y",2);
    C_72 := algebra.subselect(r1_51,nil:bat[:oid],A2,A3,true,true,false);
    X_31:bat[:dbl] := sql.bind(X_5,"sys","part2","y",1);
    C_73 := algebra.subselect(X_31,C_22,A2,A3,true,true,false);
    C_32 := sql.subdelta(C_71,C_22,C_29,C_72,C_73);
    C_74 := algebra.subselect(X_24,C_32,A0,A1,true,true,false);
    (C_25,r1_43) := sql.bind(X_5,"sys","part2","x",2);
    C_75 := algebra.subselect(r1_43,nil:bat[:oid],A0,A1,true,true,false);
    X_27:bat[:dbl] := sql.bind(X_5,"sys","part2","x",1);
    C_76 := algebra.subselect(X_27,C_32,A0,A1,true,true,false);
    C_33 := sql.subdelta(C_74,C_32,C_25,C_75,C_76);
    X_34 := sql.projectdelta(C_33,X_24,C_25,r1_43,X_27);
    X_35 := bat.append(X_21,X_34,true);
    language.pass(X_78);
    language.pass(X_127);
    language.pass(X_83);
    language.pass(X_87);
    language.pass(X_88);
    language.pass(X_79);
    language.pass(X_128);
    language.pass(X_84);
    language.pass(X_89);
    language.pass(X_90);
    language.pass(X_80);
    language.pass(X_129);
    language.pass(X_85);
    language.pass(X_91);
    language.pass(X_92);
    language.pass(X_82);
    language.pass(X_130);
    language.pass(X_86);
    language.pass(X_93);
    language.pass(X_94);
    language.pass(X_14);
    language.pass(C_22);
    language.pass(nil:bat[:oid]);
    language.pass(C_32);
    language.pass(X_24);
    language.pass(C_25);
    language.pass(r1_43);
    language.pass(X_27);
exit X_196;
    X_36 := sql.append(X_5,"sys","answ","x",X_35);
barrier X_199 := language.dataflow();
    X_38:bat[:dbl] := bat.new(nil:oid,nil:dbl);
    X_147 := sql.projectdelta(X_139,X_95,X_99,X_100);
    X_148 := sql.projectdelta(X_140,X_96,X_101,X_102);
    X_149 := sql.projectdelta(X_141,X_97,X_103,X_104);
    X_150 := sql.projectdelta(X_142,X_98,X_105,X_106,X_17);
    X_160 := mat.packIncrement(X_147,4);
    X_161 := mat.packIncrement(X_160,X_148);
    X_162 := mat.packIncrement(X_161,X_149);
    X_39 := mat.packIncrement(X_162,X_150);
    X_40 := bat.append(X_38,X_39,true);
    X_41 := sql.projectdelta(C_33,X_28,C_29,r1_51,X_31);
    X_42 := bat.append(X_40,X_41,true);
exit X_199;
    X_43 := sql.append(X_36,"sys","answ","y",X_42);
barrier X_202 := language.dataflow();
    X_44:bat[:dbl] := bat.new(nil:oid,nil:dbl);
    X_107:bat[:dbl] := sql.bind(X_43,"sys","part1","z",0,0,4);
    (X_111:bat[:oid],X_112:bat[:dbl]) := sql.bind(X_43,"sys","part1","z",2,0,4);
    X_151 := sql.projectdelta(X_139,X_107,X_111,X_112);
    X_108:bat[:dbl] := sql.bind(X_43,"sys","part1","z",0,1,4);
    (X_113:bat[:oid],X_114:bat[:dbl]) := sql.bind(X_43,"sys","part1","z",2,1,4);
    X_152 := sql.projectdelta(X_140,X_108,X_113,X_114);
    X_109:bat[:dbl] := sql.bind(X_43,"sys","part1","z",0,2,4);
    (X_115:bat[:oid],X_116:bat[:dbl]) := sql.bind(X_43,"sys","part1","z",2,2,4);
    X_153 := sql.projectdelta(X_141,X_109,X_115,X_116);
    X_110:bat[:dbl] := sql.bind(X_43,"sys","part1","z",0,3,4);
    (X_117:bat[:oid],X_118:bat[:dbl]) := sql.bind(X_43,"sys","part1","z",2,3,4);
    X_46:bat[:dbl] := sql.bind(X_43,"sys","part1","z",1);
    X_154 := sql.projectdelta(X_142,X_110,X_117,X_118,X_46);
    X_164 := mat.packIncrement(X_151,4);
    X_165 := mat.packIncrement(X_164,X_152);
    X_166 := mat.packIncrement(X_165,X_153);
    X_47 := mat.packIncrement(X_166,X_154);
    X_48 := bat.append(X_44,X_47,true);
    X_49:bat[:dbl] := sql.bind(X_43,"sys","part2","z",0);
    (C_50,r1_88) := sql.bind(X_43,"sys","part2","z",2);
    X_52:bat[:dbl] := sql.bind(X_43,"sys","part2","z",1);
    X_53 := sql.projectdelta(C_33,X_49,C_50,r1_88,X_52);
    X_54 := bat.append(X_48,X_53,true);
exit X_202;
    X_55 := sql.append(X_43,"sys","answ","z",X_54);
    X_56 := aggr.count(X_54);
    sql.affectedRows(X_55,X_56);
end user.s14_1;
#INSERT INTO answ
#SELECT * FROM complete
#WHERE x BETWEEN 0 AND 2 AND Y BETWEEN 0 AND 2;
[ 6	]
#DROP TABLE complete;
#DROP TABLE part1;
#DROP TABLE part2;

# 16:20:24 >  
# 16:20:24 >  "Done."
# 16:20:24 >  

