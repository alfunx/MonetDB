stdout of test 'partition_elim` in directory 'sql/test/remote` itself:


# 18:37:29 >  
# 18:37:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35081" "--set" "mapi_usock=/var/tmp/mtest-17557/.s.monetdb.35081" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_remote" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 18:37:29 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_sql_test_remote', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 7.333 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.nes.nl:35081/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17557/.s.monetdb.35081
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 18:37:29 >  
# 18:37:29 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-17557" "--port=35081"
# 18:37:29 >  

#create merge table test (x double, y double);
#create table test1 (x double, y double);
#create table test2 (x double, y double);
#create table test3 (x double, y double);
#create table test4 (x double, y double);
#insert into test1 values (1.0, 1.0);
[ 1	]
#insert into test1 values (2.0, 2.0);
[ 1	]
#insert into test2 values (3.0, -1.0);
[ 1	]
#insert into test2 values (4.0, -2.0);
[ 1	]
#insert into test3 values (3.0, 1.0);
[ 1	]
#insert into test3 values (6.0, 2.0);
[ 1	]
#insert into test4 values (7.0, 1.0);
[ 1	]
#insert into test4 values (10.0, 2.0);
[ 1	]
#alter table test1 set read only;
#alter table test2 set read only;
#alter table test3 set read only;
#alter table test4 set read only;
#alter table test add table test1;
#alter table test add table test2;
#alter table test add table test3;
#alter table test add table test4;
#select x from test1 where x between 0 and -1;
% sys.test1 # table_name
% x # name
% double # type
% 24 # length
#select x from test2 where x between 0 and -1;
% sys.test2 # table_name
% x # name
% double # type
% 24 # length
#select x from test3 where x between 0 and -1;
% sys.test3 # table_name
% x # name
% double # type
% 24 # length
#select x from test4 where x between 0 and -1;
% sys.test4 # table_name
% x # name
% double # type
% 24 # length
#select y from test1 where y between 0 and -1;
% sys.test1 # table_name
% y # name
% double # type
% 24 # length
#select y from test2 where y between 0 and -1;
% sys.test2 # table_name
% y # name
% double # type
% 24 # length
#select y from test3 where y between 0 and -1;
% sys.test3 # table_name
% y # name
% double # type
% 24 # length
#select y from test4 where y between 0 and -1;
% sys.test4 # table_name
% y # name
% double # type
% 24 # length
#explain select x,y from test where x between 4.0 and 6.0;
% .explain # table_name
% mal # name
% clob # type
% 61 # length
function user.SQLanalyze():void;
barrier X_80 := language.dataflow();
    X_29 := bat.new(nil:oid,nil:str);
    X_36 := bat.append(X_29,".test");
    X_44 := bat.append(X_36,".test");
    X_31 := bat.new(nil:oid,nil:str);
    X_38 := bat.append(X_31,"x");
    X_45 := bat.append(X_38,"y");
    X_32 := bat.new(nil:oid,nil:str);
    X_39 := bat.append(X_32,"double");
    X_46 := bat.append(X_39,"double");
    X_33 := bat.new(nil:oid,nil:int);
    X_41 := bat.append(X_33,53);
    X_47 := bat.append(X_41,53);
    X_35 := bat.new(nil:oid,nil:int);
    X_43 := bat.append(X_35,0);
    X_48 := bat.append(X_43,0);
    X_4:bat[:dbl] := bat.new(nil:oid,nil:dbl);
    X_3 := sql.mvc();
    X_60:bat[:dbl] := sql.bind(X_3,"sys","test2","x",0,0,2);
    X_57:bat[:oid] := sql.tid(X_3,"sys","test2",0,2);
    X_64 := algebra.subselect(X_60,X_57,4,6,true,true,false);
    X_66 := algebra.projection(X_64,X_60);
    X_61:bat[:dbl] := sql.bind(X_3,"sys","test2","x",0,1,2);
    X_59:bat[:oid] := sql.tid(X_3,"sys","test2",1,2);
    X_65 := algebra.subselect(X_61,X_59,4,6,true,true,false);
    X_67 := algebra.projection(X_65,X_61);
    X_70 := mat.packIncrement(X_66,2);
    X_13 := mat.packIncrement(X_70,X_67);
    X_14 := bat.append(X_4,X_13,true);
    X_17:bat[:dbl] := sql.bind(X_3,"sys","test3","x",0);
    C_15:bat[:oid] := sql.tid(X_3,"sys","test3");
    C_18 := algebra.subselect(X_17,C_15,4,6,true,true,false);
    X_19 := algebra.projection(C_18,X_17);
    X_20 := bat.append(X_14,X_19,true);
    X_21:bat[:dbl] := bat.new(nil:oid,nil:dbl);
    X_62:bat[:dbl] := sql.bind(X_3,"sys","test2","y",0,0,2);
    X_68 := algebra.projection(X_64,X_62);
    X_63:bat[:dbl] := sql.bind(X_3,"sys","test2","y",0,1,2);
    X_69 := algebra.projection(X_65,X_63);
    X_72 := mat.packIncrement(X_68,2);
    X_23 := mat.packIncrement(X_72,X_69);
    X_24 := bat.append(X_21,X_23,true);
    X_25:bat[:dbl] := sql.bind(X_3,"sys","test3","y",0);
    X_26 := algebra.projection(C_18,X_25);
    X_27 := bat.append(X_24,X_26,true);
    language.pass(X_60);
    language.pass(X_61);
    language.pass(X_17);
    language.pass(X_64);
    language.pass(X_65);
    language.pass(C_18);
exit X_80;
    sql.resultSet(X_44,X_45,X_46,X_47,X_48,X_20,X_27);
end user.SQLanalyze;
#explain select x,y from test where x between (7-3) and (7-1);
% .explain # table_name
% mal # name
% clob # type
% 69 # length
function user.SQLanalyze():void;
barrier X_80 := language.dataflow();
    X_27 := bat.new(nil:oid,nil:str);
    X_34 := bat.append(X_27,".test");
    X_42 := bat.append(X_34,".test");
    X_29 := bat.new(nil:oid,nil:str);
    X_36 := bat.append(X_29,"x");
    X_43 := bat.append(X_36,"y");
    X_30 := bat.new(nil:oid,nil:str);
    X_37 := bat.append(X_30,"double");
    X_44 := bat.append(X_37,"double");
    X_31 := bat.new(nil:oid,nil:int);
    X_39 := bat.append(X_31,53);
    X_45 := bat.append(X_39,53);
    X_33 := bat.new(nil:oid,nil:int);
    X_41 := bat.append(X_33,0);
    X_46 := bat.append(X_41,0);
    X_2:bat[:dbl] := bat.new(nil:oid,nil:dbl);
    X_1 := sql.mvc();
    X_60:bat[:dbl] := sql.bind(X_1,"sys","test2","x",0,0,2);
    X_57:bat[:oid] := sql.tid(X_1,"sys","test2",0,2);
    X_64 := algebra.subselect(X_60,X_57,4:dbl,6:dbl,true,true,false);
    X_66 := algebra.projection(X_64,X_60);
    X_61:bat[:dbl] := sql.bind(X_1,"sys","test2","x",0,1,2);
    X_59:bat[:oid] := sql.tid(X_1,"sys","test2",1,2);
    X_65 := algebra.subselect(X_61,X_59,4:dbl,6:dbl,true,true,false);
    X_67 := algebra.projection(X_65,X_61);
    X_70 := mat.packIncrement(X_66,2);
    X_11 := mat.packIncrement(X_70,X_67);
    X_12 := bat.append(X_2,X_11,true);
    X_15:bat[:dbl] := sql.bind(X_1,"sys","test3","x",0);
    C_13:bat[:oid] := sql.tid(X_1,"sys","test3");
    C_16 := algebra.subselect(X_15,C_13,4:dbl,6:dbl,true,true,false);
    X_17 := algebra.projection(C_16,X_15);
    X_18 := bat.append(X_12,X_17,true);
    X_19:bat[:dbl] := bat.new(nil:oid,nil:dbl);
    X_62:bat[:dbl] := sql.bind(X_1,"sys","test2","y",0,0,2);
    X_68 := algebra.projection(X_64,X_62);
    X_63:bat[:dbl] := sql.bind(X_1,"sys","test2","y",0,1,2);
    X_69 := algebra.projection(X_65,X_63);
    X_72 := mat.packIncrement(X_68,2);
    X_21 := mat.packIncrement(X_72,X_69);
    X_22 := bat.append(X_19,X_21,true);
    X_23:bat[:dbl] := sql.bind(X_1,"sys","test3","y",0);
    X_24 := algebra.projection(C_16,X_23);
    X_25 := bat.append(X_22,X_24,true);
    language.pass(X_60);
    language.pass(X_61);
    language.pass(X_15);
    language.pass(X_64);
    language.pass(X_65);
    language.pass(C_16);
exit X_80;
    sql.resultSet(X_42,X_43,X_44,X_45,X_46,X_18,X_25);
end user.SQLanalyze;
#explain select x,y from test where x between 4.0 and 6.0 and y between 0.0 and 2.0;
% .explain # table_name
% mal # name
% clob # type
% 61 # length
function user.SQLanalyze():void;
barrier X_70 := language.dataflow();
    X_16 := bat.new(nil:oid,nil:str);
    X_24 := bat.append(X_16,"sys.test");
    X_32 := bat.append(X_24,"sys.test");
    X_19 := bat.new(nil:oid,nil:str);
    X_26 := bat.append(X_19,"x");
    X_33 := bat.append(X_26,"y");
    X_20 := bat.new(nil:oid,nil:str);
    X_27 := bat.append(X_20,"double");
    X_34 := bat.append(X_27,"double");
    X_21 := bat.new(nil:oid,nil:int);
    X_29 := bat.append(X_21,53);
    X_35 := bat.append(X_29,53);
    X_23 := bat.new(nil:oid,nil:int);
    X_31 := bat.append(X_23,0);
    X_36 := bat.append(X_31,0);
    X_5 := sql.mvc();
    X_48:bat[:dbl] := sql.bind(X_5,"sys","test3","y",0,0,2);
    X_50:bat[:dbl] := sql.bind(X_5,"sys","test3","x",0,0,2);
    X_45:bat[:oid] := sql.tid(X_5,"sys","test3",0,2);
    X_52 := algebra.subselect(X_50,X_45,4,6,true,true,false);
    X_54 := algebra.subselect(X_48,X_52,0,2,true,true,false);
    X_56 := algebra.projection(X_54,X_50);
    X_49:bat[:dbl] := sql.bind(X_5,"sys","test3","y",0,1,2);
    X_51:bat[:dbl] := sql.bind(X_5,"sys","test3","x",0,1,2);
    X_47:bat[:oid] := sql.tid(X_5,"sys","test3",1,2);
    X_53 := algebra.subselect(X_51,X_47,4,6,true,true,false);
    X_55 := algebra.subselect(X_49,X_53,0,2,true,true,false);
    X_57 := algebra.projection(X_55,X_51);
    X_60 := mat.packIncrement(X_56,2);
    X_13 := mat.packIncrement(X_60,X_57);
    X_58 := algebra.projection(X_54,X_48);
    X_59 := algebra.projection(X_55,X_49);
    X_62 := mat.packIncrement(X_58,2);
    X_14 := mat.packIncrement(X_62,X_59);
    language.pass(X_50);
    language.pass(X_51);
    language.pass(X_54);
    language.pass(X_48);
    language.pass(X_55);
    language.pass(X_49);
exit X_70;
    sql.resultSet(X_32,X_33,X_34,X_35,X_36,X_13,X_14);
end user.SQLanalyze;
#explain select x,y from test where x between 4.0 and 6.0 and y between (1.0-1.0) and (4.0-2.0);
% .explain # table_name
% mal # name
% clob # type
% 69 # length
function user.SQLanalyze():void;
barrier X_70 := language.dataflow();
    X_15 := bat.new(nil:oid,nil:str);
    X_23 := bat.append(X_15,"sys.test");
    X_31 := bat.append(X_23,"sys.test");
    X_18 := bat.new(nil:oid,nil:str);
    X_25 := bat.append(X_18,"x");
    X_32 := bat.append(X_25,"y");
    X_19 := bat.new(nil:oid,nil:str);
    X_26 := bat.append(X_19,"double");
    X_33 := bat.append(X_26,"double");
    X_20 := bat.new(nil:oid,nil:int);
    X_28 := bat.append(X_20,53);
    X_34 := bat.append(X_28,53);
    X_22 := bat.new(nil:oid,nil:int);
    X_30 := bat.append(X_22,0);
    X_35 := bat.append(X_30,0);
    X_3 := sql.mvc();
    X_48:bat[:dbl] := sql.bind(X_3,"sys","test3","y",0,0,2);
    X_50:bat[:dbl] := sql.bind(X_3,"sys","test3","x",0,0,2);
    X_46:bat[:oid] := sql.tid(X_3,"sys","test3",0,2);
    X_52 := algebra.subselect(X_50,X_46,4,6,true,true,false);
    X_54 := algebra.subselect(X_48,X_52,0:dbl,2:dbl,true,true,false);
    X_56 := algebra.projection(X_54,X_50);
    X_49:bat[:dbl] := sql.bind(X_3,"sys","test3","y",0,1,2);
    X_51:bat[:dbl] := sql.bind(X_3,"sys","test3","x",0,1,2);
    X_47:bat[:oid] := sql.tid(X_3,"sys","test3",1,2);
    X_53 := algebra.subselect(X_51,X_47,4,6,true,true,false);
    X_55 := algebra.subselect(X_49,X_53,0:dbl,2:dbl,true,true,false);
    X_57 := algebra.projection(X_55,X_51);
    X_60 := mat.packIncrement(X_56,2);
    X_12 := mat.packIncrement(X_60,X_57);
    X_58 := algebra.projection(X_54,X_48);
    X_59 := algebra.projection(X_55,X_49);
    X_62 := mat.packIncrement(X_58,2);
    X_13 := mat.packIncrement(X_62,X_59);
    language.pass(X_50);
    language.pass(X_51);
    language.pass(X_54);
    language.pass(X_48);
    language.pass(X_55);
    language.pass(X_49);
exit X_70;
    sql.resultSet(X_31,X_32,X_33,X_34,X_35,X_12,X_13);
end user.SQLanalyze;
#explain select x,y from test where x between (7-3) and (7-1) and y between (1.0-1.0) and (4.0-2.0);
% .explain # table_name
% mal # name
% clob # type
% 69 # length
function user.SQLanalyze():void;
barrier X_70 := language.dataflow();
    X_13 := bat.new(nil:oid,nil:str);
    X_21 := bat.append(X_13,"sys.test");
    X_29 := bat.append(X_21,"sys.test");
    X_16 := bat.new(nil:oid,nil:str);
    X_23 := bat.append(X_16,"x");
    X_30 := bat.append(X_23,"y");
    X_17 := bat.new(nil:oid,nil:str);
    X_24 := bat.append(X_17,"double");
    X_31 := bat.append(X_24,"double");
    X_18 := bat.new(nil:oid,nil:int);
    X_26 := bat.append(X_18,53);
    X_32 := bat.append(X_26,53);
    X_20 := bat.new(nil:oid,nil:int);
    X_28 := bat.append(X_20,0);
    X_33 := bat.append(X_28,0);
    X_1 := sql.mvc();
    X_48:bat[:dbl] := sql.bind(X_1,"sys","test3","y",0,0,2);
    X_50:bat[:dbl] := sql.bind(X_1,"sys","test3","x",0,0,2);
    X_46:bat[:oid] := sql.tid(X_1,"sys","test3",0,2);
    X_52 := algebra.subselect(X_50,X_46,4:dbl,6:dbl,true,true,false);
    X_54 := algebra.subselect(X_48,X_52,0:dbl,2:dbl,true,true,false);
    X_56 := algebra.projection(X_54,X_50);
    X_49:bat[:dbl] := sql.bind(X_1,"sys","test3","y",0,1,2);
    X_51:bat[:dbl] := sql.bind(X_1,"sys","test3","x",0,1,2);
    X_47:bat[:oid] := sql.tid(X_1,"sys","test3",1,2);
    X_53 := algebra.subselect(X_51,X_47,4:dbl,6:dbl,true,true,false);
    X_55 := algebra.subselect(X_49,X_53,0:dbl,2:dbl,true,true,false);
    X_57 := algebra.projection(X_55,X_51);
    X_60 := mat.packIncrement(X_56,2);
    X_10 := mat.packIncrement(X_60,X_57);
    X_58 := algebra.projection(X_54,X_48);
    X_59 := algebra.projection(X_55,X_49);
    X_62 := mat.packIncrement(X_58,2);
    X_11 := mat.packIncrement(X_62,X_59);
    language.pass(X_50);
    language.pass(X_51);
    language.pass(X_54);
    language.pass(X_48);
    language.pass(X_55);
    language.pass(X_49);
exit X_70;
    sql.resultSet(X_29,X_30,X_31,X_32,X_33,X_10,X_11);
end user.SQLanalyze;
#drop table test;
#drop table test1;
#drop table test2;
#drop table test3;
#drop table test4;

# 18:37:29 >  
# 18:37:29 >  "Done."
# 18:37:29 >  

