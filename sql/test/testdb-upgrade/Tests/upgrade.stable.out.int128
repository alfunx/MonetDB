stdout of test 'upgrade` in directory 'sql/test/testdb-upgrade` itself:


# 21:49:40 >  
# 21:49:40 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=30515" "--set" "mapi_usock=/var/tmp/mtest-14642/.s.monetdb.30515" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/sjoerd/Monet-devel/var/MonetDB/mTests_sql_test_testdb-upgrade" "--set" "mal_listing=0"
# 21:49:40 >  

# MonetDB 5 server v11.16.0 (hg id: fd9db07674cf+)
# This is an unreleased version
# Serving database 'mTests_sql_test_testdb-upgrade', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information


Ready.
Running database upgrade commands:
set schema "sys";
create function fuse(one bigint, two bigint)
returns hugeint
external name udf.fuse;
create function sys.generate_series(first hugeint, last hugeint)
returns table (value hugeint)
external name generator.series;
create function sys.generate_series(first hugeint, last hugeint, stepsize hugeint)
returns table (value hugeint)
external name generator.series;
create aggregate stddev_samp(val HUGEINT) returns DOUBLE
    external name "aggr"."stdev";
create aggregate stddev_pop(val HUGEINT) returns DOUBLE
    external name "aggr"."stdevp";
create aggregate var_samp(val HUGEINT) returns DOUBLE
    external name "aggr"."variance";
create aggregate var_pop(val HUGEINT) returns DOUBLE
    external name "aggr"."variancep";
create aggregate median(val HUGEINT) returns HUGEINT
    external name "aggr"."median";
create aggregate quantile(val HUGEINT, q DOUBLE) returns HUGEINT
    external name "aggr"."quantile";
create aggregate corr(e1 HUGEINT, e2 HUGEINT) returns HUGEINT
    external name "aggr"."corr";
create function json.filter(js json, name hugeint)
returns json
external name json.filter;
drop view sys.tablestoragemodel;
create view sys.tablestoragemodel
as select "schema","table",max(count) as "count",
	sum(columnsize) as columnsize,
	sum(heapsize) as heapsize,
	sum(hashes) as hashes,
	sum(imprints) as imprints,
	sum(case when sorted = false then 8 * count else 0 end) as auxiliary
from sys.storagemodel() group by "schema","table";
insert into sys.systemfunctions (select id from sys.functions where name in ('fuse', 'generate_series', 'stddev_samp', 'stddev_pop', 'var_samp', 'var_pop', 'median', 'quantile', 'corr') and schema_id = (select id from sys.schemas where name = 'sys') and id not in (select function_id from sys.systemfunctions));
insert into sys.systemfunctions (select id from sys.functions where name = 'filter' and schema_id = (select id from sys.schemas where name = 'json') and id not in (select function_id from sys.systemfunctions));
update sys._tables set system = true where name = 'tablestoragemodel' and schema_id = (select id from sys.schemas where name = 'sys');
insert into sys.types values (13, 'hge', 'hugeint', 128, 1, 2, 7, 0);
insert into sys.types values (18, 'hge', 'decimal', 39, 1, 10, 10, 0);
set schema "testschema";

Running database upgrade commands:
set schema "sys";
GRANT EXECUTE ON FUNCTION sys.Has_Z(integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.Has_M(integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.get_type(integer, integer) TO PUBLIC;
GRANT SELECT ON sys.spatial_ref_sys TO PUBLIC;
GRANT SELECT ON sys.geometry_columns TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.mbr(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Overlaps(mbr, mbr) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Contains(mbr, mbr) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Equals(mbr, mbr) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Distance(mbr, mbr) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_WKTToSQL(string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_WKBToSQL(string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_AsText(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_AsBinary(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Dimension(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_GeometryType(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_SRID(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_SetSRID(Geometry, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_IsEmpty(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_IsSimple(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Boundary(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Envelope(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Equals(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Disjoint(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Intersects(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Touches(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Crosses(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Within(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Contains(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Overlaps(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Relate(Geometry, Geometry, string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Distance(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Intersection(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Difference(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Union(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_SymDifference(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Buffer(Geometry, double) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_ConvexHull(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_X(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Y(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Z(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_StartPoint(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_EndPoint(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_IsRing(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Length(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_IsClosed(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_NumPoints(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_PointN(Geometry, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Centroid(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_PointOnSurface(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Area(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_ExteriorRing(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_SetExteriorRing(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_NumInteriorRing(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_InteriorRingN(Geometry, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_InteriorRings(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_NumGeometries(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_GeometryN(Geometry, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_NumPatches(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_PatchN(Geometry, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_GeomFromText(string, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_PointFromText(string, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_LineFromText(string, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_PolygonFromText(string, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_MPointFromText(string, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_MLineFromText(string, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_MPolyFromText(string, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_GeomCollFromText(string, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_BdPolyFromText(string, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_BdMPolyFromText(string, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_GeometryFromText(string, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_GeomFromText(string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_GeometryFromText(string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_PointFromText(string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_LineFromText(string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_PolygonFromText(string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_MPointFromText(string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_MLineFromText(string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_MPolyFromText(string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_GeomCollFromText(string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_MakePoint(double, double) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Point(double, double) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_MakePoint(double, double, double) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_MakePoint(double, double, double, double) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_MakePointM(double, double, double) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_MakeLine(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_MakeEnvelope(double, double, double, double, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_MakeEnvelope(double, double, double, double) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_MakePolygon(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Polygon(Geometry, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_MakeBox2D(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.GeometryType(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_CoordDim(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_IsValid(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_IsValidReason(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_NPoints(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_NRings(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_NumInteriorRings(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_XMax(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_XMax(mbr) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_XMin(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_XMin(mbr) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_YMax(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_YMax(mbr) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_YMin(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_YMin(mbr) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Force2D(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Force3D(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Segmentize(Geometry, double) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.getProj4(integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.InternalTransform(Geometry, integer, integer, string, string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Transform(Geometry, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Translate(Geometry, double, double) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Translate(Geometry, double, double, double) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_AsEWKT(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Covers(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_CoveredBy(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_DWithin(Geometry, Geometry, double) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Length2D(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Collect(Geometry, Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_DelaunayTriangles(Geometry, double, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_Dump(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.ST_DumpPoints(Geometry) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.Contains(Geometry, double, double) TO PUBLIC;
set schema "testschema";

Running database upgrade commands:
set schema "sys";
GRANT EXECUTE ON FUNCTION sys.getAnchor(url) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.getBasename(url) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.getContent(url) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.getContext(url) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.getDomain(url) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.getExtension(url) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.getFile(url) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.getHost(url) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.getPort(url) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.getProtocol(url) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.getQuery(url) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.getUser(url) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.getRobotURL(url) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.isaURL(url) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.newurl(STRING, STRING, INT, STRING) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.newurl(STRING, STRING, STRING) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys."broadcast"(inet) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys."host"(inet) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys."masklen"(inet) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys."setmasklen"(inet, int) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys."netmask"(inet) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys."hostmask"(inet) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys."network"(inet) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys."text"(inet) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys."abbrev"(inet) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys."left_shift"(inet, inet) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys."right_shift"(inet, inet) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys."left_shift_assign"(inet, inet) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys."right_shift_assign"(inet, inet) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_samp(TINYINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_samp(SMALLINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_samp(INTEGER) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_samp(WRD) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_samp(BIGINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_samp(REAL) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_samp(DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_samp(DATE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_samp(TIME) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_samp(TIMESTAMP) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_pop(TINYINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_pop(SMALLINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_pop(INTEGER) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_pop(WRD) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_pop(BIGINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_pop(REAL) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_pop(DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_pop(DATE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_pop(TIME) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_pop(TIMESTAMP) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_samp(TINYINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_samp(SMALLINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_samp(INTEGER) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_samp(WRD) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_samp(BIGINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_samp(REAL) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_samp(DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_samp(DATE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_samp(TIME) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_samp(TIMESTAMP) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_pop(TINYINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_pop(SMALLINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_pop(INTEGER) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_pop(WRD) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_pop(BIGINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_pop(REAL) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_pop(DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_pop(DATE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_pop(TIME) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_pop(TIMESTAMP) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.median(TINYINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.median(SMALLINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.median(INTEGER) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.median(WRD) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.median(BIGINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.median(DECIMAL) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.median(REAL) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.median(DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.median(DATE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.median(TIME) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.median(TIMESTAMP) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.quantile(TINYINT, DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.quantile(SMALLINT, DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.quantile(INTEGER, DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.quantile(WRD, DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.quantile(BIGINT, DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.quantile(DECIMAL, DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.quantile(REAL, DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.quantile(DOUBLE, DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.quantile(DATE, DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.quantile(TIME, DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.quantile(TIMESTAMP, DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.corr(TINYINT, TINYINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.corr(SMALLINT, SMALLINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.corr(INTEGER, INTEGER) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.corr(WRD, WRD) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.corr(BIGINT, BIGINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.corr(REAL, REAL) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.corr(DOUBLE, DOUBLE) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.filter(json, string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.filter(json, tinyint) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.filter(json, integer) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.filter(json, bigint) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.text(json, string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.number(json) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json."integer"(json) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.isvalid(string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.isobject(string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.isarray(string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.isvalid(json) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.isobject(json) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.isarray(json) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.length(json) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.keyarray(json) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.valuearray(json) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.text(json) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.text(string) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.text(int) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE json.output(json) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE json.tojsonarray(string) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE json.tojsonarray(double) TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.uuid() TO PUBLIC;
GRANT EXECUTE ON FUNCTION sys.isaUUID(string) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_samp(HUGEINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.stddev_pop(HUGEINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_samp(HUGEINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.var_pop(HUGEINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.median(HUGEINT) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.quantile(HUGEINT, DOUBLE) TO PUBLIC;
GRANT EXECUTE ON AGGREGATE sys.corr(HUGEINT, HUGEINT) TO PUBLIC;
GRANT EXECUTE ON FUNCTION json.filter(json, hugeint) TO PUBLIC;
set schema "testschema";


# 11:43:08 >  
# 11:43:08 >  "/usr/bin/python2" "upgrade.SQL.py" "upgrade"
# 11:43:08 >  

#select count(*) from testschema.smallstring;
% testschema.L1 # table_name
% L1 # name
% wrd # type
% 2 # length
[ 66	]

# 21:49:42 >  
# 21:49:42 >  "Done."
# 21:49:42 >  

